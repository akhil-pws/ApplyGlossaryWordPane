{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane/./src/taskpane/index.html","webpack://office-addin-taskpane/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://office-addin-taskpane/webpack/bootstrap","webpack://office-addin-taskpane/webpack/runtime/compat get default export","webpack://office-addin-taskpane/webpack/runtime/define property getters","webpack://office-addin-taskpane/webpack/runtime/global","webpack://office-addin-taskpane/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane/webpack/runtime/publicPath","webpack://office-addin-taskpane/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane/./src/taskpane/taskpane.ts","webpack://office-addin-taskpane/./src/taskpane/data.ts"],"sourcesContent":["// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Link addin</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/11.0.0/css/fabric.min.css\\\"/> <link href=\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\\\" rel=\\\"stylesheet\\\" integrity=\\\"sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65\\\" crossorigin=\\\"anonymous\\\"> <link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\\\"> <link href=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\\\" integrity=\\\"sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4\\\" crossorigin=\\\"anonymous\\\"><\" + \"/script> <div id=\\\"header-nav\\\"> <div class=\\\"logo-header d-flex w-100 justify-content-between align-items-center bg-light\\\" id=\\\"logo-header\\\"> </div> <div class=\\\"header bg-dark mb-2\\\" id=\\\"header\\\"> </div> </div> <main id=\\\"app-body\\\" class=\\\"d-block mh-34\\\"> <div id=\\\"ai-tag-list-container\\\" class=\\\"accordion\\\"></div> </main> <div id=\\\"footer\\\" class=\\\"py-2 text-center footer\\\"> </div> </body> </html>\";\n// Exports\nexport default code;","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n\n  // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n  url = String(url.__esModule ? url.default : url);\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n * See LICENSE in the project root for license information.\r\n */\r\n\r\nimport { dataUrl, storeUrl, versionLink } from \"./data\";\r\nlet jwt = '';\r\nlet baseUrl = dataUrl\r\nlet storedUrl = storeUrl\r\nlet documentID = ''\r\nlet organizationName = ''\r\nlet aiTagList = [];\r\nlet initialised = true;\r\nlet availableKeys = [];\r\nlet glossaryName = ''\r\nlet isGlossaryActive: boolean = false;\r\nlet imageList = [];\r\nlet GroupName: string = '';\r\nlet layTerms = [];\r\nlet dataList: any = []\r\nlet isTagUpdating: boolean = false;\r\nlet capturedFormatting: any = {};\r\nlet emptyFormat: boolean = false;\r\nlet isNoFormatTextAvailable: boolean = false;\r\nlet clientId = '0';\r\nlet userId = 0;\r\nlet clientList = [];\r\nlet version = versionLink;\r\nlet currentYear = new Date().getFullYear();\r\nlet sourceList;\r\nlet filteredGlossaryTerm;\r\n\r\n\r\n/* global document, Office, Word */\r\n\r\nwindow.addEventListener('hashchange', () => {\r\n  const hash = window.location.hash;\r\n  if (hash === '#/dashboard' && initialised) {\r\n    initialised = false;\r\n    displayMenu();\r\n\r\n  }\r\n});\r\n\r\n\r\nOffice.onReady((info) => {\r\n  if (info.host === Office.HostType.Word) {\r\n    document.getElementById(\"app-body\").style.display = \"flex\";\r\n    document.getElementById(\"footer\").innerText = `© ${currentYear} - TrialAssure LINK AI Assistant ${version}`\r\n    const editor = document.getElementById('editor');\r\n\r\n    window.location.hash = '#/login';\r\n    retrieveDocumentProperties()\r\n  }\r\n});\r\n\r\n\r\n// Example usage:\r\n\r\n\r\n\r\nasync function retrieveDocumentProperties() {\r\n  try {\r\n    await Word.run(async (context) => {\r\n      const properties = context.document.properties.customProperties;\r\n      properties.load(\"items\");\r\n\r\n      await context.sync();\r\n      const property = properties.items.find(prop => prop.key === 'DocumentID');\r\n      const orgName = properties.items.find(prop => prop.key === 'Organization');\r\n      if (property && orgName) {\r\n        documentID = property.value;\r\n        organizationName = orgName.value;\r\n        login()\r\n      } else {\r\n        document.getElementById('app-body').innerHTML = `\r\n        <p class=\"px-3 text-center\">Export a document from the LINK AI application to use this functionality.</p>`\r\n        console.log(`Custom property \"documentID\" not found.`);\r\n        return null;\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error retrieving custom property:\", error);\r\n  }\r\n\r\n}\r\n\r\nasync function login() {\r\n  // document.getElementById('header').innerHTML = ``\r\n  const sessionToken = sessionStorage.getItem('token');\r\n  console.log(sessionToken)\r\n  if (sessionToken) {\r\n    jwt = sessionToken;\r\n    window.location.hash = '#/dashboard';\r\n  } else {\r\n    loadLoginPage();\r\n  }\r\n}\r\n\r\nfunction loadLoginPage() {\r\n\r\n\r\n  document.getElementById('app-body').innerHTML = `\r\n    <div class=\"container mt-5\">\r\n      <form id=\"login-form\" class=\"p-4 border rounded\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"organization\" class=\"form-label fw-bold\">Organization</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"organization\" required>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"username\" class=\"form-label fw-bold\">Username</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"username\" required>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"password\" class=\"form-label fw-bold\">Password</label>\r\n          <input type=\"password\" class=\"form-control\" id=\"password\" required>\r\n        </div>\r\n        <div class=\"d-grid\">\r\n          <button type=\"submit\" class=\"btn btn-primary bg-primary-clr\">Login</button>\r\n        </div>\r\n      <div id=\"login-error\" class=\"mt-3 text-danger\" style=\"display: none;\"></div>\r\n\r\n      </form>\r\n    </div>\r\n  `;\r\n\r\n  document.getElementById('login-form').addEventListener('submit', handleLogin);\r\n}\r\n\r\nasync function handleLogin(event) {\r\n  event.preventDefault();\r\n\r\n  // Get the values from the form fields\r\n  const organization = (document.getElementById('organization') as HTMLInputElement).value;\r\n  const username = (document.getElementById('username') as HTMLInputElement).value;\r\n  const password = (document.getElementById('password') as HTMLInputElement).value;\r\n  if (organization.toLowerCase().trim() === organizationName.toLocaleLowerCase().trim()) {\r\n    document.getElementById('app-body').innerHTML = `\r\n  <div id=\"button-container\">\r\n\r\n          <div class=\"loader\" id=\"loader\"></div>\r\n          </div\r\n`\r\n    try {\r\n      const response = await fetch(`${baseUrl}/api/user/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          ClientName: organization,\r\n          Username: username,\r\n          Password: password\r\n        })\r\n      });\r\n\r\n\r\n      if (!response.ok) {\r\n        showLoginError(\"An error occurred during login. Please try again.\")\r\n        throw new Error('Network response was not ok.');\r\n      }\r\n\r\n      const data = await response.json();\r\n      if (data.Status === true && data['Data']) {\r\n        if (data['Data'].ResponseStatus) {\r\n          jwt = data.Data.Token;\r\n          sessionStorage.setItem('token', jwt)\r\n          sessionStorage.setItem('userId', data.Data.ID);\r\n          window.location.hash = '#/dashboard';\r\n\r\n        } else {\r\n          showLoginError(\"An error occurred during login. Please try again.\")\r\n        }\r\n      } else {\r\n        showLoginError(\"An error occurred during login. Please try again.\")\r\n      }\r\n\r\n\r\n      // Handle successful login (e.g., navigate to the next page or show a success message)\r\n\r\n    } catch (error) {\r\n      showLoginError(\"An error occurred during login. Please try again.\")\r\n      console.error('Error during login:', error);\r\n      // Handle login error (e.g., show an error message)\r\n    }\r\n  } else {\r\n    showLoginError(\"The organization specified is not associated with this document\")\r\n  }\r\n}\r\n\r\nfunction showLoginError(message) {\r\n  loadLoginPage();  // Reload the form UI\r\n  const errorDiv = document.getElementById('login-error');\r\n  errorDiv.style.display = 'block';\r\n  errorDiv.textContent = message;\r\n}\r\n\r\nfunction displayMenu() {\r\n  userId = Number(sessionStorage.getItem('userId'))\r\n  // document.getElementById('aitag').addEventListener('click', redirectAI);\r\n  fetchDocument('Init');\r\n\r\n}\r\n\r\nasync function fetchDocument(action) {\r\n  try {\r\n    const response = await fetch(`${baseUrl}/api/report/id/${documentID}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${jwt}`\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok.');\r\n    }\r\n\r\n    const data = await response.json();\r\n    document.getElementById('app-body').innerHTML = ``\r\n    document.getElementById('logo-header').innerHTML = `\r\n        <img  id=\"main-logo\" src=\"${storedUrl}/assets/logo.png\" alt=\"\" class=\"logo\"> <i class=\"fa fa-sign-out me-5 c-pointer ngb-tooltip\" aria-hidden=\"true\" id=\"logout\"><span class=\"tooltiptext\">Logout</span></i>\r\n`\r\n    document.getElementById('header').innerHTML = `\r\n    <div class=\"d-flex justify-content-around\">\r\n        <button class=\"btn btn-dark\" id=\"mention\">Insert</button>\r\n        <button class=\"btn btn-dark\" id=\"aitag\">Refine</button>\r\n\r\n        <!-- Dropdown for Formatting -->\r\n        <div class=\"dropdown\">\r\n            <button class=\"btn btn-dark dropdown-toggle\" type=\"button\" id=\"formatDropdown\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                Actions\r\n            </button>\r\n            <ul class=\"dropdown-menu\" aria-labelledby=\"formatDropdown\" style=\"z-index: 100000;\">\r\n                <li><button class=\"dropdown-item\" id=\"selectFormat\">Define Formatting</button></li>\r\n                <li><button class=\"dropdown-item\" id=\"glossary\" disabled>Glossary</button></li>\r\n                <li><button class=\"dropdown-item\" id=\"removeFormatting\" disabled>Remove Formatted Text</button></li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n`\r\n    document.getElementById('mention').addEventListener('click', () => {\r\n      setActiveButton('mention');\r\n      displayMentions();\r\n    });\r\n\r\n    document.getElementById('glossary').addEventListener('click', () => {\r\n      setActiveButton('formatDropdown');\r\n      fetchGlossary()\r\n    });\r\n\r\n    document.getElementById('aitag').addEventListener('click', () => {\r\n      setActiveButton('aitag');\r\n      displayAiTagList();\r\n    });\r\n    document.getElementById('selectFormat').addEventListener('click', () => {\r\n      setActiveButton('formatDropdown');\r\n      formatOptionsDisplay();\r\n    });\r\n    document.getElementById('removeFormatting').addEventListener('click', () => {\r\n      setActiveButton('formatDropdown');\r\n      removeOptionsConfirmation();\r\n    });\r\n\r\n    document.getElementById('logout').addEventListener('click', logout);\r\n\r\n    dataList = data['Data'];\r\n    sourceList = dataList.SourceTypeList.filter(\r\n      (item) => item.SourceValue !== ''\r\n        && item.AIFlag === 1\r\n    ) // Filter items with an extension\r\n      .map((item) => ({\r\n        ...item, // Spread the existing properties\r\n        SourceName: transformDocumentName(item.SourceValue)\r\n      }));\r\n    clientId = dataList.ClientID;\r\n    const aiGroup = data['Data'].Group.find(element => element.DisplayName === 'AIGroup');\r\n    GroupName = aiGroup ? aiGroup.Name : '';\r\n    aiTagList = aiGroup ? aiGroup.GroupKey : [];\r\n\r\n    availableKeys = data['Data'].GroupKeyAll.filter(element => element.ComponentKeyDataType === 'TABLE' || element.ComponentKeyDataType === 'TEXT');\r\n    availableKeys.forEach((key) => {\r\n      if (key.AIFlag === 1) {\r\n        const regex = /<TableStart>([\\s\\S]*?)<TableEnd>/gi;\r\n\r\n        let match;\r\n        if ((match = regex.exec(key.EditorValue) !== null)) {\r\n          {\r\n            key.EditorValue = updateEditorFinalTable(key.EditorValue);\r\n            key.UserValue = key.EditorValue;\r\n            key.InitialTable = true;\r\n            key.ComponentKeyDataType = 'TABLE';\r\n          }\r\n\r\n        }\r\n      }\r\n    });\r\n\r\n    aiTagList.forEach((key, i) => {\r\n      const regex = /<TableStart>([\\s\\S]*?)<TableEnd>/gi;\r\n\r\n      let match;\r\n      if ((match = regex.exec(key.EditorValue) !== null)) {\r\n        {\r\n          key.EditorValue = updateEditorFinalTable(key.EditorValue);\r\n          key.UserValue = key.EditorValue;\r\n          key.InitialTable = true;\r\n          key.ComponentKeyDataType = 'TABLE';\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    );\r\n\r\n    fetchClients();\r\n\r\n    if (action === 'Init') {\r\n      setActiveButton('aitag');\r\n      displayAiTagList();\r\n    } else {\r\n      setActiveButton('aitag');\r\n    }\r\n\r\n\r\n    if (action === 'AIpanel') {\r\n      displayAiTagList();\r\n    }\r\n\r\n\r\n  } catch (error) {\r\n    console.error('Error fetching glossary data:', error);\r\n  }\r\n}\r\n\r\nfunction setActiveButton(buttonId) {\r\n  const buttons = ['mention', 'aitag', 'selectFormat', 'removeFormatting', 'formatDropdown'];\r\n  buttons.forEach(id => {\r\n    const button = document.getElementById(id);\r\n    if (button) {\r\n      if (id === buttonId) {\r\n        button.classList.add('active');\r\n      } else {\r\n        button.classList.remove('active');\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nasync function fetchClients() {\r\n  try {\r\n    const response = await fetch(`${baseUrl}/api/client/all/${userId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${jwt}`\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok.');\r\n    }\r\n\r\n\r\n\r\n    const data = await response.json();\r\n    clientList = data['Data'];\r\n  } catch (error) {\r\n  }\r\n}\r\n\r\n\r\n\r\nasync function formatOptionsDisplay() {\r\n  if (!isTagUpdating) { // Check if isTagUpdating is false\r\n    if (isGlossaryActive) {\r\n      await removeMatchingContentControls();\r\n    }\r\n    const htmlBody = `\r\n      <div class=\"container mt-3\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n               <!-- Buttons for Capture and Empty Format -->\r\n            <div class=\"d-flex justify-content-end\">\r\n              <button id=\"capture-format-btn\" class=\"btn btn-primary bg-primary-clr\"><i class=\"fa fa-border-style me-1\"></i>  Capture Format</button>\r\n            </div>\r\n            <!-- <h5 class=\"card-title\">Formatting Options</h5> -->\r\n          </div>\r\n          <div class=\"card-body\">\r\n          <div class=\"formating-checkbox\">\r\n               <input type=\"checkbox\" id=\"empty-format-checkbox\" class=\"form-check-input\">\r\n              <label for=\"empty-format-checkbox\" class=\"form-check-label empty-format-checkbox-label\" style=\"flex: 1;\">\r\n                   Skip ignoring and removing format-based text\r\n              </label>\r\n            </div>\r\n\r\n            <!-- Section to display captured formatting -->\r\n            <div id=\"format-details\">\r\n              <h5 class=\"my-3\">Selected Formatting:</h5>\r\n              <ul id=\"format-list\" class=\"list-unstyled\"></ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n\r\n    document.getElementById('app-body').innerHTML = htmlBody;\r\n    if (Object.keys(capturedFormatting).length === 0) {\r\n      const formatDetails = document.getElementById(\"format-details\");\r\n      formatDetails.style.display = 'none';\r\n      // The object is not empty\r\n    }\r\n\r\n    const glossaryBtn = document.getElementById('glossary') as HTMLButtonElement;\r\n    glossaryBtn.disabled = true;\r\n    if (emptyFormat) {\r\n      clearCapturedFormatting();\r\n    }\r\n    else {\r\n      if (capturedFormatting.Bold === null || capturedFormatting.Bold === undefined ||\r\n        capturedFormatting.Underline === 'Mixed' || capturedFormatting.Underline === undefined ||\r\n        capturedFormatting.Size === null || capturedFormatting.Size === undefined ||\r\n        capturedFormatting[\"Font Name\"] === null || capturedFormatting[\"Font Name\"] === undefined ||\r\n        capturedFormatting[\"Background Color\"] === '' || capturedFormatting[\"Background Color\"] === undefined ||\r\n        capturedFormatting[\"Text Color\"] === '' || capturedFormatting[\"Text Color\"] === undefined) {\r\n        const formatList = document.getElementById(\"format-list\");\r\n        formatList.innerHTML = \"<p>Multiple style values found. Try again</p>\";\r\n        const removeFormatBtn = document.getElementById('removeFormatting') as HTMLButtonElement;\r\n        removeFormatBtn.disabled = true;\r\n      } else {\r\n        const removeFormatBtn = document.getElementById('removeFormatting') as HTMLButtonElement;\r\n        removeFormatBtn.disabled = false;\r\n        displayCapturedFormatting();\r\n      }\r\n    }\r\n    // Event listeners for the buttons\r\n\r\n    document.getElementById(\"capture-format-btn\").addEventListener(\"click\", captureFormatting);\r\n\r\n    const emptyFormatCheckbox = document.getElementById(\"empty-format-checkbox\") as HTMLInputElement;\r\n    if (isNoFormatTextAvailable) {\r\n      emptyFormatCheckbox.checked = true;\r\n      clearCapturedFormatting();\r\n    }\r\n\r\n    emptyFormatCheckbox.addEventListener(\"change\", () => {\r\n      if (emptyFormatCheckbox.checked) {\r\n        isNoFormatTextAvailable = true;\r\n        clearCapturedFormatting();\r\n      } else {\r\n        const CaptureBtn = document.getElementById('capture-format-btn') as HTMLButtonElement;\r\n        CaptureBtn.disabled = false;\r\n        isNoFormatTextAvailable = false;\r\n        emptyFormat = false;\r\n        const glossaryBtn = document.getElementById('glossary') as HTMLButtonElement;\r\n        glossaryBtn.disabled = true;\r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction displayCapturedFormatting() {\r\n  emptyFormat = false;\r\n  const formatList = document.getElementById(\"format-list\");\r\n  formatList.innerHTML = \"\"; // Clear the list before adding new items\r\n\r\n  for (const [key, value] of Object.entries(capturedFormatting)) {\r\n    if ((key === \"Text Color\" || key === \"Background Color\") && value) {\r\n      formatList.innerHTML += `\r\n        <li><strong>${key}:</strong>${value}\r\n          <span style=\"display:inline-block;width:15px;height:15px;background-color:${value};border:1px solid black;\"></span>\r\n        </li>\r\n      `;\r\n    } else {\r\n      formatList.innerHTML += `<li><strong>${key}:</strong> ${value}</li>`;\r\n    }\r\n  }\r\n}\r\n\r\nfunction clearCapturedFormatting() {\r\n  capturedFormatting = {}; // Clear the captured formatting object\r\n  const formatDetails = document.getElementById(\"format-details\");\r\n  formatDetails.style.display = 'none';\r\n  // formatList.innerHTML = `<li>No formatting selected.</li>`;\r\n  emptyFormat = true;\r\n  const glossaryBtn = document.getElementById('glossary') as HTMLButtonElement;\r\n  glossaryBtn.disabled = false;\r\n  const CaptureBtn = document.getElementById('capture-format-btn') as HTMLButtonElement;\r\n  CaptureBtn.disabled = true;\r\n\r\n  const removeFormatBtn = document.getElementById('removeFormatting') as HTMLButtonElement;\r\n  removeFormatBtn.disabled = true;\r\n\r\n  console.log(\"Captured formatting cleared.\");\r\n}\r\n\r\nasync function captureFormatting() {\r\n  try {\r\n    await Word.run(async (context) => {\r\n      const selection = context.document.getSelection();\r\n      const font = selection.font;\r\n      font.load([\"bold\", \"italic\", \"underline\", \"size\", \"highlightColor\", \"name\", 'color']);\r\n\r\n      await context.sync();\r\n\r\n      capturedFormatting = {\r\n        Bold: font.bold,\r\n        Italic: font.italic,\r\n        Underline: font.underline,\r\n        Size: font.size,\r\n        \"Background Color\": font.highlightColor,\r\n        \"Font Name\": font.name,\r\n        'Text Color': font.color\r\n      };\r\n\r\n\r\n\r\n      const formatDetails = document.getElementById(\"format-details\");\r\n      formatDetails.style.display = 'block';\r\n\r\n      if (capturedFormatting.Bold === null ||\r\n        capturedFormatting.Underline === 'Mixed' ||\r\n        capturedFormatting.Size === null ||\r\n        capturedFormatting[\"Font Name\"] === null ||\r\n        capturedFormatting[\"Background Color\"] === '' ||\r\n        capturedFormatting[\"Text Color\"] === ''\r\n\r\n      ) {\r\n        const formatList = document.getElementById(\"format-list\");\r\n        formatList.innerHTML = \"<p>Multiple style values found. Try again</p>\";\r\n        const removeFormatBtn = document.getElementById('removeFormatting') as HTMLButtonElement;\r\n        removeFormatBtn.disabled = true;\r\n      } else {\r\n        const removeFormatBtn = document.getElementById('removeFormatting') as HTMLButtonElement;\r\n        removeFormatBtn.disabled = false;\r\n        displayCapturedFormatting();\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error capturing formatting:\", error);\r\n  }\r\n}\r\n\r\n\r\n\r\nasync function removeOptionsConfirmation() {\r\n  if (!isTagUpdating) {\r\n    if (isGlossaryActive) {\r\n      await removeMatchingContentControls();\r\n    } // Check if isTagUpdating is false\r\n    const htmlBody = `\r\n      <div class=\"container mt-3\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            <h5 class=\"card-title\">Are you sure you want to remove formatted text ?</h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n          <div id=\"format-details\">\r\n              <h5>Selected Formatting:</h5>\r\n              <ul id=\"format-list\" class=\"list-unstyled mb-3\"></ul>\r\n              <small class=\"text-secondary font-italic\" id=\"warning-rem-fmt\"></small>\r\n             \r\n            </div>\r\n               <!-- Buttons for Capture and Empty Format -->\r\n            <div class=\"d-flex justify-content-end mt-2\">\r\n              <button id=\"change-ft-btn\" class=\"btn btn-danger bg-danger-clr px-3 me-2\"><i class=\"fa fa-reply me-2\"></i>Cancel</button>\r\n              <button id=\"clear-ft-btn\" class=\"btn btn-success bg-success-clr px-3\"><i class=\"fa fa-check-circle me-2\"></i>Yes</button>\r\n\r\n            </div>\r\n\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n\r\n\r\n    document.getElementById('app-body').innerHTML = htmlBody;\r\n    displayCapturedFormatting();\r\n\r\n    if (capturedFormatting['Background Color'] === null &&\r\n      capturedFormatting['Text Color'] === '#000000') {\r\n      const warningEle = document.getElementById('warning-rem-fmt').innerHTML = 'Warning : The captured formatting is broad. This might result in unintended text removal throughout the document. Proceed?'\r\n    }\r\n\r\n    // Event listeners for the buttons\r\n    document.getElementById(\"clear-ft-btn\").addEventListener(\"click\", removeFormattedText);\r\n    document.getElementById(\"change-ft-btn\").addEventListener(\"click\", formatOptionsDisplay);\r\n\r\n  }\r\n}\r\n\r\nasync function removeFormattedText() {\r\n  try {\r\n    await Word.run(async (context) => {\r\n\r\n      const iconelement = document.getElementById(`clear-ft-btn`);\r\n      iconelement.innerHTML = `<i class=\"fa fa-spinner fa-spin text-white me-2\"></i>Yes`;\r\n      const clrBtn = document.getElementById('clear-ft-btn') as HTMLButtonElement;\r\n      clrBtn.disabled = true;\r\n\r\n      const changeBtn = document.getElementById('change-ft-btn') as HTMLButtonElement;\r\n      changeBtn.disabled = true;\r\n      const paragraphs = context.document.body.paragraphs;\r\n      paragraphs.load(\"items\"); // Load paragraphs from the body\r\n\r\n      await context.sync();\r\n\r\n      // Iterate through each paragraph in the document body\r\n      for (const paragraph of paragraphs.items) {\r\n        // Check if the paragraph contains text\r\n        if (paragraph.text.trim() !== \"\") {\r\n          const textRanges = paragraph.split([\" \"]); // Split paragraph into individual words/segments\r\n          textRanges.load(\"items, font\");\r\n\r\n          await context.sync();\r\n\r\n          for (const range of textRanges.items) {\r\n            const font = range.font;\r\n            font.load([\"bold\", \"italic\", \"underline\", \"size\", \"highlightColor\", \"name\", \"color\"]);\r\n\r\n            await context.sync();\r\n\r\n            // Check if the text range matches the captured formatting\r\n            if (\r\n              font.highlightColor === capturedFormatting['Background Color'] &&\r\n              font.color === capturedFormatting['Text Color'] &&\r\n              font.bold === capturedFormatting['Bold'] &&\r\n              font.italic === capturedFormatting['Italic'] &&\r\n              font.size === capturedFormatting['Size'] &&\r\n              font.underline === capturedFormatting['Underline'] &&\r\n              font.name === capturedFormatting['Font Name']\r\n            ) {\r\n              // Clear the range whether it's a full word or part of a word\r\n              font.highlightColor = \"#FFFFFF\"; // Set new background color\r\n              font.color = \"#000000\"; // Set new text color\r\n              font.bold = false; // Reset bold if needed\r\n              font.italic = false; // Reset italic if needed\r\n              font.underline = \"None\";\r\n              paragraph.insertText(\" \", Word.InsertLocation.replace);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      await context.sync();\r\n      capturedFormatting = {}; // Clear the captured formatting object\r\n      const formatDetails = document.getElementById(\"format-details\");\r\n      formatDetails.style.display = 'none';\r\n      // formatList.innerHTML = `<li>No formatting selected.</li>`;\r\n      emptyFormat = true;\r\n      isNoFormatTextAvailable = true;\r\n      const glossaryBtn = document.getElementById('glossary') as HTMLButtonElement;\r\n      glossaryBtn.disabled = false;\r\n      formatOptionsDisplay()\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error removing formatted text:\", error);\r\n  }\r\n}\r\n\r\n\r\nasync function fetchAIHistory(tag) {\r\n  try {\r\n    const response = await fetch(`${baseUrl}/api/report/ai-history/${tag.ID}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${jwt}`\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok.');\r\n    }\r\n\r\n    const data = await response.json();\r\n    tag.ReportHeadAIHistoryList = data['Data'] || [];\r\n    tag.FilteredReportHeadAIHistoryList = [];\r\n    tag.ReportHeadAIHistoryList.forEach((historyList, i) => {\r\n      historyList.Response = removeQuotes(historyList.Response);\r\n      tag.FilteredReportHeadAIHistoryList.unshift(historyList);\r\n\r\n    });\r\n    return tag.FilteredReportHeadAIHistoryList;\r\n\r\n  } catch (error) {\r\n    console.error('Error fetching AI history:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\n\r\nasync function generateRadioButtons(tag: any, index: number): Promise<string> {\r\n  if (!tag.FilteredReportHeadAIHistoryList || tag.FilteredReportHeadAIHistoryList.length === 0) {\r\n    await fetchAIHistory(tag);\r\n  }\r\n\r\n  if (tag.FilteredReportHeadAIHistoryList.length > 0) {\r\n    // Generate the HTML\r\n    const html = tag.FilteredReportHeadAIHistoryList.map((chat: any, j: number) =>\r\n      `<div class=\"row chatbox m-0 p-0\">\r\n        <div class=\"col-md-12 mt-2 p-2\">\r\n          <span class=\"ms-3\">\r\n            <i class=\"fa fa-copy text-secondary c-pointer\" title=\"Copy Response\" id=\"copyPrompt-${index}-${j}\"></i>\r\n          </span>\r\n          <span class=\"float-end w-75 me-3\">\r\n            <div class=\"form-control h-34 d-flex align-items-center dynamic-height user\">\r\n              ${chat.Prompt}\r\n            </div>\r\n          </span>\r\n        </div>\r\n        <div class=\"col-md-12 mt-2 p-2 d-flex align-items-center\">\r\n          <span class=\"radio-select\">\r\n            <input class=\"form-check-input c-pointer\" type=\"radio\" name=\"flexRadioDefault-${index}\"\r\n              id=\"flexRadioDefault1-${index}-${j}\" ${chat.Selected === 1 ? 'checked' : ''}>\r\n          </span>\r\n          <span class=\"ms-2 w-75\">\r\n            <div class=\"form-control h-34 d-flex align-items-center dynamic-height ai-reply ${chat.Selected === 1 ? 'ai-selected-reply' : 'bg-light'}\" id='selected-response-${index}${j}'>\r\n              ${chat.Response}\r\n            </div>\r\n          </span>\r\n          <span class=\"ms-2\">\r\n            <i class=\"fa fa-copy text-secondary c-pointer\" title=\"Copy Response\" id=\"copyResponse-${index}-${j}\"></i>\r\n          </span>\r\n        </div>\r\n\r\n\r\n      </div>`\r\n    ).join('');\r\n\r\n    // Attach event listeners after the HTML is inserted\r\n    setTimeout(() => {\r\n      tag.FilteredReportHeadAIHistoryList.forEach((chat: any, j: number) => {\r\n        document.getElementById(`copyPrompt-${index}-${j}`)?.addEventListener('click', () => copyText(chat.Prompt));\r\n        document.getElementById(`copyResponse-${index}-${j}`)?.addEventListener('click', () => copyText(chat.Response));\r\n        document.getElementById(`flexRadioDefault1-${index}-${j}`)?.addEventListener('change', () => onRadioChange(tag, index, j));\r\n\r\n      });\r\n    }, 0);\r\n\r\n    return html;\r\n  } else {\r\n    return '<div>No AI history available.</div>';\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nfunction accordionContent(headerId, collapseId, tag, radioButtonsHTML, i) {\r\n  const textColorClass = tag.IsApplied ? 'text-secondary' : '';\r\n  const tooltipButton = tag.Sources\r\n    ? `  <span class=\"tooltiptext\">${tag.Sources}</span>`\r\n    : '<span class=\"tooltiptext\">Source</span>';\r\n  const body = `\r\n    <div class=\"accordion-item\">\r\n      <h2 class=\"accordion-header\" id=\"${headerId}\">\r\n        <button class=\"accordion-button collapsed ${textColorClass}\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#${collapseId}\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"${collapseId}\">\r\n          <span id=\"tagname-${i}\">${tag.DisplayName}</span>\r\n        </button>\r\n      </h2>\r\n      <div id=\"${collapseId}\"\r\n           class=\"accordion-collapse collapse\"\r\n           aria-labelledby=\"${headerId}\"\r\n           data-bs-parent=\"#accordionExample\">\r\n        <div class=\"accordion-body p-0\" id=\"accordion-body-${i}\">\r\n          <div class=\"chatbox\" id=\"selected-response-parent-${i}\">\r\n            ${radioButtonsHTML}\r\n          </div>\r\n          <div class=\"form-check form-switch chatbox m-0\">\r\n            <label class=\"form-check-label pb-3\" for=\"doNotApply-${i}\">\r\n              <span class=\"fs-12\">Do not apply</span>\r\n            </label>\r\n            <input class=\"form-check-input\"\r\n                   type=\"checkbox\"\r\n                   id=\"doNotApply-${i}\"\r\n                   ${tag.IsApplied ? 'checked' : ''}>\r\n          </div>\r\n          <div class=\"d-flex align-items-end justify-content-end chatbox p-2\" id=\"box-bottom-${i}\">\r\n            <textarea class=\"form-control\"\r\n                      rows=\"5\"\r\n                      id=\"chatbox-${i}\"\r\n                      placeholder=\"Type here\"></textarea>\r\n            <div id=\"mention-dropdown-${i}\" class=\"dropdown-menu\"></div>\r\n            <div class=\"d-flex flex-column align-self-end me-3\">\r\n              <button class=\"btn btn-secondary text-light ms-2 mb-2 ngb-tooltip\" id=\"insert-tag-${i}\">\r\n                <span class=\"tooltiptext\">Insert</span>\r\n                <i class=\"fa fa-plus text-light c-pointer\"></i>\r\n              </button>\r\n              <button class=\"btn btn-secondary ms-2 mb-2 text-white ngb-tooltip\" id=\"changeSource-${i}\">\r\n                ${tooltipButton}\r\n                <i class=\"fa fa-file-lines text-white\"></i>\r\n              </button>\r\n              <button type=\"submit\" class=\"btn btn-primary bg-primary-clr ms-2 text-white ngb-tooltip\" id=\"sendPrompt-${i}\">\r\n              <span class=\"tooltiptext\">Send</span>\r\n                <i class=\"fa fa-paper-plane text-white\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>`;\r\n  return body;\r\n}\r\n\r\nasync function onDoNotApplyChange(event, index, tag: any) {\r\n  tag.IsApplied = event.target.checked;\r\n  let sourceListBtn = document.getElementById(`changeSource-${index}`) as HTMLButtonElement;\r\n  sourceListBtn.disabled = true;\r\n  const isChecked = event.target.checked;\r\n  const tagname = document.getElementById(`tagname-${index}`);\r\n  const dnaBtn = document.getElementById(`doNotApply-${index}`) as HTMLInputElement;\r\n\r\n  try {\r\n    dnaBtn.disabled = true\r\n    const response = await fetch(`${baseUrl}/api/report/head/groupkey`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${jwt}`\r\n      },\r\n      body: JSON.stringify(tag)\r\n    });\r\n\r\n    if (!response.ok) {\r\n      dnaBtn.disabled = false\r\n      throw new Error('Network response was not ok.');\r\n    }\r\n\r\n    const data = await response.json();\r\n    if (data['Data'] && data['Status'] === true) {\r\n      sourceListBtn.disabled = false;\r\n      dnaBtn.disabled = false\r\n    } else {\r\n      sourceListBtn.disabled = false;\r\n      dnaBtn.disabled = false\r\n    }\r\n\r\n  } catch (error) {\r\n    dnaBtn.disabled = false\r\n    sourceListBtn.disabled = false;\r\n    console.error('Error updating do not apply:', error);\r\n  }\r\n\r\n  if (tagname) {\r\n    const match = availableKeys.find(item => tag.DisplayName === item.DisplayName);\r\n    if (isChecked) {\r\n      if (match) match.IsApplied = true;\r\n      tagname.classList.add('text-secondary');\r\n    } else {\r\n      if (match) match.IsApplied = false;\r\n      tagname.classList.remove('text-secondary');\r\n    }\r\n  }\r\n\r\n}\r\n\r\nasync function sendPrompt(tag, prompt, index) {\r\n  if (prompt !== '' && !isTagUpdating) {\r\n    let sourceListBtn = document.getElementById(`changeSource-${index}`) as HTMLButtonElement;\r\n    sourceListBtn.disabled = true;\r\n    isTagUpdating = true;\r\n\r\n    const iconelement = document.getElementById(`sendPrompt-${index}`);\r\n    iconelement.innerHTML = `<i class=\"fa fa-spinner fa-spin text-white\"></i>`;\r\n\r\n    const payload = {\r\n      ReportHeadID: tag.FilteredReportHeadAIHistoryList[0].ReportHeadID,\r\n      DocumentID: dataList.NCTID,\r\n      DocumentType: dataList.DocumentType,\r\n      TextSetting: dataList.TextSetting,\r\n      DocumentTemplate: dataList.ReportTemplate,\r\n      ReportHeadGroupKeyID: tag.FilteredReportHeadAIHistoryList[0].ReportHeadGroupKeyID,\r\n      ThreadID: tag.ThreadID,\r\n      AssistantID: dataList.AssistantID,\r\n      Container: dataList.Container,\r\n      GroupName: GroupName,\r\n      Prompt: prompt,\r\n      PromptType: 1,\r\n      Response: '',\r\n      VectorID: dataList.VectorID,\r\n      Selected: 0,\r\n      ID: 0,\r\n      SourceValue: tag.SourceValue ? tag.SourceValue : []\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(`${baseUrl}/api/report/ai-history/add`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${jwt}`\r\n        },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok.');\r\n      }\r\n\r\n      const data = await response.json();\r\n      if (data['Data'] && data['Data'] !== 'false') {\r\n        tag.ReportHeadAIHistoryList = JSON.parse(JSON.stringify(data['Data']));\r\n        tag.FilteredReportHeadAIHistoryList = [];\r\n\r\n        tag.ReportHeadAIHistoryList.forEach((historyList) => {\r\n          historyList.Response = removeQuotes(historyList.Response);\r\n          tag.FilteredReportHeadAIHistoryList.unshift(historyList);\r\n        });\r\n\r\n        // Update only the inner content of the accordion body\r\n        const innerContainer = document.getElementById(`selected-response-parent-${index}`);\r\n        if (innerContainer) {\r\n          const radioButtonsHTML = await generateRadioButtons(tag, index);\r\n          innerContainer.innerHTML = radioButtonsHTML;\r\n        }\r\n\r\n        // Reapply event listeners for the new buttons and radio options\r\n        tag.FilteredReportHeadAIHistoryList.forEach((chat, j) => {\r\n          document.getElementById(`copyPrompt-${index}-${j}`)?.addEventListener('click', () => copyText(chat.Prompt));\r\n          document.getElementById(`copyResponse-${index}-${j}`)?.addEventListener('click', () => copyText(chat.Response));\r\n          document.getElementById(`flexRadioDefault1-${index}-${j}`)?.addEventListener('change', () => onRadioChange(tag, index, j));\r\n        });\r\n\r\n        iconelement.innerHTML = `<i class=\"fa fa-paper-plane text-white\"></i>`;\r\n        document.getElementById(`chatbox-${index}`).value = '';\r\n\r\n        isTagUpdating = false;\r\n        sourceListBtn.disabled = false;\r\n      } else {\r\n        iconelement.innerHTML = `<i class=\"fa fa-paper-plane text-white\"></i>`;\r\n        isTagUpdating = false;\r\n        sourceListBtn.disabled = false;\r\n      }\r\n    } catch (error) {\r\n      iconelement.innerHTML = `<i class=\"fa fa-paper-plane text-white\"></i>`;\r\n      isTagUpdating = false;\r\n      sourceListBtn.disabled = false;\r\n      console.error('Error sending AI prompt:', error);\r\n    }\r\n  } else {\r\n    console.error('No empty prompt allowed');\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n// Your existing copyText function\r\nfunction copyText(text: string) {\r\n  // Copy text to clipboard logic\r\n  const tempTextArea = document.createElement('textarea');\r\n  tempTextArea.value = text;\r\n  document.body.appendChild(tempTextArea);\r\n  tempTextArea.select();\r\n  document.execCommand('copy');\r\n  document.body.removeChild(tempTextArea);\r\n\r\n}\r\n\r\n\r\nasync function logout() {\r\n  if (isGlossaryActive) {\r\n    await removeMatchingContentControls();\r\n  }\r\n  sessionStorage.clear();\r\n  window.location.hash = '#/new';\r\n  initialised = true;\r\n  document.getElementById('logo-header').innerHTML = ``;\r\n  document.getElementById('header').innerHTML = ``\r\n  login();\r\n}\r\n\r\n\r\nasync function displayAiTagList() {\r\n  if (isGlossaryActive) {\r\n    await removeMatchingContentControls()\r\n  }\r\n  const container = document.getElementById('app-body');\r\n  container.innerHTML = `\r\n  <div class=\"d-flex justify-content-between px-2\">\r\n      <button class=\"btn btn-primary btn-sm bg-primary-clr c-pointer text-white  mb-3 mt-2 px-3 py-2\" id=\"addgenaitag\">\r\n        <i class=\"fa fa-plus text-light px-1\"></i>\r\n        Add\r\n    </button>\r\n\r\n     <button class=\"btn btn-primary btn-sm bg-primary-clr c-pointer text-white mb-3 mt-2 px-3 py-2\" id=\"applyAITag\">\r\n        <i class=\"fa fa-robot text-light px-1\"></i>\r\n        Apply\r\n    </button>\r\n    </div>\r\n\r\n    <div class=\"card-container\"  id=\"card-container\">\r\n    </div>\r\n  `; // Clear any previous content\r\n  const Cardcontainer = document.getElementById('card-container');\r\n  document.getElementById('applyAITag').addEventListener('click', applyAITagFn);\r\n\r\n  document.getElementById('addgenaitag').addEventListener('click', addGenAITags);\r\n\r\n  for (let i = 0; i < aiTagList.length; i++) {\r\n    const tag = aiTagList[i];\r\n    const accordionItem = document.createElement('div');\r\n    accordionItem.classList.add('accordion');\r\n    accordionItem.id = `accordion-item-${i}`; // Replace 'yourUniqueId' with your desired ID\r\n\r\n    const headerId = `flush-headingOne-${i}`;\r\n    const collapseId = `flush-collapseOne-${i}`;\r\n\r\n    const radioButtonsHTML = await generateRadioButtons(tag, i);\r\n\r\n    accordionItem.innerHTML = accordionContent(headerId, collapseId, tag, radioButtonsHTML, i);\r\n\r\n    Cardcontainer.appendChild(accordionItem);\r\n    mentionDropdownFn(`chatbox-${i}`, `mention-dropdown-${i}`, 'edit');\r\n    document.getElementById(`doNotApply-${i}`)?.addEventListener('change', () => onDoNotApplyChange(event, i, tag));\r\n\r\n    document.getElementById(`sendPrompt-${i}`)?.addEventListener('click', () => {\r\n      const textareaValue = (document.getElementById(`chatbox-${i}`) as HTMLTextAreaElement).value;\r\n\r\n      sendPrompt(tag, textareaValue, i)\r\n    });\r\n\r\n    document.getElementById(`insert-tag-${i}`)?.addEventListener('click', () => {\r\n      insertTagPrompt(i)\r\n    })\r\n\r\n    document.getElementById(`changeSource-${i}`)?.addEventListener('click', () => {\r\n      const textareaValue = (document.getElementById(`chatbox-${i}`) as HTMLTextAreaElement).value;\r\n\r\n      // const accordionbody=document.getElementById(`accordion-body-${i}`).innerHTML=''\r\n      createMultiSelectDropdown(i, tag, radioButtonsHTML, textareaValue)\r\n    })\r\n  }\r\n\r\n  // Add event listeners after rendering\r\n  addAccordionListeners();\r\n  addCopyListeners();\r\n\r\n}\r\n\r\nasync function insertTagPrompt(index: any) {\r\n  return Word.run(async (context) => {\r\n    try {\r\n      const selection = context.document.getSelection();\r\n      await context.sync();\r\n\r\n      if (!selection) {\r\n        throw new Error('Selection is invalid or not found.');\r\n      }\r\n\r\n\r\n      if (aiTagList[index].EditorValue === '') {\r\n        selection.insertParagraph(`#${aiTagList[index].DisplayName}#`, Word.InsertLocation.before);\r\n      } else {\r\n        if (aiTagList[index].ComponentKeyDataType === 'TABLE') {\r\n          const parser = new DOMParser();\r\n          const doc = parser.parseFromString(aiTagList[index].EditorValue, 'text/html');\r\n\r\n          const bodyNodes = Array.from(doc.body.childNodes);\r\n\r\n          for (const node of bodyNodes) {\r\n            if (node.nodeType === Node.TEXT_NODE) {\r\n              const textContent = node.textContent?.trim();\r\n              if (textContent) {\r\n                textContent.split('\\n').forEach(line => {\r\n                  if (line.trim()) {\r\n                    insertLineWithHeadingStyle(selection, line);\r\n                  }\r\n                });\r\n              }\r\n            } else if (node.nodeType === Node.ELEMENT_NODE) {\r\n              const element = node as HTMLElement;\r\n\r\n              if (element.tagName.toLowerCase() === 'table') {\r\n                const rows = Array.from(element.querySelectorAll('tr'));\r\n\r\n                if (rows.length === 0) {\r\n                  selection.insertParagraph(\"[Empty Table]\", Word.InsertLocation.before);\r\n                  continue;\r\n                }\r\n\r\n                const maxCols = Math.max(...rows.map(row => {\r\n                  return Array.from(row.querySelectorAll('td, th')).reduce((sum, cell) => {\r\n                    return sum + (parseInt(cell.getAttribute('colspan') || '1', 10));\r\n                  }, 0);\r\n                }));\r\n\r\n                const paragraph = selection.insertParagraph(\"\", Word.InsertLocation.before);\r\n                await context.sync();\r\n\r\n                const table = paragraph.insertTable(rows.length, maxCols, Word.InsertLocation.after);\r\n                table.style = \"Grid Table 4 - Accent 1\";  // Apply built-in Word table style\r\n\r\n                await context.sync();\r\n\r\n                const rowspanTracker: number[] = new Array(maxCols).fill(0);\r\n\r\n                rows.forEach((row, rowIndex) => {\r\n                  const cells = Array.from(row.querySelectorAll('td, th'));\r\n                  let cellIndex = 0;\r\n\r\n                  cells.forEach((cell) => {\r\n                    while (rowspanTracker[cellIndex] > 0) {\r\n                      rowspanTracker[cellIndex]--;\r\n                      cellIndex++;\r\n                    }\r\n\r\n                    const cellText = Array.from(cell.childNodes)\r\n                      .map(node => {\r\n                        if (node.nodeType === Node.TEXT_NODE) {\r\n                          return node.textContent?.trim() || '';\r\n                        } else if (node.nodeType === Node.ELEMENT_NODE) {\r\n                          return (node as HTMLElement).innerText.trim();\r\n                        }\r\n                        return '';\r\n                      })\r\n                      .filter(text => text.length > 0)\r\n                      .join(' ');\r\n\r\n                    const colspan = parseInt(cell.getAttribute('colspan') || '1', 10);\r\n                    const rowspan = parseInt(cell.getAttribute('rowspan') || '1', 10);\r\n                    // if (rowIndex === 0) {\r\n                    //   const cell = table.getCell(rowIndex, cellIndex);\r\n                    //   const paragraph = cell.body.paragraphs.getFirst();\r\n                    //   paragraph.font.bold = true;\r\n                    //   paragraph.font.highlightColor = \"lightGray\";  // This works!\r\n                    // }\r\n                    table.getCell(rowIndex, cellIndex).value = cellText;\r\n\r\n                    for (let i = 1; i < colspan; i++) {\r\n                      if (cellIndex + i < maxCols) {\r\n                        table.getCell(rowIndex, cellIndex + i).value = \"\";\r\n                      }\r\n                    }\r\n\r\n                    if (rowspan > 1) {\r\n                      for (let i = 0; i < colspan; i++) {\r\n                        if (cellIndex + i < maxCols) {\r\n                          rowspanTracker[cellIndex + i] = rowspan - 1;\r\n                        }\r\n                      }\r\n                    }\r\n\r\n                    cellIndex += colspan;\r\n                  });\r\n                });\r\n              } else {\r\n                const elementText = element.innerText.trim();\r\n                if (elementText) {\r\n                  elementText.split('\\n').forEach(line => {\r\n                    if (line.trim()) {\r\n                      insertLineWithHeadingStyle(selection, line);\r\n                    }\r\n                  });\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          if (aiTagList[index].EditorValue === '' || aiTagList[index].IsApplied) {\r\n            selection.insertParagraph(`#${aiTagList[index].DisplayName}#`, Word.InsertLocation.before);\r\n          } else {\r\n            let content = removeQuotes(aiTagList[index].EditorValue);\r\n            let lines = content.split(/\\r?\\n/); // Handle both \\r\\n and \\n\r\n\r\n            lines.forEach(line => {\r\n              selection.insertParagraph(line, Word.InsertLocation.before);\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n      await context.sync();\r\n    } catch (error) {\r\n      console.error('Detailed error:', error);\r\n    }\r\n  });\r\n}\r\n\r\n\r\nfunction addAccordionListeners() {\r\n  const accordionButtons = document.querySelectorAll('.accordion-button');\r\n\r\n  accordionButtons.forEach(button => {\r\n    button.addEventListener('click', function () {\r\n      const collapseElement = this.nextElementSibling;\r\n\r\n      // Check if the element exists before accessing its classList\r\n      if (collapseElement && collapseElement.classList) {\r\n        collapseElement.classList.toggle('show');\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction addCopyListeners() {\r\n  const copyIcons = document.querySelectorAll('.fa-copy');\r\n  copyIcons.forEach(icon => {\r\n    icon.addEventListener('click', function () {\r\n      const textToCopy = this.closest('.p-2').querySelector('.form-control').textContent;\r\n    });\r\n  });\r\n}\r\n\r\nasync function applyAITagFn() {\r\n  return Word.run(async (context) => {\r\n    try {\r\n      const body = context.document.body;\r\n      context.load(body, 'text');\r\n      await context.sync();\r\n\r\n      // Iterate over the aiTagList to search and replace\r\n      for (let i = 0; i < aiTagList.length; i++) {\r\n        const tag = aiTagList[i];\r\n        // Clean up the EditorValue by removing quotes\r\n        tag.EditorValue = removeQuotes(tag.EditorValue);\r\n\r\n        // Search for all instances of the tag.DisplayName enclosed with `#`\r\n        const searchResults = body.search(`#${tag.DisplayName}#`, {\r\n          matchCase: false,\r\n          matchWholeWord: false,\r\n        });\r\n\r\n        // Load the search results to ensure they are available for further operations\r\n        context.load(searchResults, 'items');\r\n\r\n        await context.sync(); // Synchronize to fetch the search results\r\n\r\n        // Log the number of search results for debugging\r\n        console.log(`Found ${searchResults.items.length} instances of #${tag.DisplayName}#`);\r\n\r\n        // Replace each found instance with tag.EditorValue\r\n        const tableInsertPositions: { range: Word.Range, tag: any }[] = [];\r\n\r\n        searchResults.items.forEach(async (item: any) => {\r\n          if (tag.EditorValue !== \"\" && !tag.IsApplied && tag.ComponentKeyDataType === 'TEXT') {\r\n            // Existing TEXT handling - replace with text\r\n            item.insertText(tag.EditorValue, Word.InsertLocation.replace);\r\n            const range = item.getRange();\r\n            const contentControl = range.insertContentControl();\r\n            contentControl.title = tag.DisplayName;\r\n            contentControl.tag = `aiTag_${tag.DisplayName}`;\r\n          } else if (tag.ComponentKeyDataType === 'TABLE') {\r\n            // Replace the existing tag with a table instead\r\n            const range = item.getRange();\r\n            tableInsertPositions.push({ range, tag });\r\n            range.delete(); // Store the range and tag for later\r\n          }\r\n        });\r\n        await context.sync();\r\n\r\n        for (const { range, tag } of tableInsertPositions) {\r\n\r\n          // Create an empty paragraph at the range location to anchor the content control\r\n          const containerParagraph = range.insertParagraph(\"\", Word.InsertLocation.before);\r\n          await context.sync();\r\n\r\n          // Create content control around this paragraph (will expand as we add content)\r\n          const contentControl = containerParagraph.insertContentControl();\r\n          contentControl.title = tag.DisplayName;\r\n          contentControl.tag = `aiTag_${tag.DisplayName}`;\r\n          await context.sync();\r\n\r\n          const parser = new DOMParser();\r\n          const doc = parser.parseFromString(tag.EditorValue, 'text/html');\r\n\r\n          const bodyNodes = Array.from(doc.body.childNodes);\r\n\r\n          for (const node of bodyNodes) {\r\n            if (node.nodeType === Node.TEXT_NODE) {\r\n              const textContent = node.textContent?.trim();\r\n              if (textContent) {\r\n                textContent.split('\\n').forEach(line => {\r\n                  if (line.trim()) {\r\n                    const para = contentControl.insertParagraph(line, Word.InsertLocation.end);\r\n                    applyHeadingStyleIfNeeded(para, line);  // Optional if you want heading styles\r\n                  }\r\n                });\r\n              }\r\n            } else if (node.nodeType === Node.ELEMENT_NODE) {\r\n              const element = node as HTMLElement;\r\n\r\n              if (element.tagName.toLowerCase() === 'table') {\r\n                const rows = Array.from(element.querySelectorAll('tr'));\r\n\r\n                if (rows.length === 0) {\r\n                  contentControl.insertParagraph(\"[Empty Table]\", Word.InsertLocation.end);\r\n                  continue;\r\n                }\r\n\r\n                const table = contentControl.insertTable(rows.length, element.rows[0].cells.length, Word.InsertLocation.end);\r\n                table.style = \"Grid Table 4 - Accent 1\";\r\n                await context.sync();\r\n\r\n                const rowspanTracker: number[] = new Array(element.rows[0].cells.length).fill(0);\r\n\r\n                rows.forEach((row, rowIndex) => {\r\n                  const cells = Array.from(row.querySelectorAll('td, th'));\r\n                  let cellIndex = 0;\r\n\r\n                  cells.forEach((cell) => {\r\n                    while (rowspanTracker[cellIndex] > 0) {\r\n                      rowspanTracker[cellIndex]--;\r\n                      cellIndex++;\r\n                    }\r\n\r\n                    const cellText = Array.from(cell.childNodes)\r\n                      .map(node => {\r\n                        if (node.nodeType === Node.TEXT_NODE) {\r\n                          return node.textContent?.trim() || '';\r\n                        } else if (node.nodeType === Node.ELEMENT_NODE) {\r\n                          return (node as HTMLElement).innerText.trim();\r\n                        }\r\n                        return '';\r\n                      })\r\n                      .filter(text => text.length > 0)\r\n                      .join(' ');\r\n\r\n                    const colspan = parseInt(cell.getAttribute('colspan') || '1', 10);\r\n                    const rowspan = parseInt(cell.getAttribute('rowspan') || '1', 10);\r\n\r\n                    table.getCell(rowIndex, cellIndex).value = cellText;\r\n\r\n                    for (let i = 1; i < colspan; i++) {\r\n                      if (cellIndex + i < element.rows[0].cells.length) {\r\n                        table.getCell(rowIndex, cellIndex + i).value = \"\";\r\n                      }\r\n                    }\r\n\r\n                    if (rowspan > 1) {\r\n                      for (let i = 0; i < colspan; i++) {\r\n                        if (cellIndex + i < element.rows[0].cells.length) {\r\n                          rowspanTracker[cellIndex + i] = rowspan - 1;\r\n                        }\r\n                      }\r\n                    }\r\n\r\n                    cellIndex += colspan;\r\n                  });\r\n                });\r\n              } else {\r\n                const elementText = element.innerText.trim();\r\n                if (elementText) {\r\n                  elementText.split('\\n').forEach(line => {\r\n                    if (line.trim()) {\r\n                      const para = contentControl.insertParagraph(line, Word.InsertLocation.end);\r\n                      applyHeadingStyleIfNeeded(para, line);  // Optional if you want heading styles\r\n                    }\r\n                  });\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n\r\n      }\r\n\r\n      // Final sync to apply all changes\r\n      await context.sync();\r\n\r\n    } catch (err) {\r\n      console.error(\"Error during tag application:\", err);\r\n    }\r\n  });\r\n}\r\nfunction applyHeadingStyleIfNeeded(paragraph: Word.Paragraph, line: string) {\r\n  let style = \"Normal\";\r\n  let text = line;\r\n\r\n  if (line.startsWith('###### ')) {\r\n    style = \"Heading 6\";\r\n    text = line.substring(7).trim();\r\n  } else if (line.startsWith('##### ')) {\r\n    style = \"Heading 5\";\r\n    text = line.substring(6).trim();\r\n  } else if (line.startsWith('#### ')) {\r\n    style = \"Heading 4\";\r\n    text = line.substring(5).trim();\r\n  } else if (line.startsWith('### ')) {\r\n    style = \"Heading 3\";\r\n    text = line.substring(4).trim();\r\n  } else if (line.startsWith('## ')) {\r\n    style = \"Heading 2\";\r\n    text = line.substring(3).trim();\r\n  } else if (line.startsWith('# ')) {\r\n    style = \"Heading 1\";\r\n    text = line.substring(2).trim();\r\n  }\r\n\r\n  // Apply the style to the paragraph\r\n  paragraph.style = style;\r\n\r\n  // Set the actual text into the paragraph, after removing the heading symbols\r\n  paragraph.insertText(text, Word.InsertLocation.replace);\r\n}\r\n\r\n\r\n\r\n\r\nasync function onRadioChange(tag, tagIndex, chatIndex) {\r\n  if (!isTagUpdating) {\r\n    isTagUpdating = true;\r\n    const iconelement = document.getElementById(`sendPrompt-${tagIndex}`)\r\n    iconelement.innerHTML = `<i class=\"fa fa-spinner fa-spin text-white\"></i>`\r\n    const chat = tag.FilteredReportHeadAIHistoryList[chatIndex];\r\n    let payload = JSON.parse(JSON.stringify(chat));\r\n    payload.Container = dataList.Container;\r\n    payload.Selected = 1;\r\n    const matchingKey = availableKeys.find(prop => prop.DisplayName === tag.DisplayName);\r\n    if (matchingKey) {\r\n      matchingKey.EditorValue = payload.Response;\r\n    }\r\n    try {\r\n      const response = await fetch(`${baseUrl}/api/report/ai-history/update`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${jwt}`\r\n        },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok.');\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data['Data']) {\r\n        tag.ReportHeadAIHistoryList = JSON.parse(JSON.stringify(data['Data']));\r\n        tag.FilteredReportHeadAIHistoryList = [];\r\n\r\n        tag.ReportHeadAIHistoryList.forEach((historyList) => {\r\n          historyList.Response = removeQuotes(historyList.Response);\r\n          tag.FilteredReportHeadAIHistoryList.unshift(historyList);\r\n        });\r\n\r\n        // Use querySelectorAll to remove 'ai-selected-reply' from all elements\r\n        const selectedParent = document.getElementById(`selected-response-parent-${tagIndex}`)\r\n        const allSelectedDivs = selectedParent.querySelectorAll('.ai-selected-reply');\r\n        allSelectedDivs.forEach(div => {\r\n          div.classList.remove('ai-selected-reply');\r\n          div.classList.add('bg-light');\r\n        });\r\n\r\n        const selectElement = document.getElementById(`selected-response-${tagIndex}${chatIndex}`);\r\n        if (selectElement) {\r\n          selectElement.classList.remove('bg-light');\r\n          selectElement.classList.add('ai-selected-reply');\r\n        }\r\n\r\n        tag.UserValue = chat.FormattedResponse\r\n          ? '\\n' + chat.FormattedResponse\r\n          : chat.Response;\r\n\r\n        tag.EditorValue = chat.FormattedResponse\r\n          ? '\\n' + chat.FormattedResponse\r\n          : chat.Response;\r\n\r\n        tag.text = chat.FormattedResponse\r\n          ? '\\n' + chat.FormattedResponse\r\n          : chat.Response;\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error updating AI data:', error);\r\n    } finally {\r\n      const iconelement = document.getElementById(`sendPrompt-${tagIndex}`)\r\n      iconelement.innerHTML = `<i class=\"fa fa-paper-plane text-white\"></i>`\r\n      isTagUpdating = false;\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction selectResponse(tagIndex, chatIndex) {\r\n  // Handle the response selection logic here\r\n  console.log(`Response selected for tagIndex ${tagIndex}, chatIndex ${chatIndex}`);\r\n}\r\n\r\n\r\nasync function fetchGlossary() {\r\n  if (!isTagUpdating) {\r\n\r\n    document.getElementById('app-body').innerHTML = `\r\n  <div id=\"button-container\">\r\n\r\n          <div class=\"loader\" id=\"loader\"></div>\r\n\r\n        <div id=\"highlighted-text\"></div>`\r\n\r\n    loadGlossary()\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction loadGlossary() {\r\n  document.getElementById('app-body').innerHTML = `\r\n        <div id=\"button-container\">\r\n          <button class=\"btn btn-secondary me-2 mark-glossary btn-sm\" id=\"applyglossary\">Apply Glossary</button>\r\n        </div>\r\n  `\r\n  document.getElementById('applyglossary').addEventListener('click', applyglossary);\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport async function applyglossary() {\r\n  document.getElementById('app-body').innerHTML = `\r\n  <div id=\"button-container\">\r\n\r\n          <div class=\"loader\" id=\"loader\"></div>\r\n\r\n        <div id=\"highlighted-text\"></div>`\r\n\r\n  try {\r\n\r\n    await Word.run(async (context) => {\r\n\r\n\r\n      const body = context.document.body;\r\n      body.load(\"text\");\r\n      await context.sync(); // Sync to get the text content\r\n\r\n      const bodyText = {\r\n        \"Content\": body.text.replace(/[\\n\\r]/g, ' ')\r\n      };\r\n      try {\r\n        const response = await fetch(`${baseUrl}/api/glossary-template/client-id/${dataList?.ClientID}`, {\r\n          method: 'POST', // or 'POST', depending on your API\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n\r\n            'Authorization': `Bearer ${jwt}`\r\n          },\r\n          body: JSON.stringify(bodyText)\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok.');\r\n        }\r\n\r\n\r\n        const data = await response.json();\r\n        layTerms = data.Data\r\n        if (data.Data.length > 0) {\r\n          glossaryName = data.Data[0].GlossaryTemplate\r\n          loadGlossary()\r\n        } else {\r\n          document.getElementById('app-body').innerHTML = `\r\n       <p class=\"text-center\">Data not available<p/>\r\n  `\r\n        }\r\n\r\n        // alert('Glossary data loaded successfully.');\r\n      } catch (error) {\r\n        console.error('Error fetching glossary data:', error);\r\n        // Optionally show an error message to the user\r\n        // alert('Error fetching glossary data.');\r\n      }\r\n      // Sort terms by length (longest first)\r\n      layTerms.sort((a, b) => b.ClinicalTerm.length - a.ClinicalTerm.length);\r\n\r\n      const processedTerms = new Set(); // Track added larger terms\r\n\r\n      // Filter out smaller terms if they are included in a larger term\r\n      const filteredTerms = layTerms.filter(term => {\r\n        for (const biggerTerm of processedTerms) {\r\n          if (biggerTerm.includes(term.ClinicalTerm.toLowerCase())) {\r\n            console.log(`Skipping \"${term.ClinicalTerm}\" because it's part of \"${biggerTerm}\"`);\r\n            return false; // Exclude this smaller term\r\n          }\r\n        }\r\n        processedTerms.add(term.ClinicalTerm.toLowerCase());\r\n        return true;\r\n      });\r\n\r\n      filteredGlossaryTerm = filteredTerms;\r\n      await removeMatchingContentControls();\r\n\r\n      const foundRanges = new Map(); // Track words already processed\r\n\r\n      const searchPromises = filteredGlossaryTerm.map(term => {\r\n        const searchResults = body.search(term.ClinicalTerm, { matchCase: false, matchWholeWord: false });\r\n        searchResults.load(\"items\");\r\n        return searchResults;\r\n      });\r\n\r\n      await context.sync();\r\n\r\n      for (const searchResults of searchPromises) {\r\n\r\n        for (const range of searchResults.items) {\r\n\r\n          if (!range || !range.text) {\r\n            console.log(\"Invalid range. Skipping...\");\r\n            continue;\r\n          }\r\n\r\n          // Load existing content controls inside this range\r\n          const font = range.font;\r\n          font.load([\"bold\", \"italic\", \"underline\", \"size\", \"highlightColor\", \"name\", 'color']);\r\n          range.load(\"contentControls\");\r\n          await context.sync();\r\n\r\n          const existingControl = range.contentControls.items.length > 0;\r\n\r\n          if (existingControl) {\r\n            console.log(`Skipping \"${range.text}\" because it already has a content control.`);\r\n            continue; // Skip if content control is already present\r\n          }\r\n          // Check if we've already processed this term at this range\r\n          if (foundRanges.has(range.text)) {\r\n            console.log(`Skipping duplicate occurrence of \"${range.text}\"`);\r\n            continue;\r\n          }\r\n          // Mark this word as processed\r\n          foundRanges.set(range.text, true);\r\n          // Remove existing content controls if any\r\n          if (range.contentControls && range.contentControls.items.length > 0) {\r\n            console.log(`Removing existing content control from: \"${range.text}\"`);\r\n            for (const control of range.contentControls.items) {\r\n              control.delete(false); // 'false' keeps the text, only removes the control\r\n            }\r\n            await context.sync(); // Ensure deletion is applied before adding a new one\r\n          }\r\n\r\n          try {\r\n            // Insert a new content control\r\n            const contentControl = range.insertContentControl();\r\n            contentControl.title = `${range.text}`;\r\n            if (font.highlightColor !== null) {\r\n              contentControl.tag = `${font.highlightColor}`;\r\n            }\r\n            contentControl.font.highlightColor = \"yellow\"; // Highlight the control\r\n            contentControl.appearance = Word.ContentControlAppearance.boundingBox;\r\n            await context.sync();\r\n          } catch (error) {\r\n            console.error(`Error inserting content control for term \"${range.text}\":`, error);\r\n          }\r\n        }\r\n      }\r\n      // document.getElementById('glossarycheck').style.display='block';\r\n      isGlossaryActive = true;\r\n      document.getElementById('app-body').innerHTML = `\r\n      <div id=\"button-container\">\r\n        <button class=\"btn btn-secondary me-2 clear-glossary btn-sm\" id=\"clearGlossary\">Clear Glossary</button>\r\n      </div>\r\n\r\n      <div id=\"highlighted-text\"></div>\r\n      <div class=\"d-flex justify-content-center box-loader\">\r\n       <div class=\"loader\" id=\"loader\"></div></div>\r\n      \r\n`\r\n      const displayElement = document.getElementById('loader');\r\n      displayElement.style.display = 'none';\r\n      await context.sync();\r\n      document.getElementById('clearGlossary').addEventListener('click', removeMatchingContentControls);\r\n      Office.context.document.addHandlerAsync(\r\n        Office.EventType.DocumentSelectionChanged,\r\n        handleSelectionChange\r\n      );\r\n\r\n\r\n    });\r\n\r\n    // Optional: Notify user of completion\r\n    console.log('Glossary applied successfully');\r\n  } catch (error) {\r\n    console.error('Error applying glossary:', error);\r\n    // Optional: Notify user of error\r\n    console.log('Error applying glossary. Please try again.');\r\n  }\r\n}\r\n\r\n\r\nasync function handleSelectionChange() {\r\n  await checkGlossary();\r\n}\r\n\r\nexport async function checkGlossary() {\r\n  try {\r\n    await Word.run(async (context) => {\r\n      const selection = context.document.getSelection();\r\n\r\n      selection.load(\"text, font.highlightColor\");\r\n\r\n      await context.sync();\r\n\r\n\r\n\r\n      if (selection.text) {\r\n        const loader = document.getElementById('loader');\r\n        if (loader) {\r\n          loader.style.display = 'block';\r\n        }\r\n        const searchPromises = layTerms.map(term => {\r\n          const searchResults = selection.search(term.ClinicalTerm, { matchCase: false, matchWholeWord: false });\r\n          searchResults.load(\"items\");\r\n          return searchResults;\r\n        });\r\n\r\n        await context.sync();\r\n        const selectedWords = []\r\n        for (const searchResults of searchPromises) {\r\n\r\n          for (const range of searchResults.items) {\r\n            const font = range.font;\r\n            font.load([\"bold\", \"italic\", \"underline\", \"size\", \"highlightColor\", \"name\", \"color\"]);\r\n\r\n            await context.sync();\r\n            if (\r\n              font.highlightColor !== capturedFormatting['Background Color'] ||\r\n              font.color !== capturedFormatting['Text Color'] ||\r\n              font.bold !== capturedFormatting['Bold'] ||\r\n              font.italic !== capturedFormatting['Italic'] ||\r\n              font.size !== capturedFormatting['Size'] ||\r\n              font.underline !== capturedFormatting['Underline'] ||\r\n              font.name !== capturedFormatting['Font Name']\r\n            ) {\r\n              selectedWords.push(range.text);\r\n            }\r\n\r\n          }\r\n        }\r\n        // searchPromises.forEach(searchResults => {\r\n        //   searchResults.items.forEach(item => {\r\n        //   });\r\n        // });\r\n        displayHighlightedText(selectedWords)\r\n\r\n        await context.sync();\r\n\r\n\r\n\r\n\r\n        // const highlightColor = selection.font.highlightColor;\r\n\r\n        // if (highlightColor === \"red\") {\r\n        //   displayHighlightedText(selection.text);\r\n        // } else {\r\n        //   console.log('Selected text is not highlighted.');\r\n        // }\r\n      } else {\r\n        console.log('No text is selected.');\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('Error displaying glossary:', error);\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction displayHighlightedText(words: string[]) {\r\n\r\n  const displayElement = document.getElementById('highlighted-text');\r\n\r\n  if (displayElement) {\r\n    displayElement.innerHTML = ''; // Clear previous content\r\n    const loader = document.getElementById('loader');\r\n    loader.style.display = 'block';\r\n    // Group lay terms by their clinical term\r\n    const groupedTerms: { [clinicalTerm: string]: string[] } = {};\r\n\r\n    words.forEach(word => {\r\n      layTerms.forEach(term => {\r\n        if (term.ClinicalTerm.toLowerCase() === word.toLowerCase()) {\r\n          if (!groupedTerms[term.ClinicalTerm]) {\r\n            groupedTerms[term.ClinicalTerm] = [];\r\n          }\r\n          if (!groupedTerms[term.ClinicalTerm].includes(term.LayTerm)) {\r\n            groupedTerms[term.ClinicalTerm].push(term.LayTerm);\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    // Create a box for each clinical term\r\n    Object.keys(groupedTerms).forEach(clinicalTerm => {\r\n      // Create the main box for the clinical term\r\n      const mainBox = document.createElement('div');\r\n      mainBox.className = 'box'; // Add box class for styling\r\n\r\n      // Create a heading for the clinical term\r\n      const heading = document.createElement('h3');\r\n      heading.textContent = `${clinicalTerm} (${glossaryName})`;\r\n      mainBox.appendChild(heading);\r\n\r\n      // Create sub-boxes for each lay term\r\n      groupedTerms[clinicalTerm].forEach(layTerm => {\r\n        const subBox = document.createElement('div');\r\n        subBox.className = 'sub-box'; // Add class for sub-box styling\r\n        subBox.textContent = layTerm;\r\n\r\n        // Add click event listener to replace ClinicalTerm with LayTerm\r\n        subBox.addEventListener('click', async () => {\r\n          await replaceClinicalTerm(clinicalTerm, layTerm);\r\n\r\n          // Remove the main box containing the clicked sub-box\r\n          mainBox.remove();\r\n        });\r\n\r\n        mainBox.appendChild(subBox);\r\n      });\r\n\r\n      displayElement.appendChild(mainBox);\r\n    });\r\n    loader.style.display = 'none';\r\n\r\n  }\r\n}\r\nasync function replaceClinicalTerm(clinicalTerm: string, layTerm: string) {\r\n  const displayElement = document.getElementById('loader');\r\n  displayElement.style.display = 'block';\r\n\r\n  try {\r\n    await Word.run(async (context) => {\r\n      // Get the current selection\r\n      const selection = context.document.getSelection();\r\n      selection.load('text');\r\n      await context.sync();\r\n\r\n      if (selection.text.toLowerCase().includes(clinicalTerm.toLowerCase())) {\r\n        // Search for the clinicalTerm in the document\r\n        const searchResults = selection.search(clinicalTerm, { matchCase: false, matchWholeWord: false });\r\n        searchResults.load('items');\r\n\r\n        await context.sync();\r\n\r\n        // Replace each occurrence of the clinicalTerm with the layTerm\r\n        for (const item of searchResults.items) {\r\n          // Load the font properties\r\n          item.font.load(['bold', 'italic', 'underline', 'color', 'highlightColor', 'size', 'name']);\r\n          await context.sync();  // Ensure the properties are loaded before accessing them\r\n\r\n          // Insert the layTerm while keeping the formatting\r\n          item.insertText(layTerm, 'replace');\r\n\r\n          // Apply the original formatting to the new text\r\n          item.font.bold = item.font.bold;\r\n          item.font.italic = item.font.italic;\r\n          item.font.underline = item.font.underline;\r\n          item.font.color = item.font.color;\r\n          item.font.highlightColor = '#c7c7c7';\r\n          item.font.size = item.font.size;\r\n          item.font.name = item.font.name;\r\n        }\r\n\r\n        await context.sync();\r\n        displayElement.style.display = 'none';\r\n        console.log(`Replaced '${clinicalTerm}' with '${layTerm}' and preserved the original formatting.`);\r\n      } else {\r\n        displayElement.style.display = 'none';\r\n        console.log(`Selected text does not contain '${clinicalTerm}'.`);\r\n      }\r\n    });\r\n  } catch (error) {\r\n    displayElement.style.display = 'none';\r\n    console.error('Error replacing term:', error);\r\n  }\r\n}\r\n\r\n\r\nexport async function removeMatchingContentControls() {\r\n  try {\r\n    await Word.run(async (context) => {\r\n      document.getElementById('app-body').innerHTML = `\r\n      <div id=\"button-container\">\r\n        <div class=\"loader\" id=\"loader\"></div>\r\n        <div id=\"highlighted-text\"></div>`;\r\n      const body = context.document.body;\r\n\r\n      // Load all content controls\r\n      const contentControls = body.contentControls;\r\n      contentControls.load(\"items\");\r\n      await context.sync();\r\n\r\n      if (contentControls.items.length === 0) {\r\n        console.log(\"No content controls found.\");\r\n        return;\r\n      }\r\n\r\n      for (const control of contentControls.items) {\r\n        if (control.title && filteredGlossaryTerm.some(term => term.ClinicalTerm.toLowerCase() === control.title.toLowerCase())) {\r\n          const range = control.getRange();\r\n          range.load(\"text\");\r\n          await context.sync();\r\n          if (control.tag && /^#[0-9A-Fa-f]{6}$/.test(control.tag)) {\r\n            range.font.highlightColor = control.tag;\r\n          } else {\r\n            range.font.highlightColor = null\r\n          }\r\n          await context.sync();\r\n          control.delete(true);\r\n        }\r\n      }\r\n\r\n      document.getElementById('app-body').innerHTML = `\r\n      <div id=\"button-container\">\r\n        <button class=\"btn btn-secondary me-2 mark-glossary btn-sm\" id=\"applyglossary\">Apply Glossary</button>\r\n      </div>\r\n      `;\r\n\r\n      await context.sync();\r\n      isGlossaryActive = false;\r\n      document.getElementById('applyglossary').addEventListener('click', applyglossary);\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error removing content controls:\", error);\r\n  }\r\n}\r\n\r\n\r\nasync function displayMentions() {\r\n  if (!isTagUpdating) {\r\n    if (isGlossaryActive) {\r\n      await removeMatchingContentControls();\r\n    }\r\n\r\n    const htmlBody = `\r\n      <div class=\"container mt-3\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            <h5 class=\"card-title\">Search Tags</h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"form-group\">\r\n              <input type=\"text\" id=\"search-box\" class=\"form-control\" placeholder=\"Search Tags...\" autocomplete=\"off\" />\r\n            </div>\r\n            <ul id=\"suggestion-list\" class=\"list-group mt-2\"></ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    document.getElementById('app-body').innerHTML = htmlBody;\r\n\r\n    const searchBox = document.getElementById('search-box');\r\n    const suggestionList = document.getElementById('suggestion-list');\r\n\r\n    // Function to filter and display suggestions\r\n    function updateSuggestions() {\r\n      const searchTerm = searchBox.value.toLowerCase();\r\n      if (searchTerm === '') {\r\n        suggestionList.innerHTML = ``;\r\n        return;\r\n      }\r\n      suggestionList.innerHTML = '';\r\n\r\n      // Filter mention list based on search term\r\n      const filteredMentions = availableKeys.filter(mention =>\r\n        mention.DisplayName.toLowerCase().includes(searchTerm)\r\n      );\r\n\r\n      // Render filtered suggestions\r\n      filteredMentions.forEach(mention => {\r\n        const listItem = document.createElement('li');\r\n        listItem.className = 'list-group-item list-group-item-action';\r\n        listItem.textContent = mention.DisplayName;\r\n        listItem.onclick = () => {\r\n          // Replace # with the selected value (adjust as needed)\r\n          replaceMention(mention, mention.ComponentKeyDataType);\r\n          suggestionList.innerHTML = ''; // Clear suggestions after selection\r\n        };\r\n        suggestionList.appendChild(listItem);\r\n      });\r\n    }\r\n\r\n    // Add input event listener to the search box\r\n    searchBox.addEventListener('input', updateSuggestions);\r\n  }\r\n}\r\n\r\nasync function addGenAITags() {\r\n  if (!isTagUpdating) {\r\n    if (isGlossaryActive) {\r\n      await removeMatchingContentControls();\r\n    }\r\n\r\n    let selectedClient = clientList.filter((item) => item.ID === clientId);\r\n\r\n    let sponsorOptions = clientList.map(client => {\r\n      const isSelectedClient = selectedClient.some(selected => selected.ID === client.ID);\r\n      return ` \r\n        <li class=\"dropdown-item p-2\" style=\"cursor: pointer;\">\r\n          <div class=\"form-check\">\r\n            <input class=\"form-check-input\" type=\"checkbox\" value=\"${client.ID}\" id=\"sponsor${client.ID}\" ${isSelectedClient ? 'checked disabled' : ''}>\r\n            <label class=\"form-check-label text-prewrap\" for=\"sponsor${client.ID}\">${client.Name}</label>\r\n          </div>\r\n        </li>\r\n      `;\r\n    }).join('');\r\n\r\n    const htmlBody = `\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-body p-3\">\r\n            <form id=\"genai-form\" autocomplete=\"off\" novalidate>\r\n              <!-- Name Field -->\r\n              <div class=\"mb-3\">\r\n                <label for=\"name\" class=\"form-label\"><span class=\"text-danger\">*</span> Name</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"name\" required>\r\n                <div class=\"invalid-feedback\">Name is required.</div>\r\n                <div id=\"submition-error\" class=\"invalid-feedback\" style=\"display: none;\"></div>\r\n\r\n              </div>\r\n\r\n              <!-- Description Field -->\r\n              <div class=\"mb-3\">\r\n                <label for=\"description\" class=\"form-label\">Description</label>\r\n                <textarea class=\"form-control\" id=\"description\" rows=\"6\"></textarea>\r\n              </div>\r\n\r\n              <!-- Prompt Field -->\r\n              <div class=\"mb-3\">\r\n                <label for=\"prompt\" class=\"form-label\"><span class=\"text-danger\">*</span> Prompt \r\n                  <small class=\"text-secondary\">(Note: Use # tag for content suggestions)</small>\r\n                </label>\r\n                <textarea class=\"form-control\" id=\"prompt\" rows=\"6\"  required></textarea>\r\n                <div class=\"invalid-feedback\">Prompt is required.</div>\r\n                <div id=\"mention-dropdown\" class=\"dropdown-menu\"></div>\r\n              </div>\r\n\r\n              <!-- Save Globally Checkbox -->\r\n              <div class=\"form-check mb-3\">\r\n                <input type=\"checkbox\" class=\"form-check-input\" id=\"saveGlobally\">\r\n                <label class=\"form-check-label\" for=\"saveGlobally\">Save Globally</label>\r\n              </div>\r\n\r\n              <!-- Available to All Sponsors Checkbox -->\r\n              <div class=\"form-check mb-3\">\r\n                <input type=\"checkbox\" class=\"form-check-input\" id=\"isAvailableForAll\" disabled>\r\n                <label class=\"form-check-label\" for=\"isAvailableForAll\">Available to All Sponsors</label>\r\n              </div>\r\n\r\n              <!-- Sponsor Dropdown -->\r\n              <div class=\"mb-3\">\r\n                <label for=\"sponsor\" class=\"form-label\"><span class=\"text-danger\">*</span> Sponsor</label>\r\n                <div class=\"dropdown w-100\">\r\n                  <button \r\n                    class=\"btn btn-white border w-100 text-start d-flex justify-content-between align-items-center dropdown-toggle\" \r\n                    type=\"button\" \r\n                    id=\"sponsorDropdown\" \r\n                    data-bs-toggle=\"dropdown\" \r\n                    aria-expanded=\"false\" \r\n                    disabled>\r\n                    <span id=\"sponsorDropdownLabel\">Select Sponsors</span>\r\n                    <span class=\"dropdown-toggle-icon\"></span>\r\n                  </button>\r\n                  <ul class=\"dropdown-menu w-100 p-2\" aria-labelledby=\"sponsorDropdown\" style=\"box-shadow: 0 4px 8px rgba(0,0,0,0.1);\">\r\n                    <li class=\"dropdown-item p-2\" style=\"cursor: pointer;\">\r\n                      <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" value=\"selectAll\" id=\"selectAll\">\r\n                        <label class=\"form-check-label\" for=\"selectAll\">Select All</label>\r\n                      </div>\r\n                    </li>\r\n                    ${sponsorOptions}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Action Buttons -->\r\n              <div class=\"text-end mt-3\">\r\n                <button id=\"cancel-btn-gen-ai\" class=\"btn btn-danger bg-danger-clr px-3 me-2\"><i class=\"fa fa-reply me-2\"></i>Cancel</button>\r\n                <button type=\"submit\" class=\"btn btn-success bg-success-clr\" id=\"text-gen-save\"><i class=\"fa fa-check-circle me-2\"></i>Save</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>`;\r\n\r\n    // Add modal HTML to the DOM\r\n    document.getElementById('app-body').innerHTML = htmlBody;\r\n    //prompt starting\r\n    mentionDropdownFn('prompt', 'mention-dropdown', 'add');\r\n    //prompt end\r\n    const form = document.getElementById('genai-form');\r\n    const promptField = document.getElementById('prompt');\r\n\r\n    const nameField = document.getElementById('name');\r\n    const descriptionField = document.getElementById('description');\r\n    const saveGloballyCheckbox = document.getElementById('saveGlobally');\r\n    const availableForAllCheckbox = document.getElementById('isAvailableForAll');\r\n    const sponsorDropdownButton = document.getElementById('sponsorDropdown');\r\n    const sponsorDropdownItems = document.querySelectorAll('.dropdown-item .form-check-input');\r\n\r\n    document.getElementById('cancel-btn-gen-ai').addEventListener('click', displayAiTagList);\r\n\r\n    // Check if elements exist\r\n    if (form && nameField && promptField && sponsorDropdownItems.length > 0) {\r\n      const updateDropdownLabel = () => {\r\n        if (availableForAllCheckbox.checked) {\r\n          sponsorDropdownButton.textContent = clientList.map(client => client.Name).join(\", \");\r\n        } else {\r\n          const selectedOptions = Array.from(sponsorDropdownItems)\r\n            .filter(cb => cb.checked && cb.id !== 'selectAll')\r\n            .map(cb => cb.parentElement.textContent.trim());\r\n          sponsorDropdownButton.textContent = selectedOptions.length ? selectedOptions.join(\", \") : \"Select Sponsors\";\r\n        }\r\n      };\r\n      // Form validation logic on submit\r\n      form.addEventListener('submit', function (e) {\r\n        e.preventDefault();\r\n\r\n        // Reset previous validation errors\r\n        form.querySelectorAll('.is-invalid').forEach(input => input.classList.remove('is-invalid'));\r\n\r\n        let valid = true;\r\n\r\n        if (!(nameField as HTMLInputElement).value.trim()) {\r\n          nameField.classList.add('is-invalid');\r\n          valid = false;\r\n        }\r\n\r\n        if (!(promptField as HTMLInputElement).value.trim()) {\r\n          promptField.classList.add('is-invalid');\r\n          valid = false;\r\n        }\r\n\r\n        if (valid) {\r\n          // Prepare object to pass to createTextGenTag\r\n          const selectedSponsors = Array.from(sponsorDropdownItems)\r\n            .filter(cb => cb.checked && cb.id !== 'selectAll')\r\n            .map(cb => {\r\n              const client = clientList.find(client => client.ID == cb.value);\r\n              return client; // Collect the entire client object\r\n            });\r\n\r\n          const isAvailableForAll = availableForAllCheckbox.checked;\r\n          const isSaveGlobally = saveGloballyCheckbox.checked;\r\n          const aigroup = dataList.Group.find(element => element.DisplayName === 'AIGroup');\r\n          const formData = {\r\n            DisplayName: nameField.value.trim(),\r\n            Prompt: promptField.value.trim(),\r\n            Description: descriptionField.value.trim(),\r\n            GroupKeyClient: selectedSponsors, // Array of selected sponsor objects\r\n            AllClient: isAvailableForAll ? 1 : 0,\r\n            SaveGlobally: isSaveGlobally,\r\n            UserDefined: '1',\r\n            ComponentKeyDataTypeID: '1',\r\n            ComponentKeyDataAccessID: '3',\r\n            AIFlag: 1,\r\n            DocumentTypeID: dataList.DocumentTypeID,\r\n            ReportHeadID: dataList.ID,\r\n            SourceTypeID: '',\r\n            ReportHeadGroupID: aigroup.ID,\r\n            ReportHeadSourceID: ''\r\n          };\r\n\r\n          createTextGenTag(formData);\r\n        }\r\n      });\r\n\r\n\r\n      const checkAndDisableSponsors = () => {\r\n        sponsorDropdownItems.forEach(checkbox => {\r\n          if (!checkbox.disabled) {\r\n            checkbox.checked = true;\r\n            checkbox.disabled = true;\r\n          }\r\n        });\r\n        updateDropdownLabel();\r\n      };\r\n\r\n      // Function to enable sponsors without unchecking them\r\n      const enableSponsors = () => {\r\n        sponsorDropdownItems.forEach(checkbox => {\r\n          const isSelectedClient = selectedClient.some(selected => selected.ID === parseInt(checkbox.value));\r\n          if (!isSelectedClient) {\r\n            checkbox.disabled = false;\r\n          }\r\n        });\r\n        updateDropdownLabel();\r\n      };\r\n\r\n      // Event listener for \"Save Globally\" checkbox\r\n\r\n\r\n      // Event listener for \"Available to All Sponsors\" checkbox\r\n\r\n      saveGloballyCheckbox.addEventListener('change', function () {\r\n        if (this.checked) {\r\n          availableForAllCheckbox.disabled = false;\r\n          sponsorDropdownButton.disabled = false;\r\n        } else {\r\n          enableSponsors();\r\n          availableForAllCheckbox.checked = false;\r\n          availableForAllCheckbox.disabled = true;\r\n          sponsorDropdownButton.disabled = true;\r\n          sponsorDropdownItems.forEach(checkbox => {\r\n            if (!checkbox.disabled) {\r\n              checkbox.checked = false;\r\n              checkbox.disabled = false;\r\n            }\r\n          });\r\n          updateDropdownLabel();\r\n        }\r\n      });\r\n\r\n      // Event listener for \"Available to All Sponsors\" checkbox\r\n      availableForAllCheckbox.addEventListener('change', function () {\r\n        if (this.checked) {\r\n          checkAndDisableSponsors();\r\n        } else {\r\n          enableSponsors();\r\n        }\r\n      });\r\n\r\n      // Add event listener to prevent dropdown close on item selection\r\n      document.querySelectorAll('.dropdown-item').forEach(item => {\r\n        item.addEventListener('click', function (event) {\r\n          event.stopPropagation(); // Prevent dropdown from closing\r\n          const checkbox = this.querySelector('.form-check-input');\r\n          if (checkbox) {\r\n\r\n\r\n            if (checkbox.id === 'selectAll') {\r\n              const isChecked = checkbox.checked;\r\n              sponsorDropdownItems.forEach(cb => {\r\n                if (!cb.disabled) cb.checked = isChecked;\r\n              });\r\n            }\r\n            updateDropdownLabel();\r\n          }\r\n        });\r\n      });\r\n\r\n      // Initial label update\r\n      updateDropdownLabel();\r\n\r\n\r\n      // Clear validation errors when user types\r\n      [nameField, promptField].forEach(field => {\r\n        field.addEventListener('input', function () {\r\n          if (this.classList.contains('is-invalid') && this.value.trim()) {\r\n            this.classList.remove('is-invalid');\r\n          }\r\n          if (nameField) {\r\n            const errorDiv = document.getElementById('submition-error');\r\n            errorDiv.style.display = 'none';\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      console.error('Required elements are missing or not rendered yet.');\r\n    }\r\n  }\r\n}\r\n\r\n\r\nasync function createTextGenTag(payload) {\r\n  try {\r\n    const iconelement = document.getElementById(`text-gen-save`);\r\n    const aiTagBtn = document.getElementById('aitag');\r\n    const mentionBtn = document.getElementById('mention');\r\n    const formatDropdownBtn = document.getElementById('formatDropdown');\r\n    const cancelBtnGenAi = document.getElementById('cancel-btn-gen-ai');\r\n\r\n    aiTagBtn.disabled = true;\r\n    cancelBtnGenAi.disabled = true;\r\n    mentionBtn.disabled = true;\r\n    formatDropdownBtn.disabled = true;\r\n    iconelement.innerHTML = `<i class=\"fa fa-spinner fa-spin text-white me-2\"></i>Save`;\r\n    iconelement.disabled = true;\r\n\r\n    const response = await fetch(`${baseUrl}/api/report/group-key/add`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${jwt}`\r\n      },\r\n      body: JSON.stringify(payload)\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok.');\r\n    }\r\n\r\n    const data = await response.json();\r\n    if (data['Data'] && data['Status']) {\r\n      fetchDocument('AIpanel');\r\n    } else {\r\n      aiTagBtn.disabled = false;\r\n      cancelBtnGenAi.disabled = false;\r\n      mentionBtn.disabled = false;\r\n      formatDropdownBtn.disabled = false;\r\n      iconelement.disabled = false;\r\n      iconelement.innerHTML = `<i class=\"fa fa-check-circle me-2\"></i>Save`;\r\n      showAddTagError(data['Data'])\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('Error creating text generation tag:', error);\r\n  }\r\n}\r\n\r\n\r\nfunction mentionDropdownFn(textareaId, DropdownId, action) {\r\n  const filterMentions = (query) => {\r\n    // Assuming availableKeys is an array of objects with DisplayName and EditorValue properties\r\n    const filtered = availableKeys.filter(item => item.AIFlag === 0).filter(item =>\r\n      item.DisplayName.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n    return filtered;\r\n  };\r\n  let highlightedIndex = -1;\r\n\r\n  const promptField = document.getElementById(`${textareaId}`);\r\n  const mentionDropdown = document.getElementById(`${DropdownId}`);\r\n  if (promptField) {\r\n\r\n    // Handle input events on prompt field for mentions\r\n    promptField.addEventListener('input', (e) => {\r\n      const cursorPosition = promptField.selectionStart;\r\n      const textBeforeCursor = promptField.value.slice(0, cursorPosition);\r\n      const lastHashtag = textBeforeCursor.lastIndexOf('#');\r\n\r\n      if (lastHashtag !== -1) {\r\n        const query = textBeforeCursor.slice(lastHashtag + 1).trim();\r\n        if (query.length > 0) {\r\n          const mentions = filterMentions(query);\r\n\r\n          if (mentions.length > 0) {\r\n            mentionDropdown.innerHTML = mentions.map(item => {\r\n              let editorValue = '';\r\n              if (action === 'add') {\r\n                editorValue = `#${item.DisplayName}#`;\r\n              } else {\r\n                editorValue = item.EditorValue || `#${item.DisplayName}#`;\r\n              }\r\n\r\n              return `<li class=\"dropdown-item\" data-editor-value=\"${editorValue}\">${item.DisplayName}</li>`;\r\n            }).join('');\r\n\r\n            // Get the position of the textarea and place the dropdown above it\r\n            const textareaRect = promptField.getBoundingClientRect();\r\n            mentionDropdown.style.left = `${textareaRect.left}px`;\r\n            mentionDropdown.style.bottom = `75px`; // Position above the textarea\r\n            mentionDropdown.style.display = 'block';\r\n          } else {\r\n            mentionDropdown.style.display = 'none';\r\n          }\r\n        } else {\r\n          mentionDropdown.style.display = 'none';\r\n        }\r\n      } else {\r\n        mentionDropdown.style.display = 'none';\r\n      }\r\n\r\n    });\r\n\r\n    // Handle keyboard navigation in the dropdown\r\n    promptField.addEventListener('keydown', (e) => {\r\n      const items = document.querySelectorAll(`#${DropdownId} .dropdown-item`);\r\n      const totalItems = items.length;\r\n\r\n      if (e.key === 'ArrowDown') {\r\n        // Prevent default behavior to stop cursor from moving\r\n        e.preventDefault();\r\n\r\n        // Move the highlight down and wrap around to the top if at the end\r\n        if (highlightedIndex < totalItems - 1) {\r\n          highlightedIndex++;\r\n        } else {\r\n          highlightedIndex = 0; // Wrap to the first item\r\n        }\r\n        updateHighlightedItem(`${DropdownId}`);\r\n      } else if (e.key === 'ArrowUp') {\r\n        // Prevent default behavior to stop cursor from moving\r\n        e.preventDefault();\r\n\r\n        // Move the highlight up and wrap around to the bottom if at the top\r\n        if (highlightedIndex > 0) {\r\n          highlightedIndex--;\r\n        } else {\r\n          highlightedIndex = totalItems - 1; // Wrap to the last item\r\n        }\r\n        updateHighlightedItem(`${DropdownId}`);\r\n      } else if (e.key === 'Enter' && highlightedIndex !== -1) {\r\n        // Select the highlighted item\r\n        const selectedItem = items[highlightedIndex];\r\n        if (selectedItem) {\r\n          selectMention(selectedItem.getAttribute('data-editor-value'));\r\n          mentionDropdown.style.display = 'none';  // Hide the dropdown after selection\r\n          e.preventDefault();  // Prevent form submission on Enter key\r\n        }\r\n      }\r\n    });\r\n\r\n    // Function to highlight the selected item\r\n    function updateHighlightedItem(id) {\r\n      const items = document.querySelectorAll(`#${id} .dropdown-item`);\r\n      const dropdown = document.getElementById(`${id}`);\r\n      const totalItems = items.length;\r\n\r\n      // Remove the 'active' class from all items\r\n      items.forEach(item => item.classList.remove('active'));\r\n\r\n      // Add the 'active' class to the currently highlighted item\r\n      if (highlightedIndex >= 0 && highlightedIndex < totalItems) {\r\n        const highlightedItem = items[highlightedIndex];\r\n        highlightedItem.classList.add('active');\r\n\r\n        // Ensure the highlighted item is visible within the dropdown\r\n        highlightedItem.scrollIntoView({\r\n          behavior: 'smooth',    // Smooth scroll\r\n          block: 'nearest'      // Scroll only if necessary\r\n        });\r\n      }\r\n    }\r\n\r\n\r\n\r\n    // Handle selecting an item from the dropdown via mouse click\r\n    mentionDropdown.addEventListener('click', (e) => {\r\n      if (e.target && e.target.matches('li')) {\r\n        const editorValue = e.target.getAttribute('data-editor-value');\r\n        selectMention(editorValue);\r\n        mentionDropdown.style.display = 'none';  // Hide the dropdown after selection\r\n      }\r\n    });\r\n\r\n    // Function to insert the selected mention into the prompt field\r\n    const selectMention = (editorValue) => {\r\n      const textarea = document.getElementById(`${textareaId}`);\r\n      const currentValue = textarea.value;\r\n      const cursorPosition = textarea.selectionStart;\r\n\r\n      const textBefore = currentValue.slice(0, cursorPosition);\r\n      const textAfter = currentValue.slice(cursorPosition);\r\n\r\n      const lastHashPosition = textBefore.lastIndexOf('#');\r\n      const updatedTextBefore = textBefore.slice(0, lastHashPosition); // Removing '#' symbol\r\n\r\n      textarea.value = `${updatedTextBefore}${editorValue}${textAfter}`;\r\n      const newCursorPosition = updatedTextBefore.length + editorValue.length;\r\n      textarea.setSelectionRange(newCursorPosition, newCursorPosition);\r\n    };\r\n\r\n    // Hide the dropdown if clicked outside\r\n    document.addEventListener('click', (e) => {\r\n      if (!mentionDropdown.contains(e.target) && e.target !== promptField) {\r\n        mentionDropdown.style.display = 'none';\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport async function replaceMention(word: any, type: any) {\r\n  return Word.run(async (context) => {\r\n    try {\r\n      const selection = context.document.getSelection();\r\n      await context.sync();\r\n\r\n      if (!selection) {\r\n        throw new Error('Selection is invalid or not found.');\r\n      }\r\n\r\n      if (type === 'TABLE') {\r\n        const parser = new DOMParser();\r\n        const doc = parser.parseFromString(word.EditorValue, 'text/html');\r\n\r\n        const bodyNodes = Array.from(doc.body.childNodes);\r\n\r\n        for (const node of bodyNodes) {\r\n          if (node.nodeType === Node.TEXT_NODE) {\r\n            const textContent = node.textContent?.trim();\r\n            if (textContent) {\r\n              textContent.split('\\n').forEach(line => {\r\n                if (line.trim()) {\r\n                  insertLineWithHeadingStyle(selection, line);\r\n                }\r\n              });\r\n            }\r\n          } else if (node.nodeType === Node.ELEMENT_NODE) {\r\n            const element = node as HTMLElement;\r\n\r\n            if (element.tagName.toLowerCase() === 'table') {\r\n              const rows = Array.from(element.querySelectorAll('tr'));\r\n\r\n              if (rows.length === 0) {\r\n                selection.insertParagraph(\"[Empty Table]\", Word.InsertLocation.before);\r\n                continue;\r\n              }\r\n\r\n              const maxCols = Math.max(...rows.map(row => {\r\n                return Array.from(row.querySelectorAll('td, th')).reduce((sum, cell) => {\r\n                  return sum + (parseInt(cell.getAttribute('colspan') || '1', 10));\r\n                }, 0);\r\n              }));\r\n\r\n              const paragraph = selection.insertParagraph(\"\", Word.InsertLocation.before);\r\n              await context.sync();\r\n\r\n              const table = paragraph.insertTable(rows.length, maxCols, Word.InsertLocation.after);\r\n              table.style = \"Grid Table 4 - Accent 1\";  // Apply built-in Word table style\r\n\r\n              await context.sync();\r\n\r\n              const rowspanTracker: number[] = new Array(maxCols).fill(0);\r\n\r\n              rows.forEach((row, rowIndex) => {\r\n                const cells = Array.from(row.querySelectorAll('td, th'));\r\n                let cellIndex = 0;\r\n\r\n                cells.forEach((cell) => {\r\n                  while (rowspanTracker[cellIndex] > 0) {\r\n                    rowspanTracker[cellIndex]--;\r\n                    cellIndex++;\r\n                  }\r\n\r\n                  const cellText = Array.from(cell.childNodes)\r\n                    .map(node => {\r\n                      if (node.nodeType === Node.TEXT_NODE) {\r\n                        return node.textContent?.trim() || '';\r\n                      } else if (node.nodeType === Node.ELEMENT_NODE) {\r\n                        return (node as HTMLElement).innerText.trim();\r\n                      }\r\n                      return '';\r\n                    })\r\n                    .filter(text => text.length > 0)\r\n                    .join(' ');\r\n\r\n                  const colspan = parseInt(cell.getAttribute('colspan') || '1', 10);\r\n                  const rowspan = parseInt(cell.getAttribute('rowspan') || '1', 10);\r\n                  // if (rowIndex === 0) {\r\n                  //   const cell = table.getCell(rowIndex, cellIndex);\r\n                  //   const paragraph = cell.body.paragraphs.getFirst();\r\n                  //   paragraph.font.bold = true;\r\n                  //   paragraph.font.highlightColor = \"lightGray\";  // This works!\r\n                  // }\r\n                  table.getCell(rowIndex, cellIndex).value = cellText;\r\n\r\n                  for (let i = 1; i < colspan; i++) {\r\n                    if (cellIndex + i < maxCols) {\r\n                      table.getCell(rowIndex, cellIndex + i).value = \"\";\r\n                    }\r\n                  }\r\n\r\n                  if (rowspan > 1) {\r\n                    for (let i = 0; i < colspan; i++) {\r\n                      if (cellIndex + i < maxCols) {\r\n                        rowspanTracker[cellIndex + i] = rowspan - 1;\r\n                      }\r\n                    }\r\n                  }\r\n\r\n                  cellIndex += colspan;\r\n                });\r\n              });\r\n            } else {\r\n              const elementText = element.innerText.trim();\r\n              if (elementText) {\r\n                elementText.split('\\n').forEach(line => {\r\n                  if (line.trim()) {\r\n                    insertLineWithHeadingStyle(selection, line);\r\n                  }\r\n                });\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (word.EditorValue === '' || word.IsApplied) {\r\n          selection.insertParagraph(`#${word.DisplayName}#`, Word.InsertLocation.before);\r\n        } else {\r\n          let content = removeQuotes(word.EditorValue);\r\n          let lines = content.split(/\\r?\\n/); // Handle both \\r\\n and \\n\r\n\r\n          lines.forEach(line => {\r\n            selection.insertParagraph(line, Word.InsertLocation.before);\r\n          });\r\n        }\r\n      }\r\n\r\n      await context.sync();\r\n    } catch (error) {\r\n      console.error('Detailed error:', error);\r\n    }\r\n  });\r\n}\r\n\r\n\r\nfunction insertLineWithHeadingStyle(range: Word.Range, line: string) {\r\n  let style = \"Normal\";\r\n  let text = line;\r\n\r\n  if (line.startsWith('###### ')) {\r\n    style = \"Heading 6\";\r\n    text = line.substring(7).trim();\r\n  } else if (line.startsWith('##### ')) {\r\n    style = \"Heading 5\";\r\n    text = line.substring(6).trim();\r\n  } else if (line.startsWith('#### ')) {\r\n    style = \"Heading 4\";\r\n    text = line.substring(5).trim();\r\n  } else if (line.startsWith('### ')) {\r\n    style = \"Heading 3\";\r\n    text = line.substring(4).trim();\r\n  } else if (line.startsWith('## ')) {\r\n    style = \"Heading 2\";\r\n    text = line.substring(3).trim();\r\n  } else if (line.startsWith('# ')) {\r\n    style = \"Heading 1\";\r\n    text = line.substring(2).trim();\r\n  }\r\n\r\n  const paragraph = range.insertParagraph(text, Word.InsertLocation.before);\r\n  paragraph.style = style;\r\n}\r\n\r\n\r\n\r\nfunction removeQuotes(value: string): string {\r\n  return value\r\n    ? value\r\n      .replace(/^\"|\"$/g, '')\r\n      .replace(/\\\\n/g, '')\r\n      .replace(/\\*\\*/g, '')\r\n      .replace(/\\\\r/g, '')\r\n    : '';\r\n}\r\n\r\nfunction showAddTagError(message) {\r\n  const errorDiv = document.getElementById('submition-error');\r\n  errorDiv.style.display = 'block';\r\n  errorDiv.textContent = message;\r\n}\r\n\r\nfunction transformDocumentName(value: string): string {\r\n  if (!value || value.trim() === '') {\r\n    return value; // Return the input value unchanged\r\n  }\r\n\r\n  const parts = value.split('_');\r\n  if (parts.length <= 1) {\r\n    return value; // Return the input value unchanged if no underscores are present\r\n  }\r\n\r\n  return parts.slice(1).join('_').replace(/%20/g, ' ').replace(/%25/g, '%');\r\n}\r\n\r\n\r\n\r\nfunction createMultiSelectDropdown(i, tag, radioButtonsHTML, textareaValue) {\r\n  const cardContainer = document.getElementById('card-container');\r\n\r\n  // Get the current scroll position\r\n  const scrollPosition = cardContainer.scrollTop;\r\n\r\n  const multiSelectHTML = `\r\n  <div class='p-3 bg-light w-100'>\r\n    <div class=\"mb-3\">\r\n      <label for=\"source-select-${i}\" class=\"form-label\"><span class=\"text-danger\">*</span> Select Sources</label>\r\n      <div class=\"dropdown w-100\">\r\n        <button \r\n          class=\"btn btn-light border w-100 text-start d-flex justify-content-between align-items-start dropdown-toggle dropdown-toggle-sources\" \r\n          type=\"button\" \r\n          id=\"sourceDropdown-${i}\" \r\n          data-bs-toggle=\"dropdown\" \r\n          aria-expanded=\"false\">\r\n          <span id=\"sourceDropdownLabel-${i}\" class='sourceDropdownLabel'></span>\r\n          <span class=\"dropdown-toggle-icon dropdown-toggle-icon-s\"></span>\r\n        </button>\r\n        <ul class=\"dropdown-menu w-100 p-2\" aria-labelledby=\"sourceDropdown-${i}\" style=\"box-shadow: 0 4px 8px rgba(0,0,0,0.1); z-index: 10000;\">\r\n          <li class=\"dropdown-item p-2\" style=\"cursor: pointer;\" data-checkbox-id=\"selectAll-${i}\">\r\n            <div class=\"form-check\">\r\n              <input class=\"form-check-input\" type=\"checkbox\" value=\"selectAll\" id=\"selectAll-${i}\">\r\n              <label class=\"form-check-label\" for=\"selectAll-${i}\">Select All</label>\r\n            </div>\r\n          </li>\r\n          ${sourceList\r\n      .map(\r\n        (source, index) => `\r\n              <li class=\"dropdown-item p-2\" style=\"cursor: pointer;\" data-checkbox-id=\"source-${i}-${index}\">\r\n                <div class=\"form-check\">\r\n                  <input class=\"form-check-input source-checkbox\" type=\"checkbox\" value=\"${source.SourceName}\" id=\"source-${i}-${index}\">\r\n                  <label class=\"form-check-label text-prewrap\" for=\"source-${i}-${index}\">${source.SourceName}</label>\r\n                </div>\r\n              </li>\r\n            `\r\n      )\r\n      .join('')}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <div class=\"d-flex justify-content-end mt-2\">\r\n      <button id=\"cancel-src-btn-${i}\" class=\"btn btn-danger bg-danger-clr px-3 me-2\"><i class=\"fa fa-reply me-2\"></i>Cancel</button>\r\n      <button id=\"ok-src-btn-${i}\" class=\"btn btn-success bg-success-clr px-3\"><i class=\"fa fa-check-circle me-2\"></i>Save</button>\r\n    </div>\r\n  </div>\r\n  `;\r\n\r\n  // Get the accordion body element\r\n  const accordionBody = document.getElementById(`box-bottom-${i}`);\r\n\r\n  // Set height to ensure the dropdown button appears with some space\r\n\r\n  // Clear existing content and insert the dropdown\r\n  accordionBody.innerHTML = multiSelectHTML;\r\n\r\n  // Temporary array to hold the selected sources\r\n  let selectedSources = [];\r\n\r\n  // Get \"Select All\" checkbox and individual source checkboxes\r\n  const selectAllCheckbox = document.getElementById(`selectAll-${i}`);\r\n  const individualCheckboxes = document.querySelectorAll(`#accordion-body-${i} .source-checkbox`);\r\n  const sourceDropdownLabel = document.getElementById(`sourceDropdownLabel-${i}`);\r\n\r\n  // Function to update the dropdown label based on selected checkboxes\r\n  function updateLabel() {\r\n    const selectedSourceNames = selectedSources;\r\n    if (selectedSourceNames.length > 0) {\r\n      sourceDropdownLabel.innerText = selectedSourceNames.join(', ');  // Display selected sources as comma-separated\r\n    } else {\r\n      sourceDropdownLabel.innerText = ' ';  // Default text when no sources are selected\r\n    }\r\n  }\r\n\r\n  // Handle \"Select All\" functionality\r\n  selectAllCheckbox.addEventListener(\"change\", function () {\r\n    const checkboxes = document.querySelectorAll(`#accordion-body-${i} .source-checkbox`);\r\n    checkboxes.forEach((checkbox) => {\r\n      checkbox.checked = this.checked;  // If \"Select All\" is checked, all checkboxes are checked, and vice versa\r\n      // Update the temporary array based on the state of the checkboxes\r\n      if (checkbox.checked) {\r\n        if (!selectedSources.includes(checkbox.value)) {\r\n          selectedSources.push(checkbox.value);  // Add source to the array if checked\r\n        }\r\n      } else {\r\n        selectedSources = selectedSources.filter((source) => source !== checkbox.value);  // Remove unchecked sources\r\n      }\r\n    });\r\n\r\n    updateLabel();  // Update the label when \"Select All\" changes\r\n  });\r\n\r\n\r\n  const selectAllItem = document.querySelector(`#accordion-body-${i} .dropdown-item[data-checkbox-id=\"selectAll-${i}\"]`);\r\n  selectAllItem.addEventListener(\"click\", function (event) {\r\n    event.stopPropagation();  // Prevent dropdown from closing when clicking on the \"Select All\" item\r\n  });\r\n\r\n  // Handle individual checkbox state change\r\n  individualCheckboxes.forEach((checkbox) => {\r\n    checkbox.addEventListener(\"change\", function () {\r\n      if (checkbox.checked) {\r\n        if (!selectedSources.includes(checkbox.value)) {\r\n          selectedSources.push(checkbox.value);  // Add source to the array if checked\r\n        }\r\n      } else {\r\n        selectedSources = selectedSources.filter((source) => source !== checkbox.value);  // Remove unchecked sources\r\n      }\r\n\r\n      // Check if all individual checkboxes are checked\r\n      const allChecked = Array.from(individualCheckboxes).every((checkbox) => checkbox.checked);\r\n      selectAllCheckbox.checked = allChecked;  // Update \"Select All\" checkbox based on individual selections\r\n\r\n      updateLabel();  // Update the label when an individual checkbox is changed\r\n    });\r\n\r\n    // Add click event listener to the whole list item (not just the checkbox)\r\n    const listItem = checkbox.closest(\"li\");\r\n    listItem.addEventListener(\"click\", function (event) {\r\n      event.stopPropagation();  // Prevent dropdown from closing when clicking on list item\r\n    });\r\n  });\r\n\r\n  // Prevent the dropdown from closing when clicking on the \"Select All\" checkbox label\r\n\r\n  // Initialize checkboxes based on tag.Sources\r\n  if (tag.Sources && tag.Sources.length > 0) {\r\n    individualCheckboxes.forEach((checkbox) => {\r\n      if (tag.Sources.includes(checkbox.value)) {\r\n        checkbox.checked = true;  // Check the checkbox if its value is in tag.Sources\r\n        selectedSources.push(checkbox.value);  // Add the source to the temporary array\r\n      }\r\n    });\r\n\r\n    // Also check \"Select All\" if all checkboxes are selected\r\n    const allChecked = Array.from(individualCheckboxes).every((checkbox) => checkbox.checked);\r\n    selectAllCheckbox.checked = allChecked;\r\n    updateLabel();  // Update the label when \"Select All\" changes\r\n\r\n  }\r\n\r\n  // Handle \"OK\" button click\r\n  document.getElementById(`ok-src-btn-${i}`).addEventListener(\"click\", function () {\r\n    tag.Sources = [...selectedSources];  // Add selected sources to tag.Sources when \"OK\" is clicked\r\n    tag.SourceValue = sourceList\r\n      .filter(source => selectedSources.includes(source.SourceName))  // Find the sources with matching SourceNames\r\n      .map(source => source.SourceValue);\r\n    appendAccordionBody(i, tag, radioButtonsHTML, textareaValue, scrollPosition);\r\n  });\r\n\r\n  document.getElementById(`cancel-src-btn-${i}`).addEventListener(\"click\", function () {\r\n    appendAccordionBody(i, tag, radioButtonsHTML, textareaValue, scrollPosition);\r\n  });\r\n}\r\n\r\n\r\n\r\nfunction appendAccordionBody(i, tag, radioButtonsHTML, textareaValue, scrollPosition) {\r\n\r\n  const tooltipButton = tag.Sources && tag.Sources.length > 0\r\n    ? `  <span class=\"tooltiptext\">${tag.Sources}</span>`\r\n    : '<span class=\"tooltiptext\">Source</span>';\r\n\r\n\r\n  const accordionBody = document.getElementById(`box-bottom-${i}`);\r\n  // Clear existing content and insert the dropdown\r\n  accordionBody.innerHTML =\r\n    `\r\n           <textarea class=\"form-control\"\r\n                      rows=\"5\"\r\n                      id=\"chatbox-${i}\"\r\n                      placeholder=\"Type here\">${textareaValue}</textarea>\r\n              <div id=\"mention-dropdown-${i}\" class=\"dropdown-menu\"></div>\r\n              <div class=\"d-flex flex-column align-self-end me-3\">\r\n                <button class=\"btn btn-secondary text-light ms-2 mb-2 ngb-tooltip\" id=\"insert-tag-${i}\">\r\n                <span class=\"tooltiptext\">Insert</span>\r\n                <i class=\"fa fa-plus text-light c-pointer\" ></i>\r\n                </button>\r\n\r\n                <button\r\n                    class=\"btn btn-secondary ms-2 mb-2 text-white ngb-tooltip\"\r\n                    id=\"changeSource-${i}\">\r\n                    ${tooltipButton}\r\n                 <i class=\"fa fa-file-lines text-white\"></i>\r\n                </button>\r\n                <button type=\"submit\"\r\n                    class=\"btn btn-primary bg-primary-clr ms-2 text-white ngb-tooltip\"\r\n                    id=\"sendPrompt-${i}\">\r\n                    <span class=\"tooltiptext\">Send</span>\r\n                  <i class=\"fa fa-paper-plane text-white\"></i>\r\n               </button>\r\n             </div>`;\r\n\r\n  const cardContainer = document.getElementById('card-container');\r\n\r\n  cardContainer.scrollTop = scrollPosition;\r\n  mentionDropdownFn(`chatbox-${i}`, `mention-dropdown-${i}`, 'edit');\r\n  document.getElementById(`doNotApply-${i}`)?.addEventListener('change', () => onDoNotApplyChange(event, i, tag));\r\n\r\n  document.getElementById(`sendPrompt-${i}`)?.addEventListener('click', () => {\r\n    const textareaValue = (document.getElementById(`chatbox-${i}`) as HTMLTextAreaElement).value;\r\n\r\n    sendPrompt(tag, textareaValue, i)\r\n  });\r\n\r\n\r\n  document.getElementById(`insert-tag-${i}`)?.addEventListener('click', () => {\r\n    insertTagPrompt(i)\r\n  })\r\n\r\n  document.getElementById(`changeSource-${i}`)?.addEventListener('click', () => {\r\n    const textareaValue = (document.getElementById(`chatbox-${i}`) as HTMLTextAreaElement).value;\r\n\r\n    // const accordionbody=document.getElementById(`accordion-body-${i}`).innerHTML=''\r\n    createMultiSelectDropdown(i, tag, radioButtonsHTML, textareaValue)\r\n  })\r\n\r\n\r\n}\r\n\r\n\r\nfunction updateEditorFinalTable(data) {\r\n  const regex = /<TableStart>([\\s\\S]*?)<TableEnd>/gi;\r\n  const tableArrays = [];\r\n  let match;\r\n  // Extract and parse the table content from each EditorValue\r\n  while ((match = regex.exec(data)) !== null) {\r\n    try {\r\n      const parsedContent = JSON.parse(match[1]);\r\n      tableArrays.push(parsedContent);\r\n    } catch (error) {\r\n      console.error('Failed to parse JSON:', error, match[1]);\r\n    }\r\n  }\r\n\r\n  let tables = [];\r\n  // Generate HTML tables from the parsed content\r\n  tableArrays.forEach((obj, i) => {\r\n    const table = document.createElement('table');\r\n    table.className = 'table table-styling table-striped table-bordered';\r\n    table.id = `table-${i}`;\r\n\r\n    const thead = document.createElement('thead');\r\n    const headerRow = document.createElement('tr');\r\n\r\n    // Assuming obj[0] has the keys for the table columns\r\n    const keysArray = Object.keys(obj[0]);\r\n\r\n    keysArray.forEach((key) => {\r\n      const th = document.createElement('th');\r\n      th.className = 'header-text';\r\n      th.textContent = key;\r\n      headerRow.appendChild(th);\r\n    });\r\n\r\n    thead.appendChild(headerRow);\r\n    table.appendChild(thead);\r\n\r\n    const tbody = document.createElement('tbody');\r\n\r\n    // Iterate through the data and create rows\r\n    Object.entries(obj).forEach(([key, value]) => {\r\n      const row = document.createElement('tr');\r\n\r\n      keysArray.forEach((key) => {\r\n        const td = document.createElement('td');\r\n        td.textContent = value[key] || ''; // Handle empty or undefined values\r\n        row.appendChild(td);\r\n      });\r\n\r\n      tbody.appendChild(row);\r\n    });\r\n\r\n    table.appendChild(tbody);\r\n\r\n    // Add the table HTML to the tables array\r\n    tables.push(table.outerHTML);\r\n  });\r\n\r\n  // Replace <TableStart>...</TableEnd> with the generated table HTML\r\n  let tableIndex = 0;\r\n  const output = data.replace(regex, () => {\r\n    return tables[tableIndex++] || ''; // Replace with the appropriate table HTML\r\n  });\r\n  return '\\n ' + output;\r\n}","const dataUrl='https://plsdevapp.azurewebsites.net'\r\nconst storeUrl='https://linkwordplugin-aphgcwcgbfdqeccs.eastus-01.azurewebsites.net'\r\nconst versionLink='1.0.5'\r\nexport {dataUrl,storeUrl,versionLink};"],"names":["___HTML_LOADER_IMPORT_0___","module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","b","baseURI","self","href","sourceList","filteredGlossaryTerm","jwt","baseUrl","storedUrl","documentID","organizationName","aiTagList","initialised","availableKeys","glossaryName","isGlossaryActive","GroupName","layTerms","dataList","isTagUpdating","capturedFormatting","emptyFormat","isNoFormatTextAvailable","clientId","userId","clientList","currentYear","Date","getFullYear","async","login","sessionToken","sessionStorage","getItem","console","log","loadLoginPage","getElementById","innerHTML","addEventListener","handleLogin","event","preventDefault","organization","value","username","password","toLowerCase","trim","toLocaleLowerCase","response","fetch","method","headers","body","JSON","stringify","ClientName","Username","Password","ok","showLoginError","data","json","Status","ResponseStatus","Data","Token","setItem","ID","error","message","errorDiv","style","display","textContent","fetchDocument","action","setActiveButton","removeMatchingContentControls","htmlBody","searchBox","suggestionList","updateSuggestions","searchTerm","filter","mention","DisplayName","includes","forEach","listItem","createElement","className","onclick","word","type","Word","run","selection","context","getSelection","sync","doc","DOMParser","parseFromString","EditorValue","bodyNodes","Array","from","childNodes","node","nodeType","Node","TEXT_NODE","split","line","insertLineWithHeadingStyle","ELEMENT_NODE","element","tagName","rows","querySelectorAll","insertParagraph","InsertLocation","before","maxCols","Math","max","map","row","reduce","sum","cell","parseInt","getAttribute","paragraph","table","insertTable","after","rowspanTracker","fill","rowIndex","cells","cellIndex","cellText","innerText","text","join","colspan","rowspan","getCell","elementText","IsApplied","removeQuotes","replaceMention","ComponentKeyDataType","appendChild","displayMentions","loadGlossary","fetchGlossary","displayAiTagList","formatOptionsDisplay","displayCapturedFormatting","removeFormattedText","removeOptionsConfirmation","logout","SourceTypeList","item","SourceValue","AIFlag","SourceName","transformDocumentName","ClientID","aiGroup","Group","find","Name","GroupKey","GroupKeyAll","match","exec","updateEditorFinalTable","UserValue","InitialTable","fetchClients","buttonId","id","button","classList","add","remove","keys","disabled","clearCapturedFormatting","Bold","Underline","Size","captureFormatting","emptyFormatCheckbox","checked","formatList","entries","font","load","bold","Italic","italic","underline","size","highlightColor","name","color","paragraphs","items","textRanges","range","insertText","generateRadioButtons","tag","index","FilteredReportHeadAIHistoryList","ReportHeadAIHistoryList","historyList","Response","unshift","fetchAIHistory","html","chat","j","Prompt","Selected","setTimeout","copyText","onRadioChange","accordionContent","headerId","collapseId","radioButtonsHTML","textColorClass","tooltipButton","Sources","onDoNotApplyChange","target","sourceListBtn","isChecked","tagname","dnaBtn","sendPrompt","prompt","iconelement","payload","ReportHeadID","DocumentID","NCTID","DocumentType","TextSetting","DocumentTemplate","ReportTemplate","ReportHeadGroupKeyID","ThreadID","AssistantID","Container","PromptType","VectorID","parse","innerContainer","tempTextArea","select","execCommand","removeChild","clear","Cardcontainer","applyAITagFn","addGenAITags","accordionItem","mentionDropdownFn","textareaValue","insertTagPrompt","createMultiSelectDropdown","collapseElement","nextElementSibling","toggle","icon","closest","querySelector","searchResults","search","matchCase","matchWholeWord","tableInsertPositions","getRange","push","delete","contentControl","insertContentControl","title","containerParagraph","applyHeadingStyleIfNeeded","end","err","startsWith","substring","tagIndex","chatIndex","matchingKey","div","selectElement","FormattedResponse","applyglossary","bodyText","GlossaryTemplate","sort","ClinicalTerm","processedTerms","Set","filteredTerms","term","biggerTerm","foundRanges","Map","searchPromises","contentControls","has","set","control","appearance","ContentControlAppearance","boundingBox","Office","addHandlerAsync","EventType","DocumentSelectionChanged","handleSelectionChange","loader","selectedWords","words","displayElement","groupedTerms","LayTerm","clinicalTerm","mainBox","heading","layTerm","subBox","replaceClinicalTerm","displayHighlightedText","checkGlossary","some","selectedClient","client","isSelectedClient","selected","form","promptField","nameField","descriptionField","saveGloballyCheckbox","availableForAllCheckbox","sponsorDropdownButton","sponsorDropdownItems","updateDropdownLabel","selectedOptions","cb","parentElement","input","valid","selectedSponsors","isAvailableForAll","isSaveGlobally","aigroup","aiTagBtn","mentionBtn","formatDropdownBtn","cancelBtnGenAi","showAddTagError","createTextGenTag","Description","GroupKeyClient","AllClient","SaveGlobally","UserDefined","ComponentKeyDataTypeID","ComponentKeyDataAccessID","DocumentTypeID","SourceTypeID","ReportHeadGroupID","ReportHeadSourceID","checkAndDisableSponsors","checkbox","enableSponsors","stopPropagation","field","contains","textareaId","DropdownId","highlightedIndex","mentionDropdown","updateHighlightedItem","totalItems","highlightedItem","scrollIntoView","behavior","block","cursorPosition","selectionStart","textBeforeCursor","slice","lastHashtag","lastIndexOf","query","mentions","filterMentions","editorValue","textareaRect","getBoundingClientRect","left","bottom","selectedItem","selectMention","matches","textarea","currentValue","textBefore","textAfter","lastHashPosition","updatedTextBefore","newCursorPosition","setSelectionRange","parts","scrollPosition","scrollTop","multiSelectHTML","source","selectedSources","selectAllCheckbox","individualCheckboxes","sourceDropdownLabel","updateLabel","selectedSourceNames","allChecked","every","appendAccordionBody","regex","tableArrays","parsedContent","tables","thead","headerRow","keysArray","th","tbody","td","outerHTML","tableIndex","Number","onReady","info","host","HostType","properties","customProperties","property","orgName","retrieveDocumentProperties","URL"],"sourceRoot":""}