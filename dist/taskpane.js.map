{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane/./src/taskpane/index.html","webpack://office-addin-taskpane/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://office-addin-taskpane/webpack/bootstrap","webpack://office-addin-taskpane/webpack/runtime/compat get default export","webpack://office-addin-taskpane/webpack/runtime/define property getters","webpack://office-addin-taskpane/webpack/runtime/global","webpack://office-addin-taskpane/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane/webpack/runtime/publicPath","webpack://office-addin-taskpane/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane/./src/taskpane/taskpane.ts","webpack://office-addin-taskpane/./src/taskpane/data.ts"],"sourcesContent":["// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Link addin</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/11.0.0/css/fabric.min.css\\\"/> <link href=\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\\\" rel=\\\"stylesheet\\\" integrity=\\\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\\\" crossorigin=\\\"anonymous\\\"> <link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\\\"> <link href=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\\\" integrity=\\\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\\\" crossorigin=\\\"anonymous\\\"><\" + \"/script> <div id=\\\"header-nav\\\"> <div class=\\\"logo-header d-flex w-100 justify-content-between align-items-center bg-light\\\" id=\\\"logo-header\\\"></div> <div class=\\\"header bg-dark mb-2\\\" id=\\\"header\\\"> </div> </div> <main id=\\\"app-body\\\" class=\\\"d-block\\\"> <div id=\\\"ai-tag-list-container\\\" class=\\\"accordion\\\"></div> </main> </body> </html> \";\n// Exports\nexport default code;","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n\n  // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n  url = String(url.__esModule ? url.default : url);\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n * See LICENSE in the project root for license information.\r\n */\r\n\r\nimport { dataUrl, storeUrl } from \"./data\";\r\nlet jwt = '';\r\nlet baseUrl = dataUrl\r\nlet storedUrl = storeUrl\r\nlet documentID = ''\r\nlet organizationName = ''\r\nlet aiTagList = [];\r\nlet initialised = true;\r\nlet availableKeys = [];\r\nlet glossaryName = ''\r\nlet isGlossaryActive: boolean = false;\r\nlet imageList = [];\r\nlet GroupName: string = '';\r\nlet layTerms = [];\r\nlet dataList: any = []\r\nlet isTagUpdating: boolean = false;\r\nlet capturedFormatting: any = {};\r\nlet emptyFormat: boolean = false;\r\nlet isNoFormatTextAvailable: boolean = false;\r\nlet clientId = '0';\r\nlet userId = 0;\r\nlet clientList = [];\r\n\r\n\r\n/* global document, Office, Word */\r\n\r\nwindow.addEventListener('hashchange', () => {\r\n  const hash = window.location.hash;\r\n  if (hash === '#/dashboard' && initialised) {\r\n    initialised = false;\r\n    displayMenu();\r\n\r\n  }\r\n});\r\n\r\n\r\nOffice.onReady((info) => {\r\n  if (info.host === Office.HostType.Word) {\r\n    document.getElementById(\"app-body\").style.display = \"flex\";\r\n    const editor = document.getElementById('editor');\r\n\r\n    window.location.hash = '#/login';\r\n    retrieveDocumentProperties()\r\n  }\r\n});\r\n\r\n\r\n// Example usage:\r\n\r\n\r\n\r\nasync function retrieveDocumentProperties() {\r\n  try {\r\n    await Word.run(async (context) => {\r\n      const properties = context.document.properties.customProperties;\r\n      properties.load(\"items\");\r\n\r\n      await context.sync();\r\n      const property = properties.items.find(prop => prop.key === 'DocumentID');\r\n      const orgName = properties.items.find(prop => prop.key === 'Organization');\r\n      if (property && orgName) {\r\n        documentID = property.value;\r\n        organizationName = orgName.value;\r\n        login()\r\n      } else {\r\n        document.getElementById('app-body').innerHTML = `\r\n        <p class=\"px-3 text-center\">Export a document from the LINK AI application to use this functionality.</p>`\r\n        console.log(`Custom property \"documentID\" not found.`);\r\n        return null;\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error retrieving custom property:\", error);\r\n  }\r\n\r\n}\r\n\r\nasync function login() {\r\n  // document.getElementById('header').innerHTML = ``\r\n  const sessionToken = sessionStorage.getItem('token');\r\n  console.log(sessionToken)\r\n  if (sessionToken) {\r\n    jwt = sessionToken;\r\n    window.location.hash = '#/dashboard';\r\n  } else {\r\n    loadLoginPage();\r\n  }\r\n}\r\n\r\nfunction loadLoginPage() {\r\n\r\n\r\n  document.getElementById('app-body').innerHTML = `\r\n    <div class=\"container mt-5\">\r\n      <form id=\"login-form\" class=\"p-4 border rounded\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"organization\" class=\"form-label fw-bold\">Organization</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"organization\" required>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"username\" class=\"form-label fw-bold\">Username</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"username\" required>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"password\" class=\"form-label fw-bold\">Password</label>\r\n          <input type=\"password\" class=\"form-control\" id=\"password\" required>\r\n        </div>\r\n        <div class=\"d-grid\">\r\n          <button type=\"submit\" class=\"btn btn-primary bg-primary-clr\">Login</button>\r\n        </div>\r\n      <div id=\"login-error\" class=\"mt-3 text-danger\" style=\"display: none;\"></div>\r\n\r\n      </form>\r\n    </div>\r\n  `;\r\n\r\n  document.getElementById('login-form').addEventListener('submit', handleLogin);\r\n}\r\n\r\nasync function handleLogin(event) {\r\n  event.preventDefault();\r\n\r\n  // Get the values from the form fields\r\n  const organization = document.getElementById('organization').value;\r\n  const username = document.getElementById('username').value;\r\n  const password = document.getElementById('password').value;\r\n  if (organization.toLowerCase().trim() === organizationName.toLocaleLowerCase().trim()) {\r\n    document.getElementById('app-body').innerHTML = `\r\n  <div id=\"button-container\">\r\n\r\n          <div class=\"loader\" id=\"loader\"></div>\r\n          </div\r\n`\r\n    try {\r\n      const response = await fetch(`${baseUrl}/api/user/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          ClientName: organization,\r\n          Username: username,\r\n          Password: password\r\n        })\r\n      });\r\n\r\n\r\n      if (!response.ok) {\r\n        showLoginError(\"An error occurred during login. Please try again.\")\r\n        throw new Error('Network response was not ok.');\r\n      }\r\n\r\n      const data = await response.json();\r\n      if (data.Status === true && data['Data']) {\r\n        if (data['Data'].ResponseStatus) {\r\n          jwt = data.Data.Token;\r\n          sessionStorage.setItem('token', jwt)\r\n          sessionStorage.setItem('userId', data.Data.ID);\r\n          window.location.hash = '#/dashboard';\r\n\r\n        } else {\r\n          showLoginError(\"An error occurred during login. Please try again.\")\r\n        }\r\n      } else {\r\n        showLoginError(\"An error occurred during login. Please try again.\")\r\n      }\r\n\r\n\r\n      // Handle successful login (e.g., navigate to the next page or show a success message)\r\n\r\n    } catch (error) {\r\n      showLoginError(\"An error occurred during login. Please try again.\")\r\n      console.error('Error during login:', error);\r\n      // Handle login error (e.g., show an error message)\r\n    }\r\n  } else {\r\n    showLoginError(\"The organization specified is not associated with this document\")\r\n  }\r\n}\r\n\r\nfunction showLoginError(message) {\r\n  loadLoginPage();  // Reload the form UI\r\n  const errorDiv = document.getElementById('login-error');\r\n  errorDiv.style.display = 'block';\r\n  errorDiv.textContent = message;\r\n}\r\n\r\nfunction displayMenu() {\r\n  userId = Number(sessionStorage.getItem('userId'))\r\n  // document.getElementById('aitag').addEventListener('click', redirectAI);\r\n  fetchDocument('Init');\r\n\r\n}\r\n\r\nasync function fetchDocument(action) {\r\n  try {\r\n    const response = await fetch(`${baseUrl}/api/report/id/${documentID}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${jwt}`\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok.');\r\n    }\r\n\r\n    //     <div class=\"dropdown\">\r\n    //     <button class=\"btn btn-dark dropdown-toggle\" type=\"button\" id=\"mention\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n    //         Insert\r\n    //     </button>\r\n    //     <ul class=\"dropdown-menu\" aria-labelledby=\"formatDropdown\" style=\"z-index: 100000;\">\r\n    //         <li><button class=\"dropdown-item\" id=\"mentiontags\">Search Tags</button></li>\r\n    //         <li><button class=\"dropdown-item\" id=\"addgenaitag\" d>Add Text GenAI Tag</button></li>\r\n    //     </ul>\r\n    // </div>\r\n\r\n    const data = await response.json();\r\n    document.getElementById('app-body').innerHTML = ``\r\n    document.getElementById('logo-header').innerHTML = `\r\n        <img  id=\"main-logo\" src=\"${storedUrl}/assets/logo.png\" alt=\"\" class=\"logo\"> <i class=\"fa fa-sign-out me-5 c-pointer\" aria-hidden=\"true\" id=\"logout\"><span class=\"tooltiptext\">Logout</span></i>\r\n`\r\n    document.getElementById('header').innerHTML = `\r\n\r\n    <div class=\"d-flex justify-content-around\">\r\n        <button class=\"btn btn-dark\" id=\"mention\">Insert</button>\r\n        <button class=\"btn btn-dark\" id=\"aitag\">Refine</button>\r\n\r\n        <!-- Dropdown for Formatting -->\r\n        <div class=\"dropdown\">\r\n            <button class=\"btn btn-dark dropdown-toggle\" type=\"button\" id=\"formatDropdown\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                Actions\r\n            </button>\r\n            <ul class=\"dropdown-menu\" aria-labelledby=\"formatDropdown\" style=\"z-index: 100000;\">\r\n                <li><button class=\"dropdown-item\" id=\"selectFormat\">Define Formatting</button></li>\r\n                <li><button class=\"dropdown-item\" id=\"glossary\" disabled>Glossary</button></li>\r\n                <li><button class=\"dropdown-item\" id=\"removeFormatting\" disabled>Remove Formatted Text</button></li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n\r\n`\r\n    // <button class=\"btn  btn-dark me-2\" id=\"imagebtn\">Image</button>\r\n\r\n\r\n    document.getElementById('mention').addEventListener('click', displayMentions);\r\n    document.getElementById('glossary').addEventListener('click', fetchGlossary);\r\n\r\n    document.getElementById('aitag').addEventListener('click', displayAiTagList);\r\n    document.getElementById('selectFormat').addEventListener('click', formatOptionsDisplay);\r\n    document.getElementById('removeFormatting').addEventListener('click', removeOptionsConfirmation);\r\n\r\n    document.getElementById('logout').addEventListener('click', logout);\r\n\r\n    // document.getElementById('imagebtn').addEventListener('click', fetchGeneralImages);\r\n\r\n\r\n\r\n    // Extracting the relevant AI group from the response\r\n    dataList = data['Data'];\r\n    clientId = dataList.ClientID;\r\n    const aiGroup = data['Data'].Group.find(element => element.DisplayName === 'AIGroup');\r\n    GroupName = aiGroup ? aiGroup.Name : '';\r\n    aiTagList = aiGroup ? aiGroup.GroupKey : [];\r\n\r\n    availableKeys = data['Data'].GroupKeyAll.filter(element => element.ComponentKeyDataType === 'TABLE' || element.ComponentKeyDataType === 'TEXT');\r\n    fetchClients();\r\n    if (action === 'AIpanel') {\r\n      displayAiTagList();\r\n    }\r\n    // Call function to display the AI Tag List on the UI\r\n\r\n  } catch (error) {\r\n    console.error('Error fetching glossary data:', error);\r\n  }\r\n}\r\n\r\nasync function fetchClients() {\r\n  try {\r\n    const response = await fetch(`${baseUrl}/api/client/all/${userId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${jwt}`\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok.');\r\n    }\r\n\r\n\r\n\r\n    const data = await response.json();\r\n    clientList = data['Data'];\r\n  } catch (error) {\r\n  }\r\n}\r\n\r\n\r\n\r\nasync function formatOptionsDisplay() {\r\n  if (!isTagUpdating) { // Check if isTagUpdating is false\r\n    if (isGlossaryActive) {\r\n      await clearGlossary();\r\n    }\r\n    const htmlBody = `\r\n      <div class=\"container mt-3\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n               <!-- Buttons for Capture and Empty Format -->\r\n            <div class=\"d-flex justify-content-end\">\r\n              <button id=\"capture-format-btn\" class=\"btn btn-primary bg-primary-clr\"><i class=\"fa fa-border-style me-1\"></i>  Capture Format</button>\r\n            </div>\r\n            <!-- <h5 class=\"card-title\">Formatting Options</h5> -->\r\n          </div>\r\n          <div class=\"card-body\">\r\n           <div>\r\n                <input type=\"checkbox\" id=\"empty-format-checkbox\" class=\"form-check-input mb-2\">\r\n                <label for=\"empty-format-checkbox\" class=\"form-check-label empty-format-checkbox-label\">Skip ignoring and removing format-based text</label>\r\n              </div>\r\n            <!-- Section to display captured formatting -->\r\n            <div id=\"format-details\">\r\n              <h5 class=\"my-3\">Selected Formatting:</h5>\r\n              <ul id=\"format-list\" class=\"list-unstyled\"></ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n\r\n    document.getElementById('app-body').innerHTML = htmlBody;\r\n    if (Object.keys(capturedFormatting).length === 0) {\r\n      const formatDetails = document.getElementById(\"format-details\");\r\n      formatDetails.style.display = 'none';\r\n      // The object is not empty\r\n    }\r\n\r\n    const glossaryBtn = document.getElementById('glossary') as HTMLButtonElement;\r\n    glossaryBtn.disabled = true;\r\n    if (emptyFormat) {\r\n      clearCapturedFormatting();\r\n    }\r\n    else {\r\n      if (capturedFormatting.Bold === null ||\r\n        capturedFormatting.Underline === 'Mixed' ||\r\n        capturedFormatting.Size === null ||\r\n        capturedFormatting[\"Font Name\"] === null ||\r\n        capturedFormatting[\"Background Color\"] === '' ||\r\n        capturedFormatting[\"Text Color\"] === '') {\r\n        const formatList = document.getElementById(\"format-list\");\r\n        formatList.innerHTML = \"<p>Multiple style values found. Try again</p>\";\r\n        const removeFormatBtn = document.getElementById('removeFormatting') as HTMLButtonElement;\r\n        removeFormatBtn.disabled = true;\r\n      } else {\r\n        const removeFormatBtn = document.getElementById('removeFormatting') as HTMLButtonElement;\r\n        removeFormatBtn.disabled = false;\r\n        displayCapturedFormatting();\r\n      }\r\n    }\r\n    // Event listeners for the buttons\r\n\r\n    document.getElementById(\"capture-format-btn\").addEventListener(\"click\", captureFormatting);\r\n\r\n    const emptyFormatCheckbox = document.getElementById(\"empty-format-checkbox\") as HTMLInputElement;\r\n    if (isNoFormatTextAvailable) {\r\n      emptyFormatCheckbox.checked = true;\r\n      clearCapturedFormatting();\r\n    }\r\n\r\n    emptyFormatCheckbox.addEventListener(\"change\", () => {\r\n      if (emptyFormatCheckbox.checked) {\r\n        isNoFormatTextAvailable = true;\r\n        clearCapturedFormatting();\r\n      } else {\r\n        const CaptureBtn = document.getElementById('capture-format-btn') as HTMLButtonElement;\r\n        CaptureBtn.disabled = false;\r\n        isNoFormatTextAvailable = false;\r\n        emptyFormat = false;\r\n        const glossaryBtn = document.getElementById('glossary') as HTMLButtonElement;\r\n        glossaryBtn.disabled = true;\r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction displayCapturedFormatting() {\r\n  emptyFormat = false;\r\n  const formatList = document.getElementById(\"format-list\");\r\n  formatList.innerHTML = \"\"; // Clear the list before adding new items\r\n\r\n  for (const [key, value] of Object.entries(capturedFormatting)) {\r\n    if ((key === \"Text Color\" || key === \"Background Color\") && value) {\r\n      formatList.innerHTML += `\r\n        <li><strong>${key}:</strong>${value}\r\n          <span style=\"display:inline-block;width:15px;height:15px;background-color:${value};border:1px solid black;\"></span>\r\n        </li>\r\n      `;\r\n    } else {\r\n      formatList.innerHTML += `<li><strong>${key}:</strong> ${value}</li>`;\r\n    }\r\n  }\r\n}\r\n\r\nfunction clearCapturedFormatting() {\r\n  capturedFormatting = {}; // Clear the captured formatting object\r\n  const formatDetails = document.getElementById(\"format-details\");\r\n  formatDetails.style.display = 'none';\r\n  // formatList.innerHTML = `<li>No formatting selected.</li>`;\r\n  emptyFormat = true;\r\n  const glossaryBtn = document.getElementById('glossary') as HTMLButtonElement;\r\n  glossaryBtn.disabled = false;\r\n  const CaptureBtn = document.getElementById('capture-format-btn') as HTMLButtonElement;\r\n  CaptureBtn.disabled = true;\r\n\r\n  const removeFormatBtn = document.getElementById('removeFormatting') as HTMLButtonElement;\r\n  removeFormatBtn.disabled = true;\r\n\r\n  console.log(\"Captured formatting cleared.\");\r\n}\r\n\r\nasync function captureFormatting() {\r\n  try {\r\n    await Word.run(async (context) => {\r\n      const selection = context.document.getSelection();\r\n      const font = selection.font;\r\n      font.load([\"bold\", \"italic\", \"underline\", \"size\", \"highlightColor\", \"name\", 'color']);\r\n\r\n      await context.sync();\r\n\r\n      capturedFormatting = {\r\n        Bold: font.bold,\r\n        Italic: font.italic,\r\n        Underline: font.underline,\r\n        Size: font.size,\r\n        \"Background Color\": font.highlightColor,\r\n        \"Font Name\": font.name,\r\n        'Text Color': font.color\r\n      };\r\n\r\n\r\n\r\n      const formatDetails = document.getElementById(\"format-details\");\r\n      formatDetails.style.display = 'block';\r\n\r\n      if (capturedFormatting.Bold === null ||\r\n        capturedFormatting.Underline === 'Mixed' ||\r\n        capturedFormatting.Size === null ||\r\n        capturedFormatting[\"Font Name\"] === null ||\r\n        capturedFormatting[\"Background Color\"] === '' ||\r\n        capturedFormatting[\"Text Color\"] === ''\r\n\r\n      ) {\r\n        const formatList = document.getElementById(\"format-list\");\r\n        formatList.innerHTML = \"<p>Multiple style values found. Try again</p>\";\r\n        const removeFormatBtn = document.getElementById('removeFormatting') as HTMLButtonElement;\r\n        removeFormatBtn.disabled = true;\r\n      } else {\r\n        const removeFormatBtn = document.getElementById('removeFormatting') as HTMLButtonElement;\r\n        removeFormatBtn.disabled = false;\r\n        displayCapturedFormatting();\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error capturing formatting:\", error);\r\n  }\r\n}\r\n\r\n\r\n\r\nasync function removeOptionsConfirmation() {\r\n  if (!isTagUpdating) {\r\n    if (isGlossaryActive) {\r\n      await clearGlossary();\r\n    } // Check if isTagUpdating is false\r\n    const htmlBody = `\r\n      <div class=\"container mt-3\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            <h5 class=\"card-title\">Are you sure you want to remove formatted text ?</h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n          <div id=\"format-details\">\r\n              <h5>Selected Formatting:</h5>\r\n              <ul id=\"format-list\" class=\"list-unstyled mb-3\"></ul>\r\n              <small class=\"text-secondary font-italic\" id=\"warning-rem-fmt\"></small>\r\n             \r\n            </div>\r\n               <!-- Buttons for Capture and Empty Format -->\r\n            <div class=\"d-flex justify-content-end mt-2\">\r\n              <button id=\"change-ft-btn\" class=\"btn btn-danger bg-danger-clr px-3 me-2\"><i class=\"fa fa-reply me-2\"></i><strong>Cancel</strong></button>\r\n              <button id=\"clear-ft-btn\" class=\"btn btn-success bg-success-clr px-3\"><i class=\"fa fa-check-circle me-2\"></i><strong>Yes</strong></button>\r\n\r\n            </div>\r\n\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n\r\n\r\n    document.getElementById('app-body').innerHTML = htmlBody;\r\n    displayCapturedFormatting();\r\n\r\n    if (capturedFormatting['Background Color'] === null &&\r\n      capturedFormatting['Text Color'] === '#000000') {\r\n      const warningEle = document.getElementById('warning-rem-fmt').innerHTML = 'Warning : The captured formatting is broad. This might result in unintended text removal throughout the document. Proceed?'\r\n    }\r\n\r\n    // Event listeners for the buttons\r\n    document.getElementById(\"clear-ft-btn\").addEventListener(\"click\", removeFormattedText);\r\n    document.getElementById(\"change-ft-btn\").addEventListener(\"click\", formatOptionsDisplay);\r\n\r\n  }\r\n}\r\n\r\nasync function removeFormattedText() {\r\n  try {\r\n    await Word.run(async (context) => {\r\n\r\n      const iconelement = document.getElementById(`clear-ft-btn`);\r\n      iconelement.innerHTML = `<i class=\"fa fa-spinner fa-spin text-white me-2\"></i><strong>Yes</strong>`;\r\n      const clrBtn = document.getElementById('clear-ft-btn') as HTMLButtonElement;\r\n      clrBtn.disabled = true;\r\n\r\n      const changeBtn = document.getElementById('change-ft-btn') as HTMLButtonElement;\r\n      changeBtn.disabled = true;\r\n      const paragraphs = context.document.body.paragraphs;\r\n      paragraphs.load(\"items\"); // Load paragraphs from the body\r\n\r\n      await context.sync();\r\n\r\n      // Iterate through each paragraph in the document body\r\n      for (const paragraph of paragraphs.items) {\r\n        // Check if the paragraph contains text\r\n        if (paragraph.text.trim() !== \"\") {\r\n          const textRanges = paragraph.split([\" \"]); // Split paragraph into individual words/segments\r\n          textRanges.load(\"items, font\");\r\n\r\n          await context.sync();\r\n\r\n          for (const range of textRanges.items) {\r\n            const font = range.font;\r\n            font.load([\"bold\", \"italic\", \"underline\", \"size\", \"highlightColor\", \"name\", \"color\"]);\r\n\r\n            await context.sync();\r\n\r\n            // Check if the text range matches the captured formatting\r\n            if (\r\n              font.highlightColor === capturedFormatting['Background Color'] &&\r\n              font.color === capturedFormatting['Text Color'] &&\r\n              font.bold === capturedFormatting['Bold'] &&\r\n              font.italic === capturedFormatting['Italic'] &&\r\n              font.size === capturedFormatting['Size'] &&\r\n              font.underline === capturedFormatting['Underline'] &&\r\n              font.name === capturedFormatting['Font Name']\r\n            ) {\r\n              // Clear the range whether it's a full word or part of a word\r\n              font.highlightColor = \"#FFFFFF\"; // Set new background color\r\n              font.color = \"#000000\"; // Set new text color\r\n              font.bold = false; // Reset bold if needed\r\n              font.italic = false; // Reset italic if needed\r\n              font.underline = \"None\";\r\n              paragraph.insertText(\" \", Word.InsertLocation.replace);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      await context.sync();\r\n      capturedFormatting = {}; // Clear the captured formatting object\r\n      const formatDetails = document.getElementById(\"format-details\");\r\n      formatDetails.style.display = 'none';\r\n      // formatList.innerHTML = `<li>No formatting selected.</li>`;\r\n      emptyFormat = true;\r\n      isNoFormatTextAvailable = true;\r\n      const glossaryBtn = document.getElementById('glossary') as HTMLButtonElement;\r\n      glossaryBtn.disabled = false;\r\n      formatOptionsDisplay()\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error removing formatted text:\", error);\r\n  }\r\n}\r\n\r\n\r\nasync function fetchAIHistory(tag) {\r\n  try {\r\n    const response = await fetch(`${baseUrl}/api/report/ai-history/${tag.ID}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${jwt}`\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok.');\r\n    }\r\n\r\n    const data = await response.json();\r\n    tag.ReportHeadAIHistoryList = data['Data'] || [];\r\n    tag.FilteredReportHeadAIHistoryList = [];\r\n    tag.ReportHeadAIHistoryList.forEach((historyList, i) => {\r\n      historyList.Response = removeQuotes(historyList.Response);\r\n      tag.FilteredReportHeadAIHistoryList.unshift(historyList);\r\n\r\n    });\r\n    return tag.FilteredReportHeadAIHistoryList;\r\n\r\n  } catch (error) {\r\n    console.error('Error fetching AI history:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\n\r\nasync function generateRadioButtons(tag: any, index: number): Promise<string> {\r\n  if (!tag.FilteredReportHeadAIHistoryList || tag.FilteredReportHeadAIHistoryList.length === 0) {\r\n    await fetchAIHistory(tag);\r\n  }\r\n\r\n  if (tag.FilteredReportHeadAIHistoryList.length > 0) {\r\n    // Generate the HTML\r\n    const html = tag.FilteredReportHeadAIHistoryList.map((chat: any, j: number) =>\r\n      `<div class=\"row chatbox\">\r\n        <div class=\"col-md-12 mt-2 p-2\">\r\n          <span class=\"ms-3\">\r\n            <i class=\"fa fa-copy text-secondary c-pointer\" title=\"Copy Response\" id=\"copyPrompt-${index}-${j}\"></i>\r\n          </span>\r\n          <span class=\"float-end w-75 me-3\">\r\n            <div class=\"form-control h-34 d-flex align-items-center dynamic-height user\">\r\n              ${chat.Prompt}\r\n            </div>\r\n          </span>\r\n        </div>\r\n        <div class=\"col-md-12 mt-2 p-2 d-flex align-items-center\">\r\n          <span class=\"radio-select\">\r\n            <input class=\"form-check-input c-pointer\" type=\"radio\" name=\"flexRadioDefault-${index}\"\r\n              id=\"flexRadioDefault1-${index}-${j}\" ${chat.Selected === 1 ? 'checked' : ''}>\r\n          </span>\r\n          <span class=\"ms-2 w-75\">\r\n            <div class=\"form-control h-34 d-flex align-items-center dynamic-height ai-reply ${chat.Selected === 1 ? 'ai-selected-reply' : 'bg-light'}\" id='selected-response-${index}${j}'>\r\n              ${chat.Response}\r\n            </div>\r\n          </span>\r\n          <span class=\"ms-2\">\r\n            <i class=\"fa fa-copy text-secondary c-pointer\" title=\"Copy Response\" id=\"copyResponse-${index}-${j}\"></i>\r\n          </span>\r\n        </div>\r\n\r\n\r\n      </div>`\r\n    ).join('');\r\n\r\n    // Attach event listeners after the HTML is inserted\r\n    setTimeout(() => {\r\n      tag.FilteredReportHeadAIHistoryList.forEach((chat: any, j: number) => {\r\n        document.getElementById(`copyPrompt-${index}-${j}`)?.addEventListener('click', () => copyText(chat.Prompt));\r\n        document.getElementById(`copyResponse-${index}-${j}`)?.addEventListener('click', () => copyText(chat.Response));\r\n        document.getElementById(`flexRadioDefault1-${index}-${j}`)?.addEventListener('change', () => onRadioChange(tag, index, j));\r\n\r\n      });\r\n    }, 0);\r\n\r\n    return html;\r\n  } else {\r\n    return '<div>No AI history available.</div>';\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nfunction accordianContent(headerId, collapseId, tag, radioButtonsHTML, i) {\r\n  const textColorClass = tag.IsApplied ? 'text-secondary' : '';\r\n\r\n  const body = `\r\n    <h2 class=\"accordion-header\" id=\"${headerId}\">\r\n      <button \r\n        class=\"accordion-button collapsed\" \r\n        type=\"button\" \r\n        data-bs-toggle=\"collapse\" \r\n        data-bs-target=\"#${collapseId}\" \r\n        aria-expanded=\"false\" \r\n        aria-controls=\"${collapseId}\">\r\n        <span class=\"${textColorClass}\" id=\"tagname-${i}\">${tag.DisplayName}</span>\r\n      </button>\r\n    </h2>\r\n    <div id=\"${collapseId}\" class=\"accordion-collapse collapse\" aria-labelledby=\"${headerId}\">\r\n      <div class=\"accordion-body chatbox\" id=\"selected-response-parent-${i}\">\r\n        ${radioButtonsHTML}\r\n      </div>\r\n\r\n      <div class=\"form-check form-switch mb-0 chatbox\">\r\n              <div class=\"col-md-12 px-3\">\r\n\r\n        <label class=\"form-check-label pb-3\" for=\"doNotApply-${i}\"><span class=\"fs-12\">Do not apply<span></label>\r\n        <input \r\n          class=\"form-check-input\" \r\n          type=\"checkbox\" \r\n          id=\"doNotApply-${i}\" \r\n          ${tag.IsApplied ? 'checked' : ''}  \r\n        >\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"col-md-12 d-flex align-items-center justify-content-end chatbox p-3\">\r\n        <textarea \r\n          class=\"form-control\" \r\n          rows=\"3\" \r\n          id=\"chatbox-${i}\" \r\n          placeholder=\"Type here\">\r\n        </textarea>\r\n        <div class=\"d-flex align-self-end\">\r\n          <button \r\n            type=\"submit\" \r\n            class=\"btn btn-primary bg-primary-clr ms-2 text-white\" \r\n            id=\"sendPrompt-${i}\">\r\n            <i class=\"fa fa-paper-plane text-white\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n\r\n  return body;\r\n\r\n\r\n}\r\n\r\nasync function onDoNotApplyChange(event, index, tag: any) {\r\n  tag.IsApplied = event.target.checked;\r\n  const isChecked = event.target.checked;\r\n  const tagname = document.getElementById(`tagname-${index}`);\r\n  const dnaBtn = document.getElementById(`doNotApply-${index}`) as HTMLInputElement;\r\n\r\n  try {\r\n    dnaBtn.disabled = true\r\n    const response = await fetch(`${baseUrl}/api/report/head/groupkey`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${jwt}`\r\n      },\r\n      body: JSON.stringify(tag)\r\n    });\r\n\r\n    if (!response.ok) {\r\n      dnaBtn.disabled = false\r\n      throw new Error('Network response was not ok.');\r\n    }\r\n\r\n    const data = await response.json();\r\n    if (data['Data'] && data['Status'] === true) {\r\n      dnaBtn.disabled = false\r\n    }\r\n\r\n  } catch (error) {\r\n    dnaBtn.disabled = false\r\n    console.error('Error updating do not apply:', error);\r\n  }\r\n\r\n  if (tagname) {\r\n    const match = availableKeys.find(item => tag.DisplayName === item.DisplayName);\r\n    if (isChecked) {\r\n      if (match) match.IsApplied = true;\r\n      tagname.classList.add('text-secondary');\r\n    } else {\r\n      if (match) match.IsApplied = false;\r\n      tagname.classList.remove('text-secondary');\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nasync function sendPrompt(tag, prompt, index) {\r\n  if (prompt !== '' && !isTagUpdating) {\r\n    isTagUpdating = true;\r\n\r\n    const iconelement = document.getElementById(`sendPrompt-${index}`);\r\n    iconelement.innerHTML = `<i class=\"fa fa-spinner fa-spin text-white\"></i>`;\r\n\r\n    const payload = {\r\n      ReportHeadID: tag.FilteredReportHeadAIHistoryList[0].ReportHeadID,\r\n      DocumentID: dataList.NCTID,\r\n      DocumentType: dataList.DocumentType,\r\n      TextSetting: dataList.TextSetting,\r\n      DocumentTemplate: dataList.ReportTemplate,\r\n      ReportHeadGroupKeyID: tag.FilteredReportHeadAIHistoryList[0].ReportHeadGroupKeyID,\r\n      ThreadID: tag.ThreadID,\r\n      AssistantID: dataList.AssistantID,\r\n      Container: dataList.Container,\r\n      GroupName: GroupName,\r\n      Prompt: prompt,\r\n      PromptType: 1,\r\n      Response: '',\r\n      VectorID: dataList.VectorID,\r\n      Selected: 0,\r\n      ID: 0\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(`${baseUrl}/api/report/ai-history/add`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${jwt}`\r\n        },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok.');\r\n      }\r\n\r\n      const data = await response.json();\r\n      if (data['Data'] && data['Data'] !== 'false') {\r\n        tag.ReportHeadAIHistoryList = JSON.parse(JSON.stringify(data['Data']));\r\n        tag.FilteredReportHeadAIHistoryList = [];\r\n\r\n        tag.ReportHeadAIHistoryList.forEach((historyList) => {\r\n          historyList.Response = removeQuotes(historyList.Response);\r\n          tag.FilteredReportHeadAIHistoryList.unshift(historyList);\r\n        });\r\n\r\n        // Update only the inner content of the accordion body\r\n        const innerContainer = document.getElementById(`selected-response-parent-${index}`);\r\n        if (innerContainer) {\r\n          const radioButtonsHTML = await generateRadioButtons(tag, index);\r\n          innerContainer.innerHTML = radioButtonsHTML;\r\n        }\r\n\r\n        // Reapply event listeners for the new buttons and radio options\r\n        tag.FilteredReportHeadAIHistoryList.forEach((chat, j) => {\r\n          document.getElementById(`copyPrompt-${index}-${j}`)?.addEventListener('click', () => copyText(chat.Prompt));\r\n          document.getElementById(`copyResponse-${index}-${j}`)?.addEventListener('click', () => copyText(chat.Response));\r\n          document.getElementById(`flexRadioDefault1-${index}-${j}`)?.addEventListener('change', () => onRadioChange(tag, index, j));\r\n        });\r\n\r\n        iconelement.innerHTML = `<i class=\"fa fa-paper-plane text-white\"></i>`;\r\n        document.getElementById(`chatbox-${index}`).value = '';\r\n\r\n        isTagUpdating = false;\r\n      } else {\r\n        iconelement.innerHTML = `<i class=\"fa fa-paper-plane text-white\"></i>`;\r\n        isTagUpdating = false;\r\n      }\r\n    } catch (error) {\r\n      iconelement.innerHTML = `<i class=\"fa fa-paper-plane text-white\"></i>`;\r\n      isTagUpdating = false;\r\n      console.error('Error sending AI prompt:', error);\r\n    }\r\n  } else {\r\n    console.error('No empty prompt allowed');\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n// Your existing copyText function\r\nfunction copyText(text: string) {\r\n  // Copy text to clipboard logic\r\n  const tempTextArea = document.createElement('textarea');\r\n  tempTextArea.value = text;\r\n  document.body.appendChild(tempTextArea);\r\n  tempTextArea.select();\r\n  document.execCommand('copy');\r\n  document.body.removeChild(tempTextArea);\r\n\r\n}\r\n\r\n\r\nasync function logout() {\r\n  if (isGlossaryActive) {\r\n    await clearGlossary();\r\n  }\r\n  sessionStorage.clear();\r\n  window.location.hash = '#/new';\r\n  initialised = true;\r\n  document.getElementById('logo-header').innerHTML = ``;\r\n  document.getElementById('header').innerHTML = ``\r\n  login();\r\n}\r\n\r\n\r\nasync function displayAiTagList() {\r\n  if (isGlossaryActive) {\r\n    await clearGlossary()\r\n  }\r\n  const container = document.getElementById('app-body');\r\n  container.innerHTML = `\r\n  <div class=\"d-flex justify-content-between\">\r\n      <button class=\"btn btn-primary btn-sm bg-primary-clr c-pointer text-white ms-2 mb-2\" id=\"addgenaitag\">\r\n        <i class=\"fa fa-plus text-light\"></i>\r\n        Add\r\n    </button>\r\n\r\n     <button class=\"btn btn-primary btn-sm bg-primary-clr c-pointer text-white me-2 mb-2\" id=\"applyAITag\">\r\n        <i class=\"fa fa-robot text-light\"></i>\r\n        Apply\r\n    </button>\r\n    </div>\r\n\r\n    <div class=\"card-container\"  id=\"card-container\">\r\n    </div>\r\n  `; // Clear any previous content\r\n  const Cardcontainer = document.getElementById('card-container');\r\n  document.getElementById('applyAITag').addEventListener('click', applyAITagFn);\r\n\r\n  document.getElementById('addgenaitag').addEventListener('click', addGenAITags);\r\n\r\n  for (let i = 0; i < aiTagList.length; i++) {\r\n    const tag = aiTagList[i];\r\n    const accordionItem = document.createElement('div');\r\n    accordionItem.classList.add('accordion-item');\r\n    accordionItem.id = `accordion-item-${i}`; // Replace 'yourUniqueId' with your desired ID\r\n\r\n    const headerId = `flush-headingOne-${i}`;\r\n    const collapseId = `flush-collapseOne-${i}`;\r\n\r\n    const radioButtonsHTML = await generateRadioButtons(tag, i);\r\n\r\n    accordionItem.innerHTML = accordianContent(headerId, collapseId, tag, radioButtonsHTML, i);\r\n\r\n    Cardcontainer.appendChild(accordionItem);\r\n\r\n    document.getElementById(`doNotApply-${i}`)?.addEventListener('change', () => onDoNotApplyChange(event, i, tag));\r\n\r\n    document.getElementById(`sendPrompt-${i}`)?.addEventListener('click', () => {\r\n      const textareaValue = (document.getElementById(`chatbox-${i}`) as HTMLTextAreaElement).value;\r\n\r\n      sendPrompt(tag, textareaValue, i)\r\n    });\r\n\r\n  }\r\n\r\n  // Add event listeners after rendering\r\n  addAccordionListeners();\r\n  addCopyListeners();\r\n\r\n}\r\n\r\nfunction addAccordionListeners() {\r\n  const accordionButtons = document.querySelectorAll('.accordion-button');\r\n\r\n  accordionButtons.forEach(button => {\r\n    button.addEventListener('click', function () {\r\n      const collapseElement = this.nextElementSibling;\r\n\r\n      // Check if the element exists before accessing its classList\r\n      if (collapseElement && collapseElement.classList) {\r\n        collapseElement.classList.toggle('show');\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction addCopyListeners() {\r\n  const copyIcons = document.querySelectorAll('.fa-copy');\r\n  copyIcons.forEach(icon => {\r\n    icon.addEventListener('click', function () {\r\n      const textToCopy = this.closest('.p-2').querySelector('.form-control').textContent;\r\n    });\r\n  });\r\n}\r\n\r\nasync function applyAITagFn() {\r\n  return Word.run(async (context) => {\r\n    try {\r\n      const body = context.document.body;\r\n      context.load(body, 'text');\r\n      await context.sync();\r\n\r\n      // Iterate over the aiTagList to search and replace\r\n      for (let i = 0; i < aiTagList.length; i++) {\r\n        const tag = aiTagList[i];\r\n        // Clean up the EditorValue by removing quotes\r\n        tag.EditorValue = removeQuotes(tag.EditorValue);\r\n\r\n        // Search for all instances of the tag.DisplayName enclosed with `#`\r\n        const searchResults = body.search(`#${tag.DisplayName}#`, {\r\n          matchCase: false,\r\n          matchWholeWord: false,\r\n        });\r\n\r\n        // Load the search results to ensure they are available for further operations\r\n        context.load(searchResults, 'items');\r\n\r\n        await context.sync(); // Synchronize to fetch the search results\r\n\r\n        // Log the number of search results for debugging\r\n        console.log(`Found ${searchResults.items.length} instances of #${tag.DisplayName}#`);\r\n\r\n        // Replace each found instance with tag.EditorValue\r\n        searchResults.items.forEach((item: any) => {\r\n          // Ensure the EditorValue is not empty before replacing\r\n          if (tag.EditorValue !== \"\" && !tag.IsApplied) {\r\n            item.insertText(tag.EditorValue, Word.InsertLocation.replace);\r\n          }\r\n        });\r\n\r\n        // Additional sync after each replacement\r\n        await context.sync();\r\n      }\r\n\r\n      // Final sync to apply all changes\r\n      await context.sync();\r\n    } catch (err) {\r\n      console.error(\"Error during tag application:\", err);\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\nasync function onRadioChange(tag, tagIndex, chatIndex) {\r\n  if (!isTagUpdating) {\r\n    isTagUpdating = true;\r\n    const iconelement = document.getElementById(`sendPrompt-${tagIndex}`)\r\n    iconelement.innerHTML = `<i class=\"fa fa-spinner fa-spin text-white\"></i>`\r\n    const chat = tag.FilteredReportHeadAIHistoryList[chatIndex];\r\n    let payload = JSON.parse(JSON.stringify(chat));\r\n    payload.Container = dataList.Container;\r\n    payload.Selected = 1;\r\n    const matchingKey = availableKeys.find(prop => prop.DisplayName === tag.DisplayName);\r\n    if (matchingKey) {\r\n      matchingKey.EditorValue = payload.Response;\r\n    }\r\n    try {\r\n      const response = await fetch(`${baseUrl}/api/report/ai-history/update`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${jwt}`\r\n        },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok.');\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data['Data']) {\r\n        tag.ReportHeadAIHistoryList = JSON.parse(JSON.stringify(data['Data']));\r\n        tag.FilteredReportHeadAIHistoryList = [];\r\n\r\n        tag.ReportHeadAIHistoryList.forEach((historyList) => {\r\n          historyList.Response = removeQuotes(historyList.Response);\r\n          tag.FilteredReportHeadAIHistoryList.unshift(historyList);\r\n        });\r\n\r\n        // Use querySelectorAll to remove 'ai-selected-reply' from all elements\r\n        const selectedParent = document.getElementById(`selected-response-parent-${tagIndex}`)\r\n        const allSelectedDivs = selectedParent.querySelectorAll('.ai-selected-reply');\r\n        allSelectedDivs.forEach(div => {\r\n          div.classList.remove('ai-selected-reply');\r\n          div.classList.add('bg-light');\r\n        });\r\n\r\n        const selectElement = document.getElementById(`selected-response-${tagIndex}${chatIndex}`);\r\n        if (selectElement) {\r\n          selectElement.classList.remove('bg-light');\r\n          selectElement.classList.add('ai-selected-reply');\r\n        }\r\n\r\n\r\n        tag.UserValue = chat.Response;\r\n        tag.EditorValue = chat.Response;\r\n        tag.text = chat.Response;\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error updating AI data:', error);\r\n    } finally {\r\n      const iconelement = document.getElementById(`sendPrompt-${tagIndex}`)\r\n      iconelement.innerHTML = `<i class=\"fa fa-paper-plane text-white\"></i>`\r\n      isTagUpdating = false;\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction selectResponse(tagIndex, chatIndex) {\r\n  // Handle the response selection logic here\r\n  console.log(`Response selected for tagIndex ${tagIndex}, chatIndex ${chatIndex}`);\r\n}\r\n\r\n\r\nasync function fetchGlossary() {\r\n  if (!isTagUpdating) {\r\n\r\n    document.getElementById('app-body').innerHTML = `\r\n  <div id=\"button-container\">\r\n\r\n          <div class=\"loader\" id=\"loader\"></div>\r\n\r\n        <div id=\"highlighted-text\"></div>`\r\n\r\n    loadGlossary()\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction loadGlossary() {\r\n  document.getElementById('app-body').innerHTML = `\r\n        <div id=\"button-container\">\r\n          <button class=\"btn btn-secondary me-2 mark-glossary btn-sm\" id=\"applyglossary\">Apply Glossary</button>\r\n        </div>\r\n  `\r\n  document.getElementById('applyglossary').addEventListener('click', applyglossary);\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport async function applyglossary() {\r\n  document.getElementById('app-body').innerHTML = `\r\n  <div id=\"button-container\">\r\n\r\n          <div class=\"loader\" id=\"loader\"></div>\r\n\r\n        <div id=\"highlighted-text\"></div>`\r\n\r\n  try {\r\n    await Word.run(async (context) => {\r\n\r\n\r\n      const body = context.document.body;\r\n      body.load(\"text\");\r\n      await context.sync(); // Sync to get the text content\r\n\r\n      const bodyText = {\r\n        \"Content\": body.text.replace(/[\\n\\r]/g, ' ')\r\n      };\r\n      try {\r\n        const response = await fetch(`${baseUrl}/api/glossary-template/client-id/${dataList?.ClientID}`, {\r\n          method: 'POST', // or 'POST', depending on your API\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n\r\n            'Authorization': `Bearer ${jwt}`\r\n          },\r\n          body: JSON.stringify(bodyText)\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok.');\r\n        }\r\n\r\n\r\n        const data = await response.json();\r\n        layTerms = data.Data\r\n        if (data.Data.length > 0) {\r\n          glossaryName = data.Data[0].GlossaryTemplate\r\n          loadGlossary()\r\n        } else {\r\n          document.getElementById('app-body').innerHTML = `\r\n       <p class=\"text-center\">Data not available<p/>\r\n  `\r\n        }\r\n\r\n        // alert('Glossary data loaded successfully.');\r\n      } catch (error) {\r\n        console.error('Error fetching glossary data:', error);\r\n        // Optionally show an error message to the user\r\n        // alert('Error fetching glossary data.');\r\n      }\r\n\r\n      const searchPromises = layTerms.map(term => {\r\n        const searchResults = body.search(term.ClinicalTerm, { matchCase: true, matchWholeWord: true });\r\n        searchResults.load(\"items\");\r\n\r\n        return searchResults;\r\n      });\r\n      await context.sync();\r\n\r\n\r\n\r\n      for (const searchResults of searchPromises) {\r\n\r\n        for (const range of searchResults.items) {\r\n          const font = range.font;\r\n          font.load([\"bold\", \"italic\", \"underline\", \"size\", \"highlightColor\", \"name\", 'color']);\r\n\r\n          await context.sync();\r\n\r\n          if (\r\n            font.highlightColor !== capturedFormatting['Background Color'] ||\r\n            font.color !== capturedFormatting['Text Color'] ||\r\n            font.bold !== capturedFormatting['Bold'] ||\r\n            font.italic !== capturedFormatting['Italic'] ||\r\n            font.size !== capturedFormatting['Size'] ||\r\n            font.underline !== capturedFormatting['Underline'] ||\r\n            font.name !== capturedFormatting['Font Name']\r\n          ) {\r\n            font.highlightColor = \"yellow\";\r\n          }\r\n\r\n\r\n        }\r\n\r\n\r\n      }\r\n      // document.getElementById('glossarycheck').style.display='block';\r\n      isGlossaryActive = true;\r\n      document.getElementById('app-body').innerHTML = `\r\n      <div id=\"button-container\">\r\n        <button class=\"btn btn-secondary me-2 clear-glossary btn-sm\" id=\"clearGlossary\">Clear Glossary</button>\r\n      </div>\r\n\r\n      <div id=\"highlighted-text\"></div>\r\n      <div class=\"d-flex justify-content-center box-loader\">\r\n       <div class=\"loader\" id=\"loader\"></div></div>\r\n      \r\n`\r\n\r\n      const displayElement = document.getElementById('loader');\r\n      displayElement.style.display = 'none';\r\n\r\n\r\n\r\n\r\n\r\n      // document.getElementById('loader').style.display='none';\r\n      // document.getElementById('Clear').style.display='block';\r\n\r\n      // Set the flag when glossary is marked\r\n\r\n      await context.sync();\r\n      document.getElementById('clearGlossary').addEventListener('click', clearGlossary);\r\n      Office.context.document.addHandlerAsync(\r\n        Office.EventType.DocumentSelectionChanged,\r\n        handleSelectionChange\r\n      );\r\n\r\n\r\n    });\r\n\r\n    // Optional: Notify user of completion\r\n    console.log('Glossary applied successfully');\r\n  } catch (error) {\r\n    console.error('Error applying glossary:', error);\r\n    // Optional: Notify user of error\r\n    console.log('Error applying glossary. Please try again.');\r\n  }\r\n}\r\n\r\n\r\nasync function handleSelectionChange() {\r\n  await checkGlossary();\r\n}\r\n\r\nexport async function checkGlossary() {\r\n  try {\r\n    await Word.run(async (context) => {\r\n      const selection = context.document.getSelection();\r\n\r\n      selection.load(\"text, font.highlightColor\");\r\n\r\n      await context.sync();\r\n\r\n\r\n\r\n      if (selection.text) {\r\n        const loader = document.getElementById('loader');\r\n        if (loader) {\r\n          loader.style.display = 'block';\r\n        }\r\n        const searchPromises = layTerms.map(term => {\r\n          const searchResults = selection.search(term.ClinicalTerm, { matchCase: false, matchWholeWord: true });\r\n          searchResults.load(\"items\");\r\n          return searchResults;\r\n        });\r\n\r\n        await context.sync();\r\n        const selectedWords = []\r\n        for (const searchResults of searchPromises) {\r\n\r\n          for (const range of searchResults.items) {\r\n            const font = range.font;\r\n            font.load([\"bold\", \"italic\", \"underline\", \"size\", \"highlightColor\", \"name\", \"color\"]);\r\n\r\n            await context.sync();\r\n            if (\r\n              font.highlightColor !== capturedFormatting['Background Color'] ||\r\n              font.color !== capturedFormatting['Text Color'] ||\r\n              font.bold !== capturedFormatting['Bold'] ||\r\n              font.italic !== capturedFormatting['Italic'] ||\r\n              font.size !== capturedFormatting['Size'] ||\r\n              font.underline !== capturedFormatting['Underline'] ||\r\n              font.name !== capturedFormatting['Font Name']\r\n            ) {\r\n              selectedWords.push(range.text);\r\n            }\r\n\r\n          }\r\n        }\r\n        // searchPromises.forEach(searchResults => {\r\n        //   searchResults.items.forEach(item => {\r\n        //   });\r\n        // });\r\n        displayHighlightedText(selectedWords)\r\n\r\n        await context.sync();\r\n\r\n\r\n\r\n\r\n        // const highlightColor = selection.font.highlightColor;\r\n\r\n        // if (highlightColor === \"red\") {\r\n        //   displayHighlightedText(selection.text);\r\n        // } else {\r\n        //   console.log('Selected text is not highlighted.');\r\n        // }\r\n      } else {\r\n        console.log('No text is selected.');\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('Error displaying glossary:', error);\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction displayHighlightedText(words: string[]) {\r\n\r\n  const displayElement = document.getElementById('highlighted-text');\r\n\r\n  if (displayElement) {\r\n    displayElement.innerHTML = ''; // Clear previous content\r\n    const loader = document.getElementById('loader');\r\n    loader.style.display = 'block';\r\n    // Group lay terms by their clinical term\r\n    const groupedTerms: { [clinicalTerm: string]: string[] } = {};\r\n\r\n    words.forEach(word => {\r\n      layTerms.forEach(term => {\r\n        if (term.ClinicalTerm === word) {\r\n          if (!groupedTerms[term.ClinicalTerm]) {\r\n            groupedTerms[term.ClinicalTerm] = [];\r\n          }\r\n          if (!groupedTerms[term.ClinicalTerm].includes(term.LayTerm)) {\r\n            groupedTerms[term.ClinicalTerm].push(term.LayTerm);\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    // Create a box for each clinical term\r\n    Object.keys(groupedTerms).forEach(clinicalTerm => {\r\n      // Create the main box for the clinical term\r\n      const mainBox = document.createElement('div');\r\n      mainBox.className = 'box'; // Add box class for styling\r\n\r\n      // Create a heading for the clinical term\r\n      const heading = document.createElement('h3');\r\n      heading.textContent = `${clinicalTerm} (${glossaryName})`;\r\n      mainBox.appendChild(heading);\r\n\r\n      // Create sub-boxes for each lay term\r\n      groupedTerms[clinicalTerm].forEach(layTerm => {\r\n        const subBox = document.createElement('div');\r\n        subBox.className = 'sub-box'; // Add class for sub-box styling\r\n        subBox.textContent = layTerm;\r\n\r\n        // Add click event listener to replace ClinicalTerm with LayTerm\r\n        subBox.addEventListener('click', async () => {\r\n          await replaceClinicalTerm(clinicalTerm, layTerm);\r\n\r\n          // Remove the main box containing the clicked sub-box\r\n          mainBox.remove();\r\n        });\r\n\r\n        mainBox.appendChild(subBox);\r\n      });\r\n\r\n      displayElement.appendChild(mainBox);\r\n    });\r\n    loader.style.display = 'none';\r\n\r\n  }\r\n}\r\n\r\n\r\nasync function replaceClinicalTerm(clinicalTerm: string, layTerm: string) {\r\n  const displayElement = document.getElementById('loader');\r\n  displayElement.style.display = 'block';\r\n  try {\r\n\r\n    await Word.run(async (context) => {\r\n      // Get the current selection\r\n\r\n      const selection = context.document.getSelection();\r\n\r\n      // Load the selection's text\r\n      selection.load('text');\r\n      await context.sync();\r\n\r\n      // Check if the selected text contains the clinicalTerm\r\n      if (selection.text.includes(clinicalTerm)) {\r\n        // Search for the clinicalTerm in the document\r\n        const searchResults = selection.search(clinicalTerm, { matchCase: false, matchWholeWord: true });\r\n        searchResults.load('items');\r\n\r\n        await context.sync();\r\n\r\n        // Replace each occurrence of the clinicalTerm with the layTerm\r\n        searchResults.items.forEach(item => {\r\n          item.insertText(layTerm, 'replace');\r\n\r\n          // Remove the highlight color (set to white or no highlight)\r\n          item.font.highlightColor = 'white';\r\n        });\r\n        await context.sync();\r\n        displayElement.style.display = 'none';\r\n\r\n        console.log(`Replaced '${clinicalTerm}' with '${layTerm}' and removed highlight in the document.`);\r\n      } else {\r\n        displayElement.style.display = 'none';\r\n\r\n        console.log(`Selected text does not contain '${clinicalTerm}'.`);\r\n      }\r\n    });\r\n  } catch (error) {\r\n    displayElement.style.display = 'none';\r\n\r\n    console.error('Error replacing term:', error);\r\n  }\r\n}\r\n\r\n\r\nasync function clearGlossary() {\r\n  try {\r\n    await Word.run(async (context) => {\r\n      document.getElementById('app-body').innerHTML = `\r\n      <div id=\"button-container\">\r\n    \r\n              <div class=\"loader\" id=\"loader\"></div>\r\n    \r\n            <div id=\"highlighted-text\"></div>`\r\n      const body = context.document.body;\r\n\r\n      const searchPromises = layTerms.map(term => {\r\n        const searchResults = body.search(term.ClinicalTerm, { matchCase: false, matchWholeWord: true });\r\n        searchResults.load(\"items\");\r\n        return searchResults;\r\n      });\r\n\r\n      await context.sync();\r\n      for (const searchResults of searchPromises) {\r\n\r\n        for (const range of searchResults.items) {\r\n          const font = range.font;\r\n          font.load([\"bold\", \"italic\", \"underline\", \"size\", \"highlightColor\", \"name\", \"color\"]);\r\n\r\n          await context.sync();\r\n          if (\r\n            font.highlightColor !== capturedFormatting['Background Color'] ||\r\n            font.color !== capturedFormatting['Text Color'] ||\r\n            font.bold !== capturedFormatting['Bold'] ||\r\n            font.italic !== capturedFormatting['Italic'] ||\r\n            font.size !== capturedFormatting['Size'] ||\r\n            font.underline !== capturedFormatting['Underline'] ||\r\n            font.name !== capturedFormatting['Font Name']\r\n          ) {\r\n            font.highlightColor = \"#FFFFFF\";\r\n          }\r\n\r\n        }\r\n\r\n\r\n      }\r\n\r\n      // searchPromises.forEach(searchResults => {\r\n      //   searchResults.items.forEach(item => {\r\n      //     item.font.highlightColor = 'white'; // Reset highlight color\r\n      //   });\r\n      // });\r\n      document.getElementById('app-body').innerHTML = `\r\n      <div id=\"button-container\">\r\n        <button class=\"btn btn-secondary me-2 mark-glossary btn-sm\" id=\"applyglossary\">Apply Glossary</button>\r\n      </div>\r\n`\r\n      await context.sync();\r\n      isGlossaryActive = false\r\n      document.getElementById('applyglossary').addEventListener('click', applyglossary);\r\n\r\n\r\n    });\r\n\r\n\r\n    console.log('Glossary cleared successfully');\r\n  } catch (error) {\r\n    console.error('Error clearing glossary:', error);\r\n  }\r\n}\r\n\r\n\r\n\r\nasync function displayMentions() {\r\n  if (!isTagUpdating) {\r\n    if (isGlossaryActive) {\r\n      await clearGlossary();\r\n    }\r\n\r\n    const htmlBody = `\r\n      <div class=\"container mt-3\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            <h5 class=\"card-title\">Search Tags</h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"form-group\">\r\n              <input type=\"text\" id=\"search-box\" class=\"form-control\" placeholder=\"Search Tags...\" autocomplete=\"off\" />\r\n            </div>\r\n            <ul id=\"suggestion-list\" class=\"list-group mt-2\"></ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    document.getElementById('app-body').innerHTML = htmlBody;\r\n\r\n    const searchBox = document.getElementById('search-box');\r\n    const suggestionList = document.getElementById('suggestion-list');\r\n\r\n    // Function to filter and display suggestions\r\n    function updateSuggestions() {\r\n      const searchTerm = searchBox.value.toLowerCase();\r\n      if (searchTerm === '') {\r\n        suggestionList.innerHTML = ``;\r\n        return;\r\n      }\r\n      suggestionList.innerHTML = '';\r\n\r\n      // Filter mention list based on search term\r\n      const filteredMentions = availableKeys.filter(mention =>\r\n        mention.DisplayName.toLowerCase().includes(searchTerm)\r\n      );\r\n\r\n      // Render filtered suggestions\r\n      filteredMentions.forEach(mention => {\r\n        const listItem = document.createElement('li');\r\n        listItem.className = 'list-group-item list-group-item-action';\r\n        listItem.textContent = mention.DisplayName;\r\n        listItem.onclick = () => {\r\n          // Replace # with the selected value (adjust as needed)\r\n          replaceMention(mention, mention.ComponentKeyDataType);\r\n          suggestionList.innerHTML = ''; // Clear suggestions after selection\r\n        };\r\n        suggestionList.appendChild(listItem);\r\n      });\r\n    }\r\n\r\n    // Add input event listener to the search box\r\n    searchBox.addEventListener('input', updateSuggestions);\r\n  }\r\n}\r\n\r\nasync function addGenAITags() {\r\n  if (!isTagUpdating) {\r\n    if (isGlossaryActive) {\r\n      await clearGlossary();\r\n    }\r\n\r\n    let selectedClient = clientList.filter((item) => item.ID === clientId);\r\n\r\n    let sponsorOptions = clientList.map(client => {\r\n      const isSelectedClient = selectedClient.some(selected => selected.ID === client.ID);\r\n      return ` \r\n        <li class=\"dropdown-item p-2\" style=\"cursor: pointer;\">\r\n          <div class=\"form-check\">\r\n            <input class=\"form-check-input\" type=\"checkbox\" value=\"${client.ID}\" id=\"sponsor${client.ID}\" ${isSelectedClient ? 'checked disabled' : ''}>\r\n            <label class=\"form-check-label\" for=\"sponsor${client.ID}\">${client.Name}</label>\r\n          </div>\r\n        </li>\r\n      `;\r\n    }).join('');\r\n\r\n    const htmlBody = `\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-body p-3\">\r\n            <form id=\"genai-form\" autocomplete=\"off\" novalidate>\r\n              <!-- Name Field -->\r\n              <div class=\"mb-3\">\r\n                <label for=\"name\" class=\"form-label\"><span class=\"text-danger\">*</span> Name</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"name\" required>\r\n                <div class=\"invalid-feedback\">Name is required.</div>\r\n              </div>\r\n\r\n              <!-- Description Field -->\r\n              <div class=\"mb-3\">\r\n                <label for=\"description\" class=\"form-label\">Description</label>\r\n                <textarea class=\"form-control\" id=\"description\" rows=\"6\"></textarea>\r\n              </div>\r\n\r\n              <!-- Prompt Field -->\r\n              <div class=\"mb-3\">\r\n                <label for=\"prompt\" class=\"form-label\"><span class=\"text-danger\">*</span> Prompt \r\n                  <small class=\"text-secondary\">(Note: Use # tag for content suggestions)</small>\r\n                </label>\r\n                <textarea class=\"form-control\" id=\"prompt\" rows=\"6\"  required></textarea>\r\n                <div class=\"invalid-feedback\">Prompt is required.</div>\r\n                <div id=\"mention-dropdown\" class=\"dropdown-menu\"></div>\r\n              </div>\r\n\r\n              <!-- Save Globally Checkbox -->\r\n              <div class=\"form-check mb-3\">\r\n                <input type=\"checkbox\" class=\"form-check-input\" id=\"saveGlobally\">\r\n                <label class=\"form-check-label\" for=\"saveGlobally\">Save Globally</label>\r\n              </div>\r\n\r\n              <!-- Available to All Sponsors Checkbox -->\r\n              <div class=\"form-check mb-3\">\r\n                <input type=\"checkbox\" class=\"form-check-input\" id=\"isAvailableForAll\" disabled>\r\n                <label class=\"form-check-label\" for=\"isAvailableForAll\">Available to All Sponsors</label>\r\n              </div>\r\n\r\n              <!-- Sponsor Dropdown -->\r\n              <div class=\"mb-3\">\r\n                <label for=\"sponsor\" class=\"form-label\"><span class=\"text-danger\">*</span> Sponsor</label>\r\n                <div class=\"dropdown w-100\">\r\n                  <button \r\n                    class=\"btn btn-white border w-100 text-start d-flex justify-content-between align-items-center dropdown-toggle\" \r\n                    type=\"button\" \r\n                    id=\"sponsorDropdown\" \r\n                    data-bs-toggle=\"dropdown\" \r\n                    aria-expanded=\"false\" \r\n                    disabled>\r\n                    <span id=\"sponsorDropdownLabel\">Select Sponsors</span>\r\n                    <span class=\"dropdown-toggle-icon\"></span>\r\n                  </button>\r\n                  <ul class=\"dropdown-menu w-100 p-2\" aria-labelledby=\"sponsorDropdown\" style=\"box-shadow: 0 4px 8px rgba(0,0,0,0.1);\">\r\n                    <li class=\"dropdown-item p-2\" style=\"cursor: pointer;\">\r\n                      <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" value=\"selectAll\" id=\"selectAll\">\r\n                        <label class=\"form-check-label\" for=\"selectAll\">Select All</label>\r\n                      </div>\r\n                    </li>\r\n                    ${sponsorOptions}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Action Buttons -->\r\n              <div class=\"text-end mt-3\">\r\n                <button id=\"cancel-btn-gen-ai\" class=\"btn btn-danger bg-danger-clr px-3 me-2\"><i class=\"fa fa-reply me-2\"></i><strong>Cancel</strong></button>\r\n                <button type=\"submit\" class=\"btn btn-success bg-success-clr\" id=\"text-gen-save\"><i class=\"fa fa-check-circle me-2\"></i><strong>Save</strong></button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>`;\r\n\r\n    // Add modal HTML to the DOM\r\n    document.getElementById('app-body').innerHTML = htmlBody;\r\n\r\n\r\n    //prompt starting\r\n\r\n    const filterMentions = (query) => {\r\n      // Assuming availableKeys is an array of objects with DisplayName and EditorValue properties\r\n      const filtered = availableKeys.filter(item =>\r\n        item.DisplayName.toLowerCase().includes(query.toLowerCase())\r\n      );\r\n      return filtered;\r\n    };\r\n    let highlightedIndex = -1;\r\n\r\n    const promptField = document.getElementById('prompt');\r\n    const mentionDropdown = document.getElementById('mention-dropdown');\r\n\r\n    // Handle input events on prompt field for mentions\r\n    promptField.addEventListener('input', (e) => {\r\n      const cursorPosition = promptField.selectionStart;\r\n      const textBeforeCursor = promptField.value.slice(0, cursorPosition);\r\n      const lastHashtag = textBeforeCursor.lastIndexOf('#');\r\n\r\n      if (lastHashtag !== -1) {\r\n        const query = textBeforeCursor.slice(lastHashtag + 1).trim();\r\n        if (query.length > 0) {\r\n          const mentions = filterMentions(query);\r\n\r\n          if (mentions.length > 0) {\r\n            mentionDropdown.innerHTML = mentions.map(item =>\r\n              `<li class=\"dropdown-item\" data-editor-value=\"${item.EditorValue}\">${item.DisplayName}</li>`\r\n            ).join('');\r\n\r\n            // Get the position of the textarea and place the dropdown above it\r\n            const textareaRect = promptField.getBoundingClientRect();\r\n            mentionDropdown.style.left = `${textareaRect.left}px`;\r\n            mentionDropdown.style.top = `${textareaRect.top - mentionDropdown.offsetHeight - 5}px`; // Position above the textarea\r\n            mentionDropdown.style.display = 'block';\r\n          } else {\r\n            mentionDropdown.style.display = 'none';\r\n          }\r\n        } else {\r\n          mentionDropdown.style.display = 'none';\r\n        }\r\n      } else {\r\n        mentionDropdown.style.display = 'none';\r\n      }\r\n\r\n    });\r\n\r\n    // Handle keyboard navigation in the dropdown\r\n    promptField.addEventListener('keydown', (e) => {\r\n      const items = document.querySelectorAll('#mention-dropdown .dropdown-item');\r\n      const totalItems = items.length;\r\n\r\n      if (e.key === 'ArrowDown') {\r\n        // Prevent default behavior to stop cursor from moving\r\n        e.preventDefault();\r\n\r\n        // Move the highlight down and wrap around to the top if at the end\r\n        if (highlightedIndex < totalItems - 1) {\r\n          highlightedIndex++;\r\n        } else {\r\n          highlightedIndex = 0; // Wrap to the first item\r\n        }\r\n        updateHighlightedItem();\r\n      } else if (e.key === 'ArrowUp') {\r\n        // Prevent default behavior to stop cursor from moving\r\n        e.preventDefault();\r\n\r\n        // Move the highlight up and wrap around to the bottom if at the top\r\n        if (highlightedIndex > 0) {\r\n          highlightedIndex--;\r\n        } else {\r\n          highlightedIndex = totalItems - 1; // Wrap to the last item\r\n        }\r\n        updateHighlightedItem();\r\n      } else if (e.key === 'Enter' && highlightedIndex !== -1) {\r\n        // Select the highlighted item\r\n        const selectedItem = items[highlightedIndex];\r\n        if (selectedItem) {\r\n          selectMention(selectedItem.getAttribute('data-editor-value'));\r\n          mentionDropdown.style.display = 'none';  // Hide the dropdown after selection\r\n          e.preventDefault();  // Prevent form submission on Enter key\r\n        }\r\n      }\r\n    });\r\n\r\n    // Function to highlight the selected item\r\n    function updateHighlightedItem() {\r\n      const items = document.querySelectorAll('#mention-dropdown .dropdown-item');\r\n      const dropdown = document.getElementById('mention-dropdown');\r\n      const totalItems = items.length;\r\n\r\n      // Remove the 'active' class from all items\r\n      items.forEach(item => item.classList.remove('active'));\r\n\r\n      // Add the 'active' class to the currently highlighted item\r\n      if (highlightedIndex >= 0 && highlightedIndex < totalItems) {\r\n        const highlightedItem = items[highlightedIndex];\r\n        highlightedItem.classList.add('active');\r\n\r\n        // Ensure the highlighted item is visible within the dropdown\r\n        highlightedItem.scrollIntoView({\r\n          behavior: 'smooth',    // Smooth scroll\r\n          block: 'nearest'      // Scroll only if necessary\r\n        });\r\n      }\r\n    }\r\n\r\n\r\n\r\n    // Handle selecting an item from the dropdown via mouse click\r\n    mentionDropdown.addEventListener('click', (e) => {\r\n      if (e.target && e.target.matches('li')) {\r\n        const editorValue = e.target.getAttribute('data-editor-value');\r\n        selectMention(editorValue);\r\n        mentionDropdown.style.display = 'none';  // Hide the dropdown after selection\r\n      }\r\n    });\r\n\r\n    // Function to insert the selected mention into the prompt field\r\n    const selectMention = (editorValue) => {\r\n      const textarea = document.getElementById('prompt');\r\n      const currentValue = textarea.value;\r\n      const cursorPosition = textarea.selectionStart;\r\n\r\n      const textBefore = currentValue.slice(0, cursorPosition);\r\n      const textAfter = currentValue.slice(cursorPosition);\r\n\r\n      const lastHashPosition = textBefore.lastIndexOf('#');\r\n      const updatedTextBefore = textBefore.slice(0, lastHashPosition); // Removing '#' symbol\r\n\r\n      textarea.value = `${updatedTextBefore}${editorValue}${textAfter}`;\r\n      const newCursorPosition = updatedTextBefore.length + editorValue.length;\r\n      textarea.setSelectionRange(newCursorPosition, newCursorPosition);\r\n    };\r\n\r\n    // Hide the dropdown if clicked outside\r\n    document.addEventListener('click', (e) => {\r\n      if (!mentionDropdown.contains(e.target) && e.target !== promptField) {\r\n        mentionDropdown.style.display = 'none';\r\n      }\r\n    });\r\n\r\n    //prompt end\r\n\r\n    const form = document.getElementById('genai-form');\r\n\r\n    const nameField = document.getElementById('name');\r\n    const descriptionField = document.getElementById('description');\r\n    const saveGloballyCheckbox = document.getElementById('saveGlobally');\r\n    const availableForAllCheckbox = document.getElementById('isAvailableForAll');\r\n    const sponsorDropdownButton = document.getElementById('sponsorDropdown');\r\n    const sponsorDropdownItems = document.querySelectorAll('.dropdown-item .form-check-input');\r\n\r\n    document.getElementById('cancel-btn-gen-ai').addEventListener('click', displayAiTagList);\r\n\r\n    // Check if elements exist\r\n    if (form && nameField && promptField && sponsorDropdownItems.length > 0) {\r\n      const updateDropdownLabel = () => {\r\n        if (availableForAllCheckbox.checked) {\r\n          sponsorDropdownButton.textContent = clientList.map(client => client.Name).join(\", \");\r\n        } else {\r\n          const selectedOptions = Array.from(sponsorDropdownItems)\r\n            .filter(cb => cb.checked && cb.id !== 'selectAll')\r\n            .map(cb => cb.parentElement.textContent.trim());\r\n          sponsorDropdownButton.textContent = selectedOptions.length ? selectedOptions.join(\", \") : \"Select Sponsors\";\r\n        }\r\n      };\r\n      // Form validation logic on submit\r\n      form.addEventListener('submit', function (e) {\r\n        e.preventDefault();\r\n\r\n        // Reset previous validation errors\r\n        form.querySelectorAll('.is-invalid').forEach(input => input.classList.remove('is-invalid'));\r\n\r\n        let valid = true;\r\n\r\n        if (!nameField.value.trim()) {\r\n          nameField.classList.add('is-invalid');\r\n          valid = false;\r\n        }\r\n\r\n        if (!promptField.value.trim()) {\r\n          promptField.classList.add('is-invalid');\r\n          valid = false;\r\n        }\r\n\r\n        if (valid) {\r\n          // Prepare object to pass to createTextGenTag\r\n          const selectedSponsors = Array.from(sponsorDropdownItems)\r\n            .filter(cb => cb.checked && cb.id !== 'selectAll')\r\n            .map(cb => {\r\n              const client = clientList.find(client => client.ID == cb.value);\r\n              return client; // Collect the entire client object\r\n            });\r\n\r\n          const isAvailableForAll = availableForAllCheckbox.checked;\r\n          const isSaveGlobally = saveGloballyCheckbox.checked;\r\n\r\n          const formData = {\r\n            DisplayName: nameField.value.trim(),\r\n            Prompt: promptField.value.trim(),\r\n            Description: descriptionField.value.trim(),\r\n            GroupKeyClient: selectedSponsors, // Array of selected sponsor objects\r\n            AllClient: isAvailableForAll ? 1 : 0,\r\n            SaveGlobally: isSaveGlobally,\r\n            UserDefined: '1',\r\n            ComponentKeyDataTypeID: '1',\r\n            ComponentKeyDataAccessID: '3',\r\n            AIFlag: 1,\r\n            DocumentTypeID: dataList.DocumentTypeID,\r\n            ReportHeadID: dataList.ID,\r\n            SourceTypeID: aiTagList[0].SourceTypeID,\r\n            ReportHeadGroupID: aiTagList[0].ReportHeadGroupID,\r\n            ReportHeadSourceID: aiTagList[0].ReportHeadSourceID\r\n          };\r\n\r\n          createTextGenTag(formData);\r\n        }\r\n      });\r\n\r\n\r\n      const checkAndDisableSponsors = () => {\r\n        sponsorDropdownItems.forEach(checkbox => {\r\n          if (!checkbox.disabled) {\r\n            checkbox.checked = true;\r\n            checkbox.disabled = true;\r\n          }\r\n        });\r\n        updateDropdownLabel();\r\n      };\r\n\r\n      // Function to enable sponsors without unchecking them\r\n      const enableSponsors = () => {\r\n        sponsorDropdownItems.forEach(checkbox => {\r\n          const isSelectedClient = selectedClient.some(selected => selected.ID === parseInt(checkbox.value));\r\n          if (!isSelectedClient) {\r\n            checkbox.disabled = false;\r\n          }\r\n        });\r\n        updateDropdownLabel();\r\n      };\r\n\r\n      // Event listener for \"Save Globally\" checkbox\r\n\r\n\r\n      // Event listener for \"Available to All Sponsors\" checkbox\r\n\r\n      saveGloballyCheckbox.addEventListener('change', function () {\r\n        if (this.checked) {\r\n          availableForAllCheckbox.disabled = false;\r\n          sponsorDropdownButton.disabled = false;\r\n        } else {\r\n          enableSponsors();\r\n          availableForAllCheckbox.checked = false;\r\n          availableForAllCheckbox.disabled = true;\r\n          sponsorDropdownButton.disabled = true;\r\n          sponsorDropdownItems.forEach(checkbox => {\r\n            if (!checkbox.disabled) {\r\n              checkbox.checked = false;\r\n              checkbox.disabled = false;\r\n            }\r\n          });\r\n          updateDropdownLabel();\r\n        }\r\n      });\r\n\r\n      // Event listener for \"Available to All Sponsors\" checkbox\r\n      availableForAllCheckbox.addEventListener('change', function () {\r\n        if (this.checked) {\r\n          checkAndDisableSponsors();\r\n        } else {\r\n          enableSponsors();\r\n        }\r\n      });\r\n\r\n      // Add event listener to prevent dropdown close on item selection\r\n      document.querySelectorAll('.dropdown-item').forEach(item => {\r\n        item.addEventListener('click', function (event) {\r\n          event.stopPropagation(); // Prevent dropdown from closing\r\n          const checkbox = this.querySelector('.form-check-input');\r\n          if (checkbox) {\r\n            if (!checkbox.disabled) {\r\n              checkbox.checked = !checkbox.checked;\r\n            }\r\n\r\n            if (checkbox.id === 'selectAll') {\r\n              const isChecked = checkbox.checked;\r\n              sponsorDropdownItems.forEach(cb => {\r\n                if (!cb.disabled) cb.checked = isChecked;\r\n              });\r\n            }\r\n            updateDropdownLabel();\r\n          }\r\n        });\r\n      });\r\n\r\n      // Initial label update\r\n      updateDropdownLabel();\r\n\r\n\r\n      // Clear validation errors when user types\r\n      [nameField, promptField].forEach(field => {\r\n        field.addEventListener('input', function () {\r\n          if (this.classList.contains('is-invalid') && this.value.trim()) {\r\n            this.classList.remove('is-invalid');\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      console.error('Required elements are missing or not rendered yet.');\r\n    }\r\n  }\r\n}\r\n\r\n\r\nasync function createTextGenTag(payload) {\r\n  try {\r\n    const iconelement = document.getElementById(`text-gen-save`);\r\n    const aiTagBtn = document.getElementById('aitag');\r\n    const mentionBtn = document.getElementById('mention');\r\n    const formatDropdownBtn = document.getElementById('formatDropdown');\r\n    const cancelBtnGenAi = document.getElementById('cancel-btn-gen-ai');\r\n\r\n    aiTagBtn.disabled = true;\r\n    cancelBtnGenAi.disabled = true;\r\n    mentionBtn.disabled = true;\r\n    formatDropdownBtn.disabled = true;\r\n    iconelement.innerHTML = `<i class=\"fa fa-spinner fa-spin text-white me-2\"></i><strong>Save</strong>`;\r\n\r\n    const response = await fetch(`${baseUrl}/api/report/group-key/add`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${jwt}`\r\n      },\r\n      body: JSON.stringify(payload)\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok.');\r\n    }\r\n\r\n    const data = await response.json();\r\n    if (data['Data']) {\r\n      fetchDocument('AIpanel');\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('Error creating text generation tag:', error);\r\n  }\r\n}\r\n\r\nexport async function replaceMention(word: any, type: any) {\r\n  return Word.run(async (context) => {\r\n    try {\r\n      const selection = context.document.getSelection();\r\n      await context.sync();\r\n\r\n      if (!selection) {\r\n        throw new Error('Selection is invalid or not found.');\r\n      }\r\n\r\n      if (type === 'TABLE') {\r\n        const parser = new DOMParser();\r\n        const doc = parser.parseFromString(word.EditorValue, 'text/html');\r\n        const tableElement = doc.querySelector('table');\r\n\r\n        if (!tableElement) {\r\n          selection.insertParagraph(`#${word.DisplayName}#`, Word.InsertLocation.before);\r\n          throw new Error('No table found in the provided HTML.');\r\n        }\r\n\r\n        const rows = Array.from(tableElement.querySelectorAll('tr'));\r\n\r\n        if (rows.length === 0) {\r\n          throw new Error('The table does not contain any rows.');\r\n        }\r\n\r\n        const maxCols = Math.max(...rows.map(row => {\r\n          return Array.from(row.querySelectorAll('td, th')).reduce((sum, cell) => {\r\n            return sum + (parseInt(cell.getAttribute('colspan') || '1', 10));\r\n          }, 0);\r\n        }));\r\n\r\n        const paragraph = selection.insertParagraph(\"\", Word.InsertLocation.before);\r\n        await context.sync();\r\n\r\n        if (!paragraph) {\r\n          throw new Error('Failed to insert the paragraph.');\r\n        }\r\n\r\n        const table = paragraph.insertTable(rows.length, maxCols, Word.InsertLocation.after);\r\n        await context.sync();\r\n\r\n        if (!table) {\r\n          throw new Error('Failed to insert the table.');\r\n        }\r\n\r\n        const rowspanTracker: number[] = new Array(maxCols).fill(0);\r\n\r\n        rows.forEach((row, rowIndex) => {\r\n          const cells = Array.from(row.querySelectorAll('td, th'));\r\n          let cellIndex = 0;\r\n\r\n          cells.forEach((cell) => {\r\n            while (rowspanTracker[cellIndex] > 0) {\r\n              rowspanTracker[cellIndex]--;\r\n              cellIndex++;\r\n            }\r\n\r\n            const cellText = Array.from(cell.childNodes)\r\n              .map(node => {\r\n                if (node.nodeType === Node.TEXT_NODE) {\r\n                  return node.textContent?.trim() || '';\r\n                } else if (node.nodeType === Node.ELEMENT_NODE) {\r\n                  return (node as HTMLElement).innerText.trim();\r\n                }\r\n                return '';\r\n              })\r\n              .filter(text => text.length > 0)\r\n              .join(' ');\r\n\r\n            const colspan = parseInt(cell.getAttribute('colspan') || '1', 10);\r\n            const rowspan = parseInt(cell.getAttribute('rowspan') || '1', 10);\r\n\r\n            // Ensure cellIndex is within bounds\r\n            if (cellIndex >= maxCols) {\r\n              // Adjust cellIndex to fit within table dimensions\r\n              cellIndex = maxCols - 1;\r\n            }\r\n\r\n            // Set cell value\r\n            try {\r\n              table.getCell(rowIndex, cellIndex).value = cellText;\r\n\r\n              // Clear cells that span columns\r\n              for (let i = 1; i < colspan; i++) {\r\n                if (cellIndex + i < maxCols) {\r\n                  table.getCell(rowIndex, cellIndex + i).value = \"\";\r\n                }\r\n              }\r\n\r\n              // Update rowspanTracker\r\n              if (rowspan > 1) {\r\n                for (let i = 0; i < colspan; i++) {\r\n                  if (cellIndex + i < maxCols) {\r\n                    rowspanTracker[cellIndex + i] = rowspan - 1;\r\n                  }\r\n                }\r\n              }\r\n\r\n              // Advance cellIndex by colspan\r\n              cellIndex += colspan;\r\n              if (cellIndex >= maxCols) {\r\n                // Adjust cellIndex if it exceeds the table width\r\n                cellIndex = maxCols - 1;\r\n              }\r\n            } catch (cellError) {\r\n              console.error('Error setting cell value:', cellError);\r\n            }\r\n          });\r\n        });\r\n      } else {\r\n        if (word.EditorValue === '' || word.IsApplied) {\r\n          selection.insertParagraph(`#${word.DisplayName}#`, Word.InsertLocation.before);\r\n        } else {\r\n          let content = removeQuotes(word.EditorValue);\r\n          let lines = content.split(/\\r?\\n/); // Handle both \\r\\n and \\n\r\n\r\n          lines.forEach(line => {\r\n            selection.insertParagraph(line, Word.InsertLocation.before);\r\n          });\r\n        }\r\n      }\r\n\r\n      await context.sync();\r\n    } catch (error) {\r\n      console.error('Detailed error:', error);\r\n    }\r\n  });\r\n}\r\n\r\n\r\nfunction removeQuotes(value: string): string {\r\n  return value\r\n    ? value\r\n      .replace(/^\"|\"$/g, '')\r\n      .replace(/\\\\n/g, '')\r\n      .replace(/\\*\\*/g, '')\r\n      .replace(/\\\\r/g, '')\r\n    : '';\r\n}\r\n\r\nfunction newlineadd(value: string): string {\r\n  return value\r\n}\r\n","const dataUrl='https://plsdevapp.azurewebsites.net'\r\nconst storeUrl='https://linkwordplugin-aphgcwcgbfdqeccs.eastus-01.azurewebsites.net'\r\nexport {dataUrl,storeUrl};"],"names":["___HTML_LOADER_IMPORT_0___","module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","b","baseURI","self","href","jwt","baseUrl","storedUrl","documentID","organizationName","aiTagList","initialised","availableKeys","glossaryName","isGlossaryActive","GroupName","layTerms","dataList","isTagUpdating","capturedFormatting","emptyFormat","isNoFormatTextAvailable","clientId","userId","clientList","async","login","sessionToken","sessionStorage","getItem","console","log","loadLoginPage","getElementById","innerHTML","addEventListener","handleLogin","event","preventDefault","organization","value","username","password","toLowerCase","trim","toLocaleLowerCase","response","fetch","method","headers","body","JSON","stringify","ClientName","Username","Password","ok","showLoginError","data","json","Status","ResponseStatus","Data","Token","setItem","ID","error","message","errorDiv","style","display","textContent","fetchDocument","action","displayMentions","fetchGlossary","displayAiTagList","formatOptionsDisplay","removeOptionsConfirmation","logout","ClientID","aiGroup","Group","find","element","DisplayName","Name","GroupKey","GroupKeyAll","filter","ComponentKeyDataType","fetchClients","clearGlossary","htmlBody","keys","disabled","clearCapturedFormatting","Bold","Underline","Size","displayCapturedFormatting","captureFormatting","emptyFormatCheckbox","checked","formatList","entries","Word","run","font","context","getSelection","load","sync","bold","Italic","italic","underline","size","highlightColor","name","color","removeFormattedText","paragraphs","paragraph","items","text","textRanges","split","range","insertText","InsertLocation","generateRadioButtons","tag","index","FilteredReportHeadAIHistoryList","ReportHeadAIHistoryList","forEach","historyList","Response","removeQuotes","unshift","fetchAIHistory","html","map","chat","j","Prompt","Selected","join","setTimeout","copyText","onRadioChange","accordianContent","headerId","collapseId","radioButtonsHTML","IsApplied","onDoNotApplyChange","target","isChecked","tagname","dnaBtn","match","item","classList","add","remove","sendPrompt","prompt","iconelement","payload","ReportHeadID","DocumentID","NCTID","DocumentType","TextSetting","DocumentTemplate","ReportTemplate","ReportHeadGroupKeyID","ThreadID","AssistantID","Container","PromptType","VectorID","parse","innerContainer","tempTextArea","createElement","appendChild","select","execCommand","removeChild","clear","Cardcontainer","applyAITagFn","addGenAITags","accordionItem","id","textareaValue","querySelectorAll","button","collapseElement","nextElementSibling","toggle","icon","closest","querySelector","EditorValue","searchResults","search","matchCase","matchWholeWord","err","tagIndex","chatIndex","matchingKey","div","selectElement","UserValue","loadGlossary","applyglossary","bodyText","GlossaryTemplate","searchPromises","term","ClinicalTerm","Office","addHandlerAsync","EventType","DocumentSelectionChanged","handleSelectionChange","selection","loader","selectedWords","push","words","displayElement","groupedTerms","word","includes","LayTerm","clinicalTerm","mainBox","className","heading","layTerm","subBox","replaceClinicalTerm","displayHighlightedText","checkGlossary","searchBox","suggestionList","updateSuggestions","searchTerm","mention","listItem","onclick","type","tableElement","DOMParser","parseFromString","insertParagraph","before","rows","Array","from","maxCols","Math","max","row","reduce","sum","cell","parseInt","getAttribute","table","insertTable","after","rowspanTracker","fill","rowIndex","cells","cellIndex","cellText","childNodes","node","nodeType","Node","TEXT_NODE","ELEMENT_NODE","innerText","colspan","rowspan","getCell","cellError","line","replaceMention","selectedClient","client","isSelectedClient","some","selected","filterMentions","query","highlightedIndex","promptField","mentionDropdown","updateHighlightedItem","totalItems","highlightedItem","scrollIntoView","behavior","block","cursorPosition","selectionStart","textBeforeCursor","slice","lastHashtag","lastIndexOf","mentions","textareaRect","getBoundingClientRect","left","top","offsetHeight","selectedItem","selectMention","matches","editorValue","textarea","currentValue","textBefore","textAfter","lastHashPosition","updatedTextBefore","newCursorPosition","setSelectionRange","contains","form","nameField","descriptionField","saveGloballyCheckbox","availableForAllCheckbox","sponsorDropdownButton","sponsorDropdownItems","updateDropdownLabel","selectedOptions","cb","parentElement","input","valid","selectedSponsors","isAvailableForAll","isSaveGlobally","aiTagBtn","mentionBtn","formatDropdownBtn","cancelBtnGenAi","createTextGenTag","Description","GroupKeyClient","AllClient","SaveGlobally","UserDefined","ComponentKeyDataTypeID","ComponentKeyDataAccessID","AIFlag","DocumentTypeID","SourceTypeID","ReportHeadGroupID","ReportHeadSourceID","checkAndDisableSponsors","checkbox","enableSponsors","stopPropagation","field","Number","onReady","info","host","HostType","properties","customProperties","property","orgName","retrieveDocumentProperties","URL"],"sourceRoot":""}