{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane/./src/taskpane/index.html","webpack://office-addin-taskpane/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://office-addin-taskpane/webpack/bootstrap","webpack://office-addin-taskpane/webpack/runtime/compat get default export","webpack://office-addin-taskpane/webpack/runtime/define property getters","webpack://office-addin-taskpane/webpack/runtime/global","webpack://office-addin-taskpane/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane/webpack/runtime/publicPath","webpack://office-addin-taskpane/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane/./src/taskpane/taskpane.ts","webpack://office-addin-taskpane/./src/taskpane/data.ts"],"sourcesContent":["// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Link addin</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/11.0.0/css/fabric.min.css\\\"/> <link href=\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\\\" rel=\\\"stylesheet\\\" integrity=\\\"sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65\\\" crossorigin=\\\"anonymous\\\"> <link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\\\"> <link href=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\\\" integrity=\\\"sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4\\\" crossorigin=\\\"anonymous\\\"><\" + \"/script> <div id=\\\"header-nav\\\"> <div class=\\\"logo-header d-flex w-100 justify-content-between align-items-center bg-light\\\" id=\\\"logo-header\\\"> </div> <div class=\\\"header bg-dark mb-2\\\" id=\\\"header\\\"> </div> </div> <main id=\\\"app-body\\\" class=\\\"d-block mh-34\\\"> <div id=\\\"ai-tag-list-container\\\" class=\\\"accordion\\\"></div> </main> <div id=\\\"footer\\\" class=\\\"py-2 text-center footer\\\"> </div> </body> </html>\";\n// Exports\nexport default code;","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n\n  // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n  url = String(url.__esModule ? url.default : url);\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n * See LICENSE in the project root for license information.\r\n */\r\n\r\nimport { dataUrl, storeUrl, versionLink } from \"./data\";\r\nlet jwt = '';\r\nlet baseUrl = dataUrl\r\nlet storedUrl = storeUrl\r\nlet documentID = ''\r\nlet organizationName = ''\r\nlet aiTagList = [];\r\nlet initialised = true;\r\nlet availableKeys = [];\r\nlet glossaryName = ''\r\nlet isGlossaryActive: boolean = false;\r\nlet imageList = [];\r\nlet GroupName: string = '';\r\nlet layTerms = [];\r\nlet dataList: any = []\r\nlet isTagUpdating: boolean = false;\r\nlet capturedFormatting: any = {};\r\nlet emptyFormat: boolean = false;\r\nlet isNoFormatTextAvailable: boolean = false;\r\nlet clientId = '0';\r\nlet userId = 0;\r\nlet clientList = [];\r\nlet version = versionLink;\r\nlet currentYear = new Date().getFullYear();\r\nlet sourceList;\r\nlet filteredGlossaryTerm;\r\n\r\ninterface FontProps {\r\n  highlight?: string;\r\n  color?: string;\r\n  bold?: string;\r\n  italic?: string;\r\n  underline?: string;\r\n  size?: string;\r\n  family?:string;\r\n}\r\n\r\n\r\n\r\n\r\n/* global document, Office, Word */\r\n\r\nwindow.addEventListener('hashchange', () => {\r\n  const hash = window.location.hash;\r\n  if (hash === '#/dashboard' && initialised) {\r\n    initialised = false;\r\n    displayMenu();\r\n\r\n  }\r\n});\r\n\r\n\r\nOffice.onReady((info) => {\r\n  if (info.host === Office.HostType.Word) {\r\n    document.getElementById(\"app-body\").style.display = \"flex\";\r\n    document.getElementById(\"footer\").innerText = `© ${currentYear} - TrialAssure LINK AI Assistant ${version}`\r\n    const editor = document.getElementById('editor');\r\n\r\n    window.location.hash = '#/login';\r\n    retrieveDocumentProperties()\r\n  }\r\n});\r\n\r\n\r\n// Example usage:\r\n\r\n\r\n\r\nasync function retrieveDocumentProperties() {\r\n  try {\r\n    await Word.run(async (context) => {\r\n      const properties = context.document.properties.customProperties;\r\n      properties.load(\"items\");\r\n\r\n      await context.sync();\r\n      const property = properties.items.find(prop => prop.key === 'DocumentID');\r\n      const orgName = properties.items.find(prop => prop.key === 'Organization');\r\n      if (property && orgName) {\r\n        documentID = property.value;\r\n        organizationName = orgName.value;\r\n        login()\r\n      } else {\r\n        document.getElementById('app-body').innerHTML = `\r\n        <p class=\"px-3 text-center\">Export a document from the LINK AI application to use this functionality.</p>`\r\n        console.log(`Custom property \"documentID\" not found.`);\r\n        return null;\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error retrieving custom property:\", error);\r\n  }\r\n\r\n}\r\n\r\nasync function login() {\r\n  // document.getElementById('header').innerHTML = ``\r\n  const sessionToken = sessionStorage.getItem('token');\r\n  console.log(sessionToken)\r\n  if (sessionToken) {\r\n    jwt = sessionToken;\r\n    window.location.hash = '#/dashboard';\r\n  } else {\r\n    loadLoginPage();\r\n  }\r\n}\r\n\r\nfunction loadLoginPage() {\r\n\r\n\r\n  document.getElementById('app-body').innerHTML = `\r\n    <div class=\"container mt-5\">\r\n      <form id=\"login-form\" class=\"p-4 border rounded\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"organization\" class=\"form-label fw-bold\">Organization</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"organization\" required>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"username\" class=\"form-label fw-bold\">Username</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"username\" required>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"password\" class=\"form-label fw-bold\">Password</label>\r\n          <input type=\"password\" class=\"form-control\" id=\"password\" required>\r\n        </div>\r\n        <div class=\"d-grid\">\r\n          <button type=\"submit\" class=\"btn btn-primary bg-primary-clr\">Login</button>\r\n        </div>\r\n      <div id=\"login-error\" class=\"mt-3 text-danger\" style=\"display: none;\"></div>\r\n\r\n      </form>\r\n    </div>\r\n  `;\r\n\r\n  document.getElementById('login-form').addEventListener('submit', handleLogin);\r\n}\r\n\r\nasync function handleLogin(event) {\r\n  event.preventDefault();\r\n\r\n  // Get the values from the form fields\r\n  const organization = document.getElementById('organization').value;\r\n  const username = document.getElementById('username').value;\r\n  const password = document.getElementById('password').value;\r\n  if (organization.toLowerCase().trim() === organizationName.toLocaleLowerCase().trim()) {\r\n    document.getElementById('app-body').innerHTML = `\r\n  <div id=\"button-container\">\r\n\r\n          <div class=\"loader\" id=\"loader\"></div>\r\n          </div\r\n`\r\n    try {\r\n      const response = await fetch(`${baseUrl}/api/user/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          ClientName: organization,\r\n          Username: username,\r\n          Password: password\r\n        })\r\n      });\r\n\r\n\r\n      if (!response.ok) {\r\n        showLoginError(\"An error occurred during login. Please try again.\")\r\n        throw new Error('Network response was not ok.');\r\n      }\r\n\r\n      const data = await response.json();\r\n      if (data.Status === true && data['Data']) {\r\n        if (data['Data'].ResponseStatus) {\r\n          jwt = data.Data.Token;\r\n          sessionStorage.setItem('token', jwt)\r\n          sessionStorage.setItem('userId', data.Data.ID);\r\n          window.location.hash = '#/dashboard';\r\n\r\n        } else {\r\n          showLoginError(\"An error occurred during login. Please try again.\")\r\n        }\r\n      } else {\r\n        showLoginError(\"An error occurred during login. Please try again.\")\r\n      }\r\n\r\n\r\n      // Handle successful login (e.g., navigate to the next page or show a success message)\r\n\r\n    } catch (error) {\r\n      showLoginError(\"An error occurred during login. Please try again.\")\r\n      console.error('Error during login:', error);\r\n      // Handle login error (e.g., show an error message)\r\n    }\r\n  } else {\r\n    showLoginError(\"The organization specified is not associated with this document\")\r\n  }\r\n}\r\n\r\nfunction showLoginError(message) {\r\n  loadLoginPage();  // Reload the form UI\r\n  const errorDiv = document.getElementById('login-error');\r\n  errorDiv.style.display = 'block';\r\n  errorDiv.textContent = message;\r\n}\r\n\r\nfunction displayMenu() {\r\n  userId = Number(sessionStorage.getItem('userId'))\r\n  // document.getElementById('aitag').addEventListener('click', redirectAI);\r\n  fetchDocument('Init');\r\n\r\n}\r\n\r\nasync function fetchDocument(action) {\r\n  try {\r\n    const response = await fetch(`${baseUrl}/api/report/id/${documentID}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${jwt}`\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok.');\r\n    }\r\n\r\n    const data = await response.json();\r\n    document.getElementById('app-body').innerHTML = ``\r\n    document.getElementById('logo-header').innerHTML = `\r\n        <img  id=\"main-logo\" src=\"${storedUrl}/assets/logo.png\" alt=\"\" class=\"logo\"> <i class=\"fa fa-sign-out me-5 c-pointer ngb-tooltip\" aria-hidden=\"true\" id=\"logout\"><span class=\"tooltiptext\">Logout</span></i>\r\n`\r\n    document.getElementById('header').innerHTML = `\r\n    <div class=\"d-flex justify-content-around\">\r\n        <button class=\"btn btn-dark\" id=\"mention\">Insert</button>\r\n        <button class=\"btn btn-dark\" id=\"aitag\">Refine</button>\r\n\r\n        <!-- Dropdown for Formatting -->\r\n        <div class=\"dropdown\">\r\n            <button class=\"btn btn-dark dropdown-toggle\" type=\"button\" id=\"formatDropdown\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                Actions\r\n            </button>\r\n            <ul class=\"dropdown-menu\" aria-labelledby=\"formatDropdown\" style=\"z-index: 100000;\">\r\n                <li><button class=\"dropdown-item\" id=\"selectFormat\">Define Formatting</button></li>\r\n                <li><button class=\"dropdown-item\" id=\"glossary\" disabled>Glossary</button></li>\r\n                <li><button class=\"dropdown-item\" id=\"removeFormatting\" disabled>Remove Formatted Text</button></li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n`\r\n\r\n    if (action === 'Init') {\r\n      setActiveButton('mention');\r\n      displayMentions();\r\n    }else{\r\n      setActiveButton('aitag');\r\n    }\r\n    document.getElementById('mention').addEventListener('click', () => {\r\n      setActiveButton('mention');\r\n      displayMentions();\r\n    });\r\n\r\n    document.getElementById('glossary').addEventListener('click', () => {\r\n      setActiveButton('formatDropdown');\r\n      fetchGlossary()\r\n    });\r\n\r\n    document.getElementById('aitag').addEventListener('click', () => {\r\n      setActiveButton('aitag');\r\n      displayAiTagList();\r\n    });\r\n    document.getElementById('selectFormat').addEventListener('click', () => {\r\n      setActiveButton('formatDropdown');\r\n      formatOptionsDisplay();\r\n    });\r\n    document.getElementById('removeFormatting').addEventListener('click', () => {\r\n      setActiveButton('formatDropdown');\r\n      removeOptionsConfirmation();\r\n    });\r\n\r\n    document.getElementById('logout').addEventListener('click', logout);\r\n\r\n    dataList = data['Data'];\r\n    sourceList = dataList.SourceTypeList.filter(\r\n      (item) => item.SourceValue !== ''\r\n        && item.AIFlag === 1\r\n    ) // Filter items with an extension\r\n      .map((item) => ({\r\n        ...item, // Spread the existing properties\r\n        SourceName: transformDocumentName(item.SourceValue)\r\n      }));\r\n    clientId = dataList.ClientID;\r\n    const aiGroup = data['Data'].Group.find(element => element.DisplayName === 'AIGroup');\r\n    GroupName = aiGroup ? aiGroup.Name : '';\r\n    aiTagList = aiGroup ? aiGroup.GroupKey : [];\r\n\r\n    availableKeys = data['Data'].GroupKeyAll.filter(element => element.ComponentKeyDataType === 'TABLE' || element.ComponentKeyDataType === 'TEXT');\r\n    fetchClients();\r\n    if (action === 'AIpanel') {\r\n      displayAiTagList();\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('Error fetching glossary data:', error);\r\n  }\r\n}\r\n\r\nfunction setActiveButton(buttonId) {\r\n  const buttons = ['mention', 'aitag', 'selectFormat', 'removeFormatting', 'formatDropdown'];\r\n  buttons.forEach(id => {\r\n    const button = document.getElementById(id);\r\n    if (button) {\r\n      if (id === buttonId) {\r\n        button.classList.add('active');\r\n      } else {\r\n        button.classList.remove('active');\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nasync function fetchClients() {\r\n  try {\r\n    const response = await fetch(`${baseUrl}/api/client/all/${userId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${jwt}`\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok.');\r\n    }\r\n\r\n\r\n\r\n    const data = await response.json();\r\n    clientList = data['Data'];\r\n  } catch (error) {\r\n  }\r\n}\r\n\r\n\r\n\r\nasync function formatOptionsDisplay() {\r\n  if (!isTagUpdating) { // Check if isTagUpdating is false\r\n    if (isGlossaryActive) {\r\n      await removeMatchingContentControls();\r\n    }\r\n    const htmlBody = `\r\n      <div class=\"container mt-3\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n               <!-- Buttons for Capture and Empty Format -->\r\n            <div class=\"d-flex justify-content-end\">\r\n              <button id=\"capture-format-btn\" class=\"btn btn-primary bg-primary-clr\"><i class=\"fa fa-border-style me-1\"></i>  Capture Format</button>\r\n            </div>\r\n            <!-- <h5 class=\"card-title\">Formatting Options</h5> -->\r\n          </div>\r\n          <div class=\"card-body\">\r\n          <div class=\"formating-checkbox\">\r\n               <input type=\"checkbox\" id=\"empty-format-checkbox\" class=\"form-check-input\">\r\n              <label for=\"empty-format-checkbox\" class=\"form-check-label empty-format-checkbox-label\" style=\"flex: 1;\">\r\n                   Skip ignoring and removing format-based text\r\n              </label>\r\n            </div>\r\n\r\n            <!-- Section to display captured formatting -->\r\n            <div id=\"format-details\">\r\n              <h5 class=\"my-3\">Selected Formatting:</h5>\r\n              <ul id=\"format-list\" class=\"list-unstyled\"></ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n\r\n    document.getElementById('app-body').innerHTML = htmlBody;\r\n    if (Object.keys(capturedFormatting).length === 0) {\r\n      const formatDetails = document.getElementById(\"format-details\");\r\n      formatDetails.style.display = 'none';\r\n      // The object is not empty\r\n    }\r\n\r\n    const glossaryBtn = document.getElementById('glossary') as HTMLButtonElement;\r\n    glossaryBtn.disabled = true;\r\n    if (emptyFormat) {\r\n      clearCapturedFormatting();\r\n    }\r\n    else {\r\n      if (capturedFormatting.Bold === null || capturedFormatting.Bold === undefined ||\r\n        capturedFormatting.Underline === 'Mixed' || capturedFormatting.Underline === undefined ||\r\n        capturedFormatting.Size === null || capturedFormatting.Size === undefined ||\r\n        capturedFormatting[\"Font Name\"] === null || capturedFormatting[\"Font Name\"] === undefined ||\r\n        capturedFormatting[\"Background Color\"] === '' || capturedFormatting[\"Background Color\"] === undefined ||\r\n        capturedFormatting[\"Text Color\"] === '' || capturedFormatting[\"Text Color\"] === undefined) {\r\n        const formatList = document.getElementById(\"format-list\");\r\n        formatList.innerHTML = \"<p>Multiple style values found. Try again</p>\";\r\n        const removeFormatBtn = document.getElementById('removeFormatting') as HTMLButtonElement;\r\n        removeFormatBtn.disabled = true;\r\n      } else {\r\n        const removeFormatBtn = document.getElementById('removeFormatting') as HTMLButtonElement;\r\n        removeFormatBtn.disabled = false;\r\n        displayCapturedFormatting();\r\n      }\r\n    }\r\n    // Event listeners for the buttons\r\n\r\n    document.getElementById(\"capture-format-btn\").addEventListener(\"click\", captureFormatting);\r\n\r\n    const emptyFormatCheckbox = document.getElementById(\"empty-format-checkbox\") as HTMLInputElement;\r\n    if (isNoFormatTextAvailable) {\r\n      emptyFormatCheckbox.checked = true;\r\n      clearCapturedFormatting();\r\n    }\r\n\r\n    emptyFormatCheckbox.addEventListener(\"change\", () => {\r\n      if (emptyFormatCheckbox.checked) {\r\n        isNoFormatTextAvailable = true;\r\n        clearCapturedFormatting();\r\n      } else {\r\n        const CaptureBtn = document.getElementById('capture-format-btn') as HTMLButtonElement;\r\n        CaptureBtn.disabled = false;\r\n        isNoFormatTextAvailable = false;\r\n        emptyFormat = false;\r\n        const glossaryBtn = document.getElementById('glossary') as HTMLButtonElement;\r\n        glossaryBtn.disabled = true;\r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction displayCapturedFormatting() {\r\n  emptyFormat = false;\r\n  const formatList = document.getElementById(\"format-list\");\r\n  formatList.innerHTML = \"\"; // Clear the list before adding new items\r\n\r\n  for (const [key, value] of Object.entries(capturedFormatting)) {\r\n    if ((key === \"Text Color\" || key === \"Background Color\") && value) {\r\n      formatList.innerHTML += `\r\n        <li><strong>${key}:</strong>${value}\r\n          <span style=\"display:inline-block;width:15px;height:15px;background-color:${value};border:1px solid black;\"></span>\r\n        </li>\r\n      `;\r\n    } else {\r\n      formatList.innerHTML += `<li><strong>${key}:</strong> ${value}</li>`;\r\n    }\r\n  }\r\n}\r\n\r\nfunction clearCapturedFormatting() {\r\n  capturedFormatting = {}; // Clear the captured formatting object\r\n  const formatDetails = document.getElementById(\"format-details\");\r\n  formatDetails.style.display = 'none';\r\n  // formatList.innerHTML = `<li>No formatting selected.</li>`;\r\n  emptyFormat = true;\r\n  const glossaryBtn = document.getElementById('glossary') as HTMLButtonElement;\r\n  glossaryBtn.disabled = false;\r\n  const CaptureBtn = document.getElementById('capture-format-btn') as HTMLButtonElement;\r\n  CaptureBtn.disabled = true;\r\n\r\n  const removeFormatBtn = document.getElementById('removeFormatting') as HTMLButtonElement;\r\n  removeFormatBtn.disabled = true;\r\n\r\n  console.log(\"Captured formatting cleared.\");\r\n}\r\n\r\nasync function captureFormatting() {\r\n  try {\r\n    await Word.run(async (context) => {\r\n      const selection = context.document.getSelection();\r\n      const font = selection.font;\r\n      font.load([\"bold\", \"italic\", \"underline\", \"size\", \"highlightColor\", \"name\", 'color']);\r\n\r\n      await context.sync();\r\n\r\n      capturedFormatting = {\r\n        Bold: font.bold,\r\n        Italic: font.italic,\r\n        Underline: font.underline,\r\n        Size: font.size,\r\n        \"Background Color\": font.highlightColor,\r\n        \"Font Name\": font.name,\r\n        'Text Color': font.color\r\n      };\r\n\r\n\r\n\r\n      const formatDetails = document.getElementById(\"format-details\");\r\n      formatDetails.style.display = 'block';\r\n\r\n      if (capturedFormatting.Bold === null ||\r\n        capturedFormatting.Underline === 'Mixed' ||\r\n        capturedFormatting.Size === null ||\r\n        capturedFormatting[\"Font Name\"] === null ||\r\n        capturedFormatting[\"Background Color\"] === '' ||\r\n        capturedFormatting[\"Text Color\"] === ''\r\n\r\n      ) {\r\n        const formatList = document.getElementById(\"format-list\");\r\n        formatList.innerHTML = \"<p>Multiple style values found. Try again</p>\";\r\n        const removeFormatBtn = document.getElementById('removeFormatting') as HTMLButtonElement;\r\n        removeFormatBtn.disabled = true;\r\n      } else {\r\n        const removeFormatBtn = document.getElementById('removeFormatting') as HTMLButtonElement;\r\n        removeFormatBtn.disabled = false;\r\n        displayCapturedFormatting();\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error capturing formatting:\", error);\r\n  }\r\n}\r\n\r\n\r\n\r\nasync function removeOptionsConfirmation() {\r\n  if (!isTagUpdating) {\r\n    if (isGlossaryActive) {\r\n      await removeMatchingContentControls();\r\n    } // Check if isTagUpdating is false\r\n    const htmlBody = `\r\n      <div class=\"container mt-3\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            <h5 class=\"card-title\">Are you sure you want to remove formatted text ?</h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n          <div id=\"format-details\">\r\n              <h5>Selected Formatting:</h5>\r\n              <ul id=\"format-list\" class=\"list-unstyled mb-3\"></ul>\r\n              <small class=\"text-secondary font-italic\" id=\"warning-rem-fmt\"></small>\r\n             \r\n            </div>\r\n               <!-- Buttons for Capture and Empty Format -->\r\n            <div class=\"d-flex justify-content-end mt-2\">\r\n              <button id=\"change-ft-btn\" class=\"btn btn-danger bg-danger-clr px-3 me-2\"><i class=\"fa fa-reply me-2\"></i>Cancel</button>\r\n              <button id=\"clear-ft-btn\" class=\"btn btn-success bg-success-clr px-3\"><i class=\"fa fa-check-circle me-2\"></i>Yes</button>\r\n\r\n            </div>\r\n\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n\r\n\r\n    document.getElementById('app-body').innerHTML = htmlBody;\r\n    displayCapturedFormatting();\r\n\r\n    if (capturedFormatting['Background Color'] === null &&\r\n      capturedFormatting['Text Color'] === '#000000') {\r\n      const warningEle = document.getElementById('warning-rem-fmt').innerHTML = 'Warning : The captured formatting is broad. This might result in unintended text removal throughout the document. Proceed?'\r\n    }\r\n\r\n    // Event listeners for the buttons\r\n    document.getElementById(\"clear-ft-btn\").addEventListener(\"click\", removeFormattedText);\r\n    document.getElementById(\"change-ft-btn\").addEventListener(\"click\", formatOptionsDisplay);\r\n\r\n  }\r\n}\r\n\r\nasync function removeFormattedText() {\r\n  try {\r\n    await Word.run(async (context) => {\r\n\r\n      const iconelement = document.getElementById(`clear-ft-btn`);\r\n      iconelement.innerHTML = `<i class=\"fa fa-spinner fa-spin text-white me-2\"></i>Yes`;\r\n      const clrBtn = document.getElementById('clear-ft-btn') as HTMLButtonElement;\r\n      clrBtn.disabled = true;\r\n\r\n      const changeBtn = document.getElementById('change-ft-btn') as HTMLButtonElement;\r\n      changeBtn.disabled = true;\r\n      const paragraphs = context.document.body.paragraphs;\r\n      paragraphs.load(\"items\"); // Load paragraphs from the body\r\n\r\n      await context.sync();\r\n\r\n      // Iterate through each paragraph in the document body\r\n      for (const paragraph of paragraphs.items) {\r\n        // Check if the paragraph contains text\r\n        if (paragraph.text.trim() !== \"\") {\r\n          const textRanges = paragraph.split([\" \"]); // Split paragraph into individual words/segments\r\n          textRanges.load(\"items, font\");\r\n\r\n          await context.sync();\r\n\r\n          for (const range of textRanges.items) {\r\n            const font = range.font;\r\n            font.load([\"bold\", \"italic\", \"underline\", \"size\", \"highlightColor\", \"name\", \"color\"]);\r\n\r\n            await context.sync();\r\n\r\n            // Check if the text range matches the captured formatting\r\n            if (\r\n              font.highlightColor === capturedFormatting['Background Color'] &&\r\n              font.color === capturedFormatting['Text Color'] &&\r\n              font.bold === capturedFormatting['Bold'] &&\r\n              font.italic === capturedFormatting['Italic'] &&\r\n              font.size === capturedFormatting['Size'] &&\r\n              font.underline === capturedFormatting['Underline'] &&\r\n              font.name === capturedFormatting['Font Name']\r\n            ) {\r\n              // Clear the range whether it's a full word or part of a word\r\n              font.highlightColor = \"#FFFFFF\"; // Set new background color\r\n              font.color = \"#000000\"; // Set new text color\r\n              font.bold = false; // Reset bold if needed\r\n              font.italic = false; // Reset italic if needed\r\n              font.underline = \"None\";\r\n              paragraph.insertText(\" \", Word.InsertLocation.replace);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      await context.sync();\r\n      capturedFormatting = {}; // Clear the captured formatting object\r\n      const formatDetails = document.getElementById(\"format-details\");\r\n      formatDetails.style.display = 'none';\r\n      // formatList.innerHTML = `<li>No formatting selected.</li>`;\r\n      emptyFormat = true;\r\n      isNoFormatTextAvailable = true;\r\n      const glossaryBtn = document.getElementById('glossary') as HTMLButtonElement;\r\n      glossaryBtn.disabled = false;\r\n      formatOptionsDisplay()\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error removing formatted text:\", error);\r\n  }\r\n}\r\n\r\n\r\nasync function fetchAIHistory(tag) {\r\n  try {\r\n    const response = await fetch(`${baseUrl}/api/report/ai-history/${tag.ID}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${jwt}`\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok.');\r\n    }\r\n\r\n    const data = await response.json();\r\n    tag.ReportHeadAIHistoryList = data['Data'] || [];\r\n    tag.FilteredReportHeadAIHistoryList = [];\r\n    tag.ReportHeadAIHistoryList.forEach((historyList, i) => {\r\n      historyList.Response = removeQuotes(historyList.Response);\r\n      tag.FilteredReportHeadAIHistoryList.unshift(historyList);\r\n\r\n    });\r\n    return tag.FilteredReportHeadAIHistoryList;\r\n\r\n  } catch (error) {\r\n    console.error('Error fetching AI history:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\n\r\nasync function generateRadioButtons(tag: any, index: number): Promise<string> {\r\n  if (!tag.FilteredReportHeadAIHistoryList || tag.FilteredReportHeadAIHistoryList.length === 0) {\r\n    await fetchAIHistory(tag);\r\n  }\r\n\r\n  if (tag.FilteredReportHeadAIHistoryList.length > 0) {\r\n    // Generate the HTML\r\n    const html = tag.FilteredReportHeadAIHistoryList.map((chat: any, j: number) =>\r\n      `<div class=\"row chatbox m-0 p-0\">\r\n        <div class=\"col-md-12 mt-2 p-2\">\r\n          <span class=\"ms-3\">\r\n            <i class=\"fa fa-copy text-secondary c-pointer\" title=\"Copy Response\" id=\"copyPrompt-${index}-${j}\"></i>\r\n          </span>\r\n          <span class=\"float-end w-75 me-3\">\r\n            <div class=\"form-control h-34 d-flex align-items-center dynamic-height user\">\r\n              ${chat.Prompt}\r\n            </div>\r\n          </span>\r\n        </div>\r\n        <div class=\"col-md-12 mt-2 p-2 d-flex align-items-center\">\r\n          <span class=\"radio-select\">\r\n            <input class=\"form-check-input c-pointer\" type=\"radio\" name=\"flexRadioDefault-${index}\"\r\n              id=\"flexRadioDefault1-${index}-${j}\" ${chat.Selected === 1 ? 'checked' : ''}>\r\n          </span>\r\n          <span class=\"ms-2 w-75\">\r\n            <div class=\"form-control h-34 d-flex align-items-center dynamic-height ai-reply ${chat.Selected === 1 ? 'ai-selected-reply' : 'bg-light'}\" id='selected-response-${index}${j}'>\r\n              ${chat.Response}\r\n            </div>\r\n          </span>\r\n          <span class=\"ms-2\">\r\n            <i class=\"fa fa-copy text-secondary c-pointer\" title=\"Copy Response\" id=\"copyResponse-${index}-${j}\"></i>\r\n          </span>\r\n        </div>\r\n\r\n\r\n      </div>`\r\n    ).join('');\r\n\r\n    // Attach event listeners after the HTML is inserted\r\n    setTimeout(() => {\r\n      tag.FilteredReportHeadAIHistoryList.forEach((chat: any, j: number) => {\r\n        document.getElementById(`copyPrompt-${index}-${j}`)?.addEventListener('click', () => copyText(chat.Prompt));\r\n        document.getElementById(`copyResponse-${index}-${j}`)?.addEventListener('click', () => copyText(chat.Response));\r\n        document.getElementById(`flexRadioDefault1-${index}-${j}`)?.addEventListener('change', () => onRadioChange(tag, index, j));\r\n\r\n      });\r\n    }, 0);\r\n\r\n    return html;\r\n  } else {\r\n    return '<div>No AI history available.</div>';\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nfunction accordionContent(headerId, collapseId, tag, radioButtonsHTML, i) {\r\n  const textColorClass = tag.IsApplied ? 'text-secondary' : '';\r\n  const tooltipButton = tag.Sources\r\n    ? `  <span class=\"tooltiptext\">${tag.Sources}</span>`\r\n    : '';\r\n  const body = `\r\n    <div class=\"accordion-item\">\r\n      <h2 class=\"accordion-header\" id=\"${headerId}\">\r\n     <button class=\"accordion-button collapsed ${textColorClass}\"\r\n        type=\"button\"\r\n        data-bs-toggle=\"collapse\"\r\n        data-bs-target=\"#${collapseId}\"\r\n        aria-expanded=\"false\"\r\n        aria-controls=\"${collapseId}\">\r\n    <span id=\"tagname-${i}\">${tag.DisplayName}</span>\r\n</button>\r\n\r\n      </h2>\r\n      <div id=\"${collapseId}\"\r\n           class=\"accordion-collapse collapse\"\r\n           aria-labelledby=\"${headerId}\"\r\n           data-bs-parent=\"#accordionExample\">\r\n        <div class=\"accordion-body p-0\" id=\"accordion-body-${i}\">\r\n          <div class=\"chatbox\" id=\"selected-response-parent-${i}\">\r\n            ${radioButtonsHTML}\r\n          </div>\r\n          <div class=\"form-check form-switch chatbox m-0\">\r\n            <label class=\"form-check-label pb-3\" for=\"doNotApply-${i}\">\r\n              <span class=\"fs-12\">Do not apply</span>\r\n            </label>\r\n            <input class=\"form-check-input\"\r\n                   type=\"checkbox\"\r\n                   id=\"doNotApply-${i}\"\r\n                   ${tag.IsApplied ? 'checked' : ''}>\r\n          </div>\r\n          <div class=\"d-flex align-items-end justify-content-end chatbox p-2\">\r\n            <textarea class=\"form-control\"\r\n                      rows=\"5\"\r\n                      id=\"chatbox-${i}\"\r\n                      placeholder=\"Type here\"></textarea>\r\n                <div id=\"mention-dropdown-${i}\" class=\"dropdown-menu\"></div>\r\n            <div class=\"d-flex flex-column align-self-end me-3\">\r\n            <button class=\"btn btn-secondary text-light ms-2 mb-2 ngb-tooltip\" id=\"insert-tag-${i}\">\r\n            <span class=\"tooltiptext\">Insert</span>\r\n                <i class=\"fa fa-plus text-light c-pointer\" ></i>\r\n                </button>\r\n            <button\r\n                    class=\"btn btn-secondary ms-2 mb-2 text-white ngb-tooltip\"\r\n                    id=\"changeSource-${i}\">\r\n                    ${tooltipButton}\r\n              <i class=\"fa fa-file-lines text-white\"></i>\r\n            </button>\r\n            <button type=\"submit\"\r\n                    class=\"btn btn-primary bg-primary-clr ms-2 text-white\"\r\n                    id=\"sendPrompt-${i}\">\r\n              <i class=\"fa fa-paper-plane text-white\"></i>\r\n            </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>`;\r\n  return body;\r\n}\r\n\r\nasync function onDoNotApplyChange(event, index, tag: any) {\r\n  tag.IsApplied = event.target.checked;\r\n  let sourceListBtn = document.getElementById(`changeSource-${index}`) as HTMLButtonElement;\r\n  sourceListBtn.disabled = true;\r\n  const isChecked = event.target.checked;\r\n  const tagname = document.getElementById(`tagname-${index}`);\r\n  const dnaBtn = document.getElementById(`doNotApply-${index}`) as HTMLInputElement;\r\n\r\n  try {\r\n    dnaBtn.disabled = true\r\n    const response = await fetch(`${baseUrl}/api/report/head/groupkey`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${jwt}`\r\n      },\r\n      body: JSON.stringify(tag)\r\n    });\r\n\r\n    if (!response.ok) {\r\n      dnaBtn.disabled = false\r\n      throw new Error('Network response was not ok.');\r\n    }\r\n\r\n    const data = await response.json();\r\n    if (data['Data'] && data['Status'] === true) {\r\n      sourceListBtn.disabled = false;\r\n      dnaBtn.disabled = false\r\n    } else {\r\n      sourceListBtn.disabled = false;\r\n      dnaBtn.disabled = false\r\n    }\r\n\r\n  } catch (error) {\r\n    dnaBtn.disabled = false\r\n    sourceListBtn.disabled = false;\r\n    console.error('Error updating do not apply:', error);\r\n  }\r\n\r\n  if (tagname) {\r\n    const match = availableKeys.find(item => tag.DisplayName === item.DisplayName);\r\n    if (isChecked) {\r\n      if (match) match.IsApplied = true;\r\n      tagname.classList.add('text-secondary');\r\n    } else {\r\n      if (match) match.IsApplied = false;\r\n      tagname.classList.remove('text-secondary');\r\n    }\r\n  }\r\n\r\n}\r\n\r\nasync function sendPrompt(tag, prompt, index) {\r\n  if (prompt !== '' && !isTagUpdating) {\r\n    let sourceListBtn = document.getElementById(`changeSource-${index}`) as HTMLButtonElement;\r\n    sourceListBtn.disabled = true;\r\n    isTagUpdating = true;\r\n\r\n    const iconelement = document.getElementById(`sendPrompt-${index}`);\r\n    iconelement.innerHTML = `<i class=\"fa fa-spinner fa-spin text-white\"></i>`;\r\n\r\n    const payload = {\r\n      ReportHeadID: tag.FilteredReportHeadAIHistoryList[0].ReportHeadID,\r\n      DocumentID: dataList.NCTID,\r\n      DocumentType: dataList.DocumentType,\r\n      TextSetting: dataList.TextSetting,\r\n      DocumentTemplate: dataList.ReportTemplate,\r\n      ReportHeadGroupKeyID: tag.FilteredReportHeadAIHistoryList[0].ReportHeadGroupKeyID,\r\n      ThreadID: tag.ThreadID,\r\n      AssistantID: dataList.AssistantID,\r\n      Container: dataList.Container,\r\n      GroupName: GroupName,\r\n      Prompt: prompt,\r\n      PromptType: 1,\r\n      Response: '',\r\n      VectorID: dataList.VectorID,\r\n      Selected: 0,\r\n      ID: 0,\r\n      SourceValue: tag.SourceValue ? tag.SourceValue : []\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(`${baseUrl}/api/report/ai-history/add`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${jwt}`\r\n        },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok.');\r\n      }\r\n\r\n      const data = await response.json();\r\n      if (data['Data'] && data['Data'] !== 'false') {\r\n        tag.ReportHeadAIHistoryList = JSON.parse(JSON.stringify(data['Data']));\r\n        tag.FilteredReportHeadAIHistoryList = [];\r\n\r\n        tag.ReportHeadAIHistoryList.forEach((historyList) => {\r\n          historyList.Response = removeQuotes(historyList.Response);\r\n          tag.FilteredReportHeadAIHistoryList.unshift(historyList);\r\n        });\r\n\r\n        // Update only the inner content of the accordion body\r\n        const innerContainer = document.getElementById(`selected-response-parent-${index}`);\r\n        if (innerContainer) {\r\n          const radioButtonsHTML = await generateRadioButtons(tag, index);\r\n          innerContainer.innerHTML = radioButtonsHTML;\r\n        }\r\n\r\n        // Reapply event listeners for the new buttons and radio options\r\n        tag.FilteredReportHeadAIHistoryList.forEach((chat, j) => {\r\n          document.getElementById(`copyPrompt-${index}-${j}`)?.addEventListener('click', () => copyText(chat.Prompt));\r\n          document.getElementById(`copyResponse-${index}-${j}`)?.addEventListener('click', () => copyText(chat.Response));\r\n          document.getElementById(`flexRadioDefault1-${index}-${j}`)?.addEventListener('change', () => onRadioChange(tag, index, j));\r\n        });\r\n\r\n        iconelement.innerHTML = `<i class=\"fa fa-paper-plane text-white\"></i>`;\r\n        document.getElementById(`chatbox-${index}`).value = '';\r\n\r\n        isTagUpdating = false;\r\n        sourceListBtn.disabled = false;\r\n      } else {\r\n        iconelement.innerHTML = `<i class=\"fa fa-paper-plane text-white\"></i>`;\r\n        isTagUpdating = false;\r\n        sourceListBtn.disabled = false;\r\n      }\r\n    } catch (error) {\r\n      iconelement.innerHTML = `<i class=\"fa fa-paper-plane text-white\"></i>`;\r\n      isTagUpdating = false;\r\n      sourceListBtn.disabled = false;\r\n      console.error('Error sending AI prompt:', error);\r\n    }\r\n  } else {\r\n    console.error('No empty prompt allowed');\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n// Your existing copyText function\r\nfunction copyText(text: string) {\r\n  // Copy text to clipboard logic\r\n  const tempTextArea = document.createElement('textarea');\r\n  tempTextArea.value = text;\r\n  document.body.appendChild(tempTextArea);\r\n  tempTextArea.select();\r\n  document.execCommand('copy');\r\n  document.body.removeChild(tempTextArea);\r\n\r\n}\r\n\r\n\r\nasync function logout() {\r\n  if (isGlossaryActive) {\r\n    await removeMatchingContentControls();\r\n  }\r\n  sessionStorage.clear();\r\n  window.location.hash = '#/new';\r\n  initialised = true;\r\n  document.getElementById('logo-header').innerHTML = ``;\r\n  document.getElementById('header').innerHTML = ``\r\n  login();\r\n}\r\n\r\n\r\nasync function displayAiTagList() {\r\n  if (isGlossaryActive) {\r\n    await removeMatchingContentControls()\r\n  }\r\n  const container = document.getElementById('app-body');\r\n  container.innerHTML = `\r\n  <div class=\"d-flex justify-content-between px-2\">\r\n      <button class=\"btn btn-primary btn-sm bg-primary-clr c-pointer text-white  mb-3 mt-2 px-3 py-2\" id=\"addgenaitag\">\r\n        <i class=\"fa fa-plus text-light px-1\"></i>\r\n        Add\r\n    </button>\r\n\r\n     <button class=\"btn btn-primary btn-sm bg-primary-clr c-pointer text-white mb-3 mt-2 px-3 py-2\" id=\"applyAITag\">\r\n        <i class=\"fa fa-robot text-light px-1\"></i>\r\n        Apply\r\n    </button>\r\n    </div>\r\n\r\n    <div class=\"card-container\"  id=\"card-container\">\r\n    </div>\r\n  `; // Clear any previous content\r\n  const Cardcontainer = document.getElementById('card-container');\r\n  document.getElementById('applyAITag').addEventListener('click', applyAITagFn);\r\n\r\n  document.getElementById('addgenaitag').addEventListener('click', addGenAITags);\r\n\r\n  for (let i = 0; i < aiTagList.length; i++) {\r\n    const tag = aiTagList[i];\r\n    const accordionItem = document.createElement('div');\r\n    accordionItem.classList.add('accordion');\r\n    accordionItem.id = `accordion-item-${i}`; // Replace 'yourUniqueId' with your desired ID\r\n\r\n    const headerId = `flush-headingOne-${i}`;\r\n    const collapseId = `flush-collapseOne-${i}`;\r\n\r\n    const radioButtonsHTML = await generateRadioButtons(tag, i);\r\n\r\n    accordionItem.innerHTML = accordionContent(headerId, collapseId, tag, radioButtonsHTML, i);\r\n\r\n    Cardcontainer.appendChild(accordionItem);\r\n    mentionDropdownFn(`chatbox-${i}`, `mention-dropdown-${i}`, 'edit');\r\n    document.getElementById(`doNotApply-${i}`)?.addEventListener('change', () => onDoNotApplyChange(event, i, tag));\r\n\r\n    document.getElementById(`sendPrompt-${i}`)?.addEventListener('click', () => {\r\n      const textareaValue = (document.getElementById(`chatbox-${i}`) as HTMLTextAreaElement).value;\r\n\r\n      sendPrompt(tag, textareaValue, i)\r\n    });\r\n\r\n    document.getElementById(`insert-tag-${i}`)?.addEventListener('click', () => {\r\n      insertTagPrompt(i)\r\n    })\r\n\r\n    document.getElementById(`changeSource-${i}`)?.addEventListener('click', () => {\r\n      const textareaValue = (document.getElementById(`chatbox-${i}`) as HTMLTextAreaElement).value;\r\n\r\n      // const accordionbody=document.getElementById(`accordion-body-${i}`).innerHTML=''\r\n      createMultiSelectDropdown(i, tag, radioButtonsHTML, textareaValue)\r\n    })\r\n  }\r\n\r\n  // Add event listeners after rendering\r\n  addAccordionListeners();\r\n  addCopyListeners();\r\n\r\n}\r\n\r\nasync function insertTagPrompt(index: any) {\r\n  return Word.run(async (context) => {\r\n    try {\r\n      const selection = context.document.getSelection();\r\n      await context.sync();\r\n\r\n      if (!selection) {\r\n        throw new Error('Selection is invalid or not found.');\r\n      }\r\n\r\n\r\n      if (aiTagList[index].EditorValue === '') {\r\n        selection.insertParagraph(`#${aiTagList[index].DisplayName}#`, Word.InsertLocation.before);\r\n      } else {\r\n        let content = removeQuotes(aiTagList[index].EditorValue);\r\n        let lines = content.split(/\\r?\\n/); // Handle both \\r\\n and \\n\r\n\r\n        lines.forEach(line => {\r\n          selection.insertParagraph(line, Word.InsertLocation.before);\r\n        });\r\n      }\r\n\r\n\r\n      await context.sync();\r\n    } catch (error) {\r\n      console.error('Detailed error:', error);\r\n    }\r\n  });\r\n}\r\n\r\n\r\nfunction addAccordionListeners() {\r\n  const accordionButtons = document.querySelectorAll('.accordion-button');\r\n\r\n  accordionButtons.forEach(button => {\r\n    button.addEventListener('click', function () {\r\n      const collapseElement = this.nextElementSibling;\r\n\r\n      // Check if the element exists before accessing its classList\r\n      if (collapseElement && collapseElement.classList) {\r\n        collapseElement.classList.toggle('show');\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction addCopyListeners() {\r\n  const copyIcons = document.querySelectorAll('.fa-copy');\r\n  copyIcons.forEach(icon => {\r\n    icon.addEventListener('click', function () {\r\n      const textToCopy = this.closest('.p-2').querySelector('.form-control').textContent;\r\n    });\r\n  });\r\n}\r\n\r\nasync function applyAITagFn() {\r\n  return Word.run(async (context) => {\r\n    try {\r\n      const body = context.document.body;\r\n      context.load(body, 'text');\r\n      await context.sync();\r\n\r\n      // Iterate over the aiTagList to search and replace\r\n      for (let i = 0; i < aiTagList.length; i++) {\r\n        const tag = aiTagList[i];\r\n        // Clean up the EditorValue by removing quotes\r\n        tag.EditorValue = removeQuotes(tag.EditorValue);\r\n\r\n        // Search for all instances of the tag.DisplayName enclosed with `#`\r\n        const searchResults = body.search(`#${tag.DisplayName}#`, {\r\n          matchCase: false,\r\n          matchWholeWord: false,\r\n        });\r\n\r\n        // Load the search results to ensure they are available for further operations\r\n        context.load(searchResults, 'items');\r\n\r\n        await context.sync(); // Synchronize to fetch the search results\r\n\r\n        // Log the number of search results for debugging\r\n        console.log(`Found ${searchResults.items.length} instances of #${tag.DisplayName}#`);\r\n\r\n        // Replace each found instance with tag.EditorValue\r\n        searchResults.items.forEach((item: any) => {\r\n          // Ensure the EditorValue is not empty before replacing\r\n          if (tag.EditorValue !== \"\" && !tag.IsApplied) {\r\n            item.insertText(tag.EditorValue, Word.InsertLocation.replace);\r\n          }\r\n        });\r\n\r\n        // Additional sync after each replacement\r\n        await context.sync();\r\n      }\r\n\r\n      // Final sync to apply all changes\r\n      await context.sync();\r\n    } catch (err) {\r\n      console.error(\"Error during tag application:\", err);\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\nasync function onRadioChange(tag, tagIndex, chatIndex) {\r\n  if (!isTagUpdating) {\r\n    isTagUpdating = true;\r\n    const iconelement = document.getElementById(`sendPrompt-${tagIndex}`)\r\n    iconelement.innerHTML = `<i class=\"fa fa-spinner fa-spin text-white\"></i>`\r\n    const chat = tag.FilteredReportHeadAIHistoryList[chatIndex];\r\n    let payload = JSON.parse(JSON.stringify(chat));\r\n    payload.Container = dataList.Container;\r\n    payload.Selected = 1;\r\n    const matchingKey = availableKeys.find(prop => prop.DisplayName === tag.DisplayName);\r\n    if (matchingKey) {\r\n      matchingKey.EditorValue = payload.Response;\r\n    }\r\n    try {\r\n      const response = await fetch(`${baseUrl}/api/report/ai-history/update`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${jwt}`\r\n        },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok.');\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data['Data']) {\r\n        tag.ReportHeadAIHistoryList = JSON.parse(JSON.stringify(data['Data']));\r\n        tag.FilteredReportHeadAIHistoryList = [];\r\n\r\n        tag.ReportHeadAIHistoryList.forEach((historyList) => {\r\n          historyList.Response = removeQuotes(historyList.Response);\r\n          tag.FilteredReportHeadAIHistoryList.unshift(historyList);\r\n        });\r\n\r\n        // Use querySelectorAll to remove 'ai-selected-reply' from all elements\r\n        const selectedParent = document.getElementById(`selected-response-parent-${tagIndex}`)\r\n        const allSelectedDivs = selectedParent.querySelectorAll('.ai-selected-reply');\r\n        allSelectedDivs.forEach(div => {\r\n          div.classList.remove('ai-selected-reply');\r\n          div.classList.add('bg-light');\r\n        });\r\n\r\n        const selectElement = document.getElementById(`selected-response-${tagIndex}${chatIndex}`);\r\n        if (selectElement) {\r\n          selectElement.classList.remove('bg-light');\r\n          selectElement.classList.add('ai-selected-reply');\r\n        }\r\n\r\n\r\n        tag.UserValue = chat.Response;\r\n        tag.EditorValue = chat.Response;\r\n        tag.text = chat.Response;\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error updating AI data:', error);\r\n    } finally {\r\n      const iconelement = document.getElementById(`sendPrompt-${tagIndex}`)\r\n      iconelement.innerHTML = `<i class=\"fa fa-paper-plane text-white\"></i>`\r\n      isTagUpdating = false;\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction selectResponse(tagIndex, chatIndex) {\r\n  // Handle the response selection logic here\r\n  console.log(`Response selected for tagIndex ${tagIndex}, chatIndex ${chatIndex}`);\r\n}\r\n\r\n\r\nasync function fetchGlossary() {\r\n  if (!isTagUpdating) {\r\n\r\n    document.getElementById('app-body').innerHTML = `\r\n  <div id=\"button-container\">\r\n\r\n          <div class=\"loader\" id=\"loader\"></div>\r\n\r\n        <div id=\"highlighted-text\"></div>`\r\n\r\n    loadGlossary()\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction loadGlossary() {\r\n  document.getElementById('app-body').innerHTML = `\r\n        <div id=\"button-container\">\r\n          <button class=\"btn btn-secondary me-2 mark-glossary btn-sm\" id=\"applyglossary\">Apply Glossary</button>\r\n        </div>\r\n  `\r\n  document.getElementById('applyglossary').addEventListener('click', applyglossary);\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport async function applyglossary() {\r\n  document.getElementById('app-body').innerHTML = `\r\n  <div id=\"button-container\">\r\n\r\n          <div class=\"loader\" id=\"loader\"></div>\r\n\r\n        <div id=\"highlighted-text\"></div>`\r\n\r\n  try {\r\n\r\n    await Word.run(async (context) => {\r\n\r\n\r\n      const body = context.document.body;\r\n      body.load(\"text\");\r\n      await context.sync(); // Sync to get the text content\r\n\r\n      const bodyText = {\r\n        \"Content\": body.text.replace(/[\\n\\r]/g, ' ')\r\n      };\r\n      try {\r\n        const response = await fetch(`${baseUrl}/api/glossary-template/client-id/${dataList?.ClientID}`, {\r\n          method: 'POST', // or 'POST', depending on your API\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n\r\n            'Authorization': `Bearer ${jwt}`\r\n          },\r\n          body: JSON.stringify(bodyText)\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok.');\r\n        }\r\n\r\n\r\n        const data = await response.json();\r\n        layTerms = data.Data\r\n        if (data.Data.length > 0) {\r\n          glossaryName = data.Data[0].GlossaryTemplate\r\n          loadGlossary()\r\n        } else {\r\n          document.getElementById('app-body').innerHTML = `\r\n       <p class=\"text-center\">Data not available<p/>\r\n  `\r\n        }\r\n\r\n        // alert('Glossary data loaded successfully.');\r\n      } catch (error) {\r\n        console.error('Error fetching glossary data:', error);\r\n        // Optionally show an error message to the user\r\n        // alert('Error fetching glossary data.');\r\n      }\r\n      // Sort terms by length (longest first)\r\n      layTerms.sort((a, b) => b.ClinicalTerm.length - a.ClinicalTerm.length);\r\n\r\n      const processedTerms = new Set(); // Track added larger terms\r\n\r\n      // Filter out smaller terms if they are included in a larger term\r\n      const filteredTerms = layTerms.filter(term => {\r\n        for (const biggerTerm of processedTerms) {\r\n          if (biggerTerm.includes(term.ClinicalTerm.toLowerCase())) {\r\n            console.log(`Skipping \"${term.ClinicalTerm}\" because it's part of \"${biggerTerm}\"`);\r\n            return false; // Exclude this smaller term\r\n          }\r\n        }\r\n        processedTerms.add(term.ClinicalTerm.toLowerCase());\r\n        return true;\r\n      });\r\n\r\n      filteredGlossaryTerm = filteredTerms;\r\n      await removeMatchingContentControls();\r\n\r\n      const foundRanges = new Map(); // Track words already processed\r\n\r\n      const searchPromises = filteredGlossaryTerm.map(term => {\r\n        const searchResults = body.search(term.ClinicalTerm, { matchCase: false, matchWholeWord: false });\r\n        searchResults.load(\"items\");\r\n        return searchResults;\r\n      });\r\n\r\n      await context.sync();\r\n\r\n      for (const searchResults of searchPromises) {\r\n\r\n        for (const range of searchResults.items) {\r\n\r\n          if (!range || !range.text) {\r\n            console.log(\"Invalid range. Skipping...\");\r\n            continue;\r\n          }\r\n\r\n          // Load existing content controls inside this range\r\n          const font = range.font;\r\n          font.load([\"bold\", \"italic\", \"underline\", \"size\", \"highlightColor\", \"name\", 'color']);\r\n          range.load(\"contentControls\");\r\n          await context.sync();\r\n\r\n          const existingControl = range.contentControls.items.length > 0;\r\n\r\n          if (existingControl) {\r\n            console.log(`Skipping \"${range.text}\" because it already has a content control.`);\r\n            continue; // Skip if content control is already present\r\n          }\r\n          // Check if we've already processed this term at this range\r\n          if (foundRanges.has(range.text)) {\r\n            console.log(`Skipping duplicate occurrence of \"${range.text}\"`);\r\n            continue;\r\n          }\r\n          // Mark this word as processed\r\n          foundRanges.set(range.text, true);\r\n          // Remove existing content controls if any\r\n          if (range.contentControls && range.contentControls.items.length > 0) {\r\n            console.log(`Removing existing content control from: \"${range.text}\"`);\r\n            for (const control of range.contentControls.items) {\r\n              control.delete(false); // 'false' keeps the text, only removes the control\r\n            }\r\n            await context.sync(); // Ensure deletion is applied before adding a new one\r\n          }\r\n\r\n          try {\r\n            // Insert a new content control\r\n            const contentControl = range.insertContentControl();\r\n            contentControl.title = `${range.text}`;\r\n            const fontProps = [];\r\n            // Add properties, or \"empty\" if they are null/undefined\r\n            if (font.highlightColor !== null && font.highlightColor !== undefined) {\r\n              fontProps.push(`highlight:${font.highlightColor}`);\r\n            } else {\r\n              fontProps.push('highlight:empty');\r\n            }\r\n\r\n            if (font.color !== null && font.color !== undefined) {\r\n              fontProps.push(`color:${font.color}`);\r\n            } else {\r\n              fontProps.push('color:empty');\r\n            }\r\n\r\n            if (font.bold !== undefined) {\r\n              fontProps.push(`bold:${font.bold}`);\r\n            } else {\r\n              fontProps.push('bold:empty');\r\n            }\r\n\r\n            if (font.italic !== undefined) {\r\n              fontProps.push(`italic:${font.italic}`);\r\n            } else {\r\n              fontProps.push('italic:empty');\r\n            }\r\n\r\n            if (font.underline !== undefined) {\r\n              fontProps.push(`underline:${font.underline}`);\r\n            } else {\r\n              fontProps.push('underline:empty');\r\n            }\r\n\r\n            if (font.size !== null && font.size !== undefined) {\r\n              fontProps.push(`size:${font.size}`);\r\n            } else {\r\n              fontProps.push('size:empty');\r\n            }\r\n\r\n            if (font.family !== null && font.family !== undefined) {\r\n              fontProps.push(`family:${font.family}`);\r\n            } else {\r\n              fontProps.push('family:empty');\r\n            }\r\n            // Set the tag to include all the collected font properties\r\n            // Set the tag to include all the collected font properties\r\n            contentControl.tag = fontProps.join(', ');\r\n\r\n            contentControl.font.highlightColor = \"yellow\"; // Highlight the control\r\n            contentControl.appearance = Word.ContentControlAppearance.boundingBox;\r\n            await context.sync();\r\n          } catch (error) {\r\n            console.error(`Error inserting content control for term \"${range.text}\":`, error);\r\n          }\r\n        }\r\n      }\r\n      // document.getElementById('glossarycheck').style.display='block';\r\n      isGlossaryActive = true;\r\n      document.getElementById('app-body').innerHTML = `\r\n      <div id=\"button-container\">\r\n        <button class=\"btn btn-secondary me-2 clear-glossary btn-sm\" id=\"clearGlossary\">Clear Glossary</button>\r\n      </div>\r\n\r\n      <div id=\"highlighted-text\"></div>\r\n      <div class=\"d-flex justify-content-center box-loader\">\r\n       <div class=\"loader\" id=\"loader\"></div></div>\r\n      \r\n`\r\n      const displayElement = document.getElementById('loader');\r\n      displayElement.style.display = 'none';\r\n      await context.sync();\r\n      document.getElementById('clearGlossary').addEventListener('click', removeMatchingContentControls);\r\n      Office.context.document.addHandlerAsync(\r\n        Office.EventType.DocumentSelectionChanged,\r\n        handleSelectionChange\r\n      );\r\n\r\n\r\n    });\r\n\r\n    // Optional: Notify user of completion\r\n    console.log('Glossary applied successfully');\r\n  } catch (error) {\r\n    console.error('Error applying glossary:', error);\r\n    // Optional: Notify user of error\r\n    console.log('Error applying glossary. Please try again.');\r\n  }\r\n}\r\n\r\n\r\n\r\nasync function handleSelectionChange() {\r\n  await checkGlossary();\r\n}\r\n\r\nexport async function checkGlossary() {\r\n  try {\r\n    await Word.run(async (context) => {\r\n      const selection = context.document.getSelection();\r\n\r\n      selection.load(\"text, font.highlightColor\");\r\n\r\n      await context.sync();\r\n\r\n\r\n\r\n      if (selection.text) {\r\n        const loader = document.getElementById('loader');\r\n        if (loader) {\r\n          loader.style.display = 'block';\r\n        }\r\n        const searchPromises = layTerms.map(term => {\r\n          const searchResults = selection.search(term.ClinicalTerm, { matchCase: false, matchWholeWord: false });\r\n          searchResults.load(\"items\");\r\n          return searchResults;\r\n        });\r\n\r\n        await context.sync();\r\n        const selectedWords = []\r\n        for (const searchResults of searchPromises) {\r\n\r\n          for (const range of searchResults.items) {\r\n            const font = range.font;\r\n            font.load([\"bold\", \"italic\", \"underline\", \"size\", \"highlightColor\", \"name\", \"color\"]);\r\n\r\n            await context.sync();\r\n            if (\r\n              font.highlightColor !== capturedFormatting['Background Color'] ||\r\n              font.color !== capturedFormatting['Text Color'] ||\r\n              font.bold !== capturedFormatting['Bold'] ||\r\n              font.italic !== capturedFormatting['Italic'] ||\r\n              font.size !== capturedFormatting['Size'] ||\r\n              font.underline !== capturedFormatting['Underline'] ||\r\n              font.name !== capturedFormatting['Font Name']\r\n            ) {\r\n              selectedWords.push(range.text);\r\n            }\r\n\r\n          }\r\n        }\r\n        // searchPromises.forEach(searchResults => {\r\n        //   searchResults.items.forEach(item => {\r\n        //   });\r\n        // });\r\n        displayHighlightedText(selectedWords)\r\n\r\n        await context.sync();\r\n\r\n\r\n\r\n\r\n        // const highlightColor = selection.font.highlightColor;\r\n\r\n        // if (highlightColor === \"red\") {\r\n        //   displayHighlightedText(selection.text);\r\n        // } else {\r\n        //   console.log('Selected text is not highlighted.');\r\n        // }\r\n      } else {\r\n        console.log('No text is selected.');\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('Error displaying glossary:', error);\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction displayHighlightedText(words: string[]) {\r\n\r\n  const displayElement = document.getElementById('highlighted-text');\r\n\r\n  if (displayElement) {\r\n    displayElement.innerHTML = ''; // Clear previous content\r\n    const loader = document.getElementById('loader');\r\n    loader.style.display = 'block';\r\n    // Group lay terms by their clinical term\r\n    const groupedTerms: { [clinicalTerm: string]: string[] } = {};\r\n\r\n    words.forEach(word => {\r\n      layTerms.forEach(term => {\r\n        if (term.ClinicalTerm.toLowerCase() === word.toLowerCase()) {\r\n          if (!groupedTerms[term.ClinicalTerm]) {\r\n            groupedTerms[term.ClinicalTerm] = [];\r\n          }\r\n          if (!groupedTerms[term.ClinicalTerm].includes(term.LayTerm)) {\r\n            groupedTerms[term.ClinicalTerm].push(term.LayTerm);\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    // Create a box for each clinical term\r\n    Object.keys(groupedTerms).forEach(clinicalTerm => {\r\n      // Create the main box for the clinical term\r\n      const mainBox = document.createElement('div');\r\n      mainBox.className = 'box'; // Add box class for styling\r\n\r\n      // Create a heading for the clinical term\r\n      const heading = document.createElement('h3');\r\n      heading.textContent = `${clinicalTerm} (${glossaryName})`;\r\n      mainBox.appendChild(heading);\r\n\r\n      // Create sub-boxes for each lay term\r\n      groupedTerms[clinicalTerm].forEach(layTerm => {\r\n        const subBox = document.createElement('div');\r\n        subBox.className = 'sub-box'; // Add class for sub-box styling\r\n        subBox.textContent = layTerm;\r\n\r\n        // Add click event listener to replace ClinicalTerm with LayTerm\r\n        subBox.addEventListener('click', async () => {\r\n          await replaceClinicalTerm(clinicalTerm, layTerm);\r\n\r\n          // Remove the main box containing the clicked sub-box\r\n          mainBox.remove();\r\n        });\r\n\r\n        mainBox.appendChild(subBox);\r\n      });\r\n\r\n      displayElement.appendChild(mainBox);\r\n    });\r\n    loader.style.display = 'none';\r\n\r\n  }\r\n}\r\n\r\n\r\nasync function replaceClinicalTerm(clinicalTerm: string, layTerm: string) {\r\n  const displayElement = document.getElementById('loader');\r\n  displayElement.style.display = 'block';\r\n  try {\r\n\r\n    await Word.run(async (context) => {\r\n      // Get the current selection\r\n\r\n      const selection = context.document.getSelection();\r\n\r\n      // Load the selection's text\r\n      selection.load('text');\r\n      await context.sync();\r\n      // Check if the selected text contains the clinicalTerm\r\n      if (selection.text.toLowerCase().includes(clinicalTerm.toLowerCase())) {\r\n        // Search for the clinicalTerm in the document\r\n        const searchResults = selection.search(clinicalTerm, { matchCase: false, matchWholeWord: false });\r\n        searchResults.load('items');\r\n\r\n        await context.sync();\r\n\r\n        // Replace each occurrence of the clinicalTerm with the layTerm\r\n        searchResults.items.forEach(item => {\r\n          item.insertText(layTerm, 'replace');\r\n          // Remove the highlight color (set to white or no highlight)\r\n        });\r\n        await context.sync();\r\n        displayElement.style.display = 'none';\r\n\r\n        console.log(`Replaced '${clinicalTerm}' with '${layTerm}' and removed highlight in the document.`);\r\n      } else {\r\n        displayElement.style.display = 'none';\r\n\r\n        console.log(`Selected text does not contain '${clinicalTerm}'.`);\r\n      }\r\n    });\r\n  } catch (error) {\r\n    displayElement.style.display = 'none';\r\n\r\n    console.error('Error replacing term:', error);\r\n  }\r\n}\r\n\r\nexport async function removeMatchingContentControls() {\r\n  try {\r\n    await Word.run(async (context) => {\r\n      document.getElementById('app-body').innerHTML = `\r\n      <div id=\"button-container\">\r\n        <div class=\"loader\" id=\"loader\"></div>\r\n        <div id=\"highlighted-text\"></div>`;\r\n      const body = context.document.body;\r\n\r\n      // Load all content controls\r\n      const contentControls = body.contentControls;\r\n      contentControls.load(\"items\");\r\n      await context.sync();\r\n\r\n      if (contentControls.items.length === 0) {\r\n        console.log(\"No content controls found.\");\r\n        return;\r\n      }\r\n\r\n      for (const control of contentControls.items) {\r\n        if (control.title && filteredGlossaryTerm.some(term => term.ClinicalTerm.toLowerCase() === control.title.toLowerCase())) {\r\n          const range = control.getRange();\r\n          range.load(\"text\");\r\n          await context.sync();\r\n      \r\n          if (control.tag) {\r\n            // Parse the tag into an object of type FontProps\r\n            const fontProps: FontProps = control.tag.split(',').reduce((props, item) => {\r\n              const [key, value] = item.split(':');\r\n              if (key && value) {\r\n                props[key.trim() as keyof FontProps] = value.trim();\r\n              }\r\n              return props;\r\n            }, {} as FontProps); // Explicitly cast to FontProps\r\n      \r\n            // Apply properties to the range\r\n            if (fontProps.highlight) {\r\n              if (/^#[0-9A-Fa-f]{6}$/.test(fontProps.highlight)) {\r\n                range.font.highlightColor = fontProps.highlight;\r\n              } else {\r\n                range.font.highlightColor = null; // Clear highlight if invalid\r\n              }\r\n            }\r\n      \r\n            if (fontProps.color) {\r\n              range.font.color = fontProps.color;\r\n            }\r\n      \r\n            if (fontProps.bold === 'true') {\r\n              range.font.bold = true;\r\n            } else if (fontProps.bold === 'false') {\r\n              range.font.bold = false;\r\n            }\r\n      \r\n            if (fontProps.italic === 'true') {\r\n              range.font.italic = true;\r\n            } else if (fontProps.italic === 'false') {\r\n              range.font.italic = false;\r\n            }\r\n      \r\n            if (fontProps.underline === 'true') {\r\n              range.font.underline = \"Single\";\r\n            } else if (fontProps.underline === 'false') {\r\n              range.font.underline = \"None\";\r\n            }\r\n      \r\n            if (fontProps.size) {\r\n              range.font.size = parseFloat(fontProps.size);\r\n            }\r\n      \r\n            if (fontProps.family) {\r\n              range.font.name = fontProps.family; // Apply the font family\r\n            }\r\n          }\r\n      \r\n          // Delete the content control after applying styles\r\n          control.delete(true);\r\n        }\r\n      }\r\n      \r\n\r\n      document.getElementById('app-body').innerHTML = `\r\n      <div id=\"button-container\">\r\n        <button class=\"btn btn-secondary me-2 mark-glossary btn-sm\" id=\"applyglossary\">Apply Glossary</button>\r\n      </div>\r\n      `;\r\n\r\n      await context.sync();\r\n      isGlossaryActive = false;\r\n      document.getElementById('applyglossary').addEventListener('click', applyglossary);\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error removing content controls:\", error);\r\n  }\r\n}\r\n\r\n\r\nasync function displayMentions() {\r\n  if (!isTagUpdating) {\r\n    if (isGlossaryActive) {\r\n      await removeMatchingContentControls();\r\n    }\r\n\r\n    const htmlBody = `\r\n      <div class=\"container mt-3\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            <h5 class=\"card-title\">Search Tags</h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"form-group\">\r\n              <input type=\"text\" id=\"search-box\" class=\"form-control\" placeholder=\"Search Tags...\" autocomplete=\"off\" />\r\n            </div>\r\n            <ul id=\"suggestion-list\" class=\"list-group mt-2\"></ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    document.getElementById('app-body').innerHTML = htmlBody;\r\n\r\n    const searchBox = document.getElementById('search-box');\r\n    const suggestionList = document.getElementById('suggestion-list');\r\n\r\n    // Function to filter and display suggestions\r\n    function updateSuggestions() {\r\n      const searchTerm = searchBox.value.toLowerCase();\r\n      if (searchTerm === '') {\r\n        suggestionList.innerHTML = ``;\r\n        return;\r\n      }\r\n      suggestionList.innerHTML = '';\r\n\r\n      // Filter mention list based on search term\r\n      const filteredMentions = availableKeys.filter(mention =>\r\n        mention.DisplayName.toLowerCase().includes(searchTerm)\r\n      );\r\n\r\n      // Render filtered suggestions\r\n      filteredMentions.forEach(mention => {\r\n        const listItem = document.createElement('li');\r\n        listItem.className = 'list-group-item list-group-item-action';\r\n        listItem.textContent = mention.DisplayName;\r\n        listItem.onclick = () => {\r\n          // Replace # with the selected value (adjust as needed)\r\n          replaceMention(mention, mention.ComponentKeyDataType);\r\n          suggestionList.innerHTML = ''; // Clear suggestions after selection\r\n        };\r\n        suggestionList.appendChild(listItem);\r\n      });\r\n    }\r\n\r\n    // Add input event listener to the search box\r\n    searchBox.addEventListener('input', updateSuggestions);\r\n  }\r\n}\r\n\r\nasync function addGenAITags() {\r\n  if (!isTagUpdating) {\r\n    if (isGlossaryActive) {\r\n      await removeMatchingContentControls();\r\n    }\r\n\r\n    let selectedClient = clientList.filter((item) => item.ID === clientId);\r\n\r\n    let sponsorOptions = clientList.map(client => {\r\n      const isSelectedClient = selectedClient.some(selected => selected.ID === client.ID);\r\n      return ` \r\n        <li class=\"dropdown-item p-2\" style=\"cursor: pointer;\">\r\n          <div class=\"form-check\">\r\n            <input class=\"form-check-input\" type=\"checkbox\" value=\"${client.ID}\" id=\"sponsor${client.ID}\" ${isSelectedClient ? 'checked disabled' : ''}>\r\n            <label class=\"form-check-label text-prewrap\" for=\"sponsor${client.ID}\">${client.Name}</label>\r\n          </div>\r\n        </li>\r\n      `;\r\n    }).join('');\r\n\r\n    const htmlBody = `\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-body p-3\">\r\n            <form id=\"genai-form\" autocomplete=\"off\" novalidate>\r\n              <!-- Name Field -->\r\n              <div class=\"mb-3\">\r\n                <label for=\"name\" class=\"form-label\"><span class=\"text-danger\">*</span> Name</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"name\" required>\r\n                <div class=\"invalid-feedback\">Name is required.</div>\r\n                <div id=\"submition-error\" class=\"invalid-feedback\" style=\"display: none;\"></div>\r\n\r\n              </div>\r\n\r\n              <!-- Description Field -->\r\n              <div class=\"mb-3\">\r\n                <label for=\"description\" class=\"form-label\">Description</label>\r\n                <textarea class=\"form-control\" id=\"description\" rows=\"6\"></textarea>\r\n              </div>\r\n\r\n              <!-- Prompt Field -->\r\n              <div class=\"mb-3\">\r\n                <label for=\"prompt\" class=\"form-label\"><span class=\"text-danger\">*</span> Prompt \r\n                  <small class=\"text-secondary\">(Note: Use # tag for content suggestions)</small>\r\n                </label>\r\n                <textarea class=\"form-control\" id=\"prompt\" rows=\"6\"  required></textarea>\r\n                <div class=\"invalid-feedback\">Prompt is required.</div>\r\n                <div id=\"mention-dropdown\" class=\"dropdown-menu\"></div>\r\n              </div>\r\n\r\n              <!-- Save Globally Checkbox -->\r\n              <div class=\"form-check mb-3\">\r\n                <input type=\"checkbox\" class=\"form-check-input\" id=\"saveGlobally\">\r\n                <label class=\"form-check-label\" for=\"saveGlobally\">Save Globally</label>\r\n              </div>\r\n\r\n              <!-- Available to All Sponsors Checkbox -->\r\n              <div class=\"form-check mb-3\">\r\n                <input type=\"checkbox\" class=\"form-check-input\" id=\"isAvailableForAll\" disabled>\r\n                <label class=\"form-check-label\" for=\"isAvailableForAll\">Available to All Sponsors</label>\r\n              </div>\r\n\r\n              <!-- Sponsor Dropdown -->\r\n              <div class=\"mb-3\">\r\n                <label for=\"sponsor\" class=\"form-label\"><span class=\"text-danger\">*</span> Sponsor</label>\r\n                <div class=\"dropdown w-100\">\r\n                  <button \r\n                    class=\"btn btn-white border w-100 text-start d-flex justify-content-between align-items-center dropdown-toggle\" \r\n                    type=\"button\" \r\n                    id=\"sponsorDropdown\" \r\n                    data-bs-toggle=\"dropdown\" \r\n                    aria-expanded=\"false\" \r\n                    disabled>\r\n                    <span id=\"sponsorDropdownLabel\">Select Sponsors</span>\r\n                    <span class=\"dropdown-toggle-icon\"></span>\r\n                  </button>\r\n                  <ul class=\"dropdown-menu w-100 p-2\" aria-labelledby=\"sponsorDropdown\" style=\"box-shadow: 0 4px 8px rgba(0,0,0,0.1);\">\r\n                    <li class=\"dropdown-item p-2\" style=\"cursor: pointer;\">\r\n                      <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" value=\"selectAll\" id=\"selectAll\">\r\n                        <label class=\"form-check-label\" for=\"selectAll\">Select All</label>\r\n                      </div>\r\n                    </li>\r\n                    ${sponsorOptions}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Action Buttons -->\r\n              <div class=\"text-end mt-3\">\r\n                <button id=\"cancel-btn-gen-ai\" class=\"btn btn-danger bg-danger-clr px-3 me-2\"><i class=\"fa fa-reply me-2\"></i>Cancel</button>\r\n                <button type=\"submit\" class=\"btn btn-success bg-success-clr\" id=\"text-gen-save\"><i class=\"fa fa-check-circle me-2\"></i>Save</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>`;\r\n\r\n    // Add modal HTML to the DOM\r\n    document.getElementById('app-body').innerHTML = htmlBody;\r\n    //prompt starting\r\n    mentionDropdownFn('prompt', 'mention-dropdown', 'add');\r\n    //prompt end\r\n    const form = document.getElementById('genai-form');\r\n    const promptField = document.getElementById('prompt');\r\n\r\n    const nameField = document.getElementById('name');\r\n    const descriptionField = document.getElementById('description');\r\n    const saveGloballyCheckbox = document.getElementById('saveGlobally');\r\n    const availableForAllCheckbox = document.getElementById('isAvailableForAll');\r\n    const sponsorDropdownButton = document.getElementById('sponsorDropdown');\r\n    const sponsorDropdownItems = document.querySelectorAll('.dropdown-item .form-check-input');\r\n\r\n    document.getElementById('cancel-btn-gen-ai').addEventListener('click', displayAiTagList);\r\n\r\n    // Check if elements exist\r\n    if (form && nameField && promptField && sponsorDropdownItems.length > 0) {\r\n      const updateDropdownLabel = () => {\r\n        if (availableForAllCheckbox.checked) {\r\n          sponsorDropdownButton.textContent = clientList.map(client => client.Name).join(\", \");\r\n        } else {\r\n          const selectedOptions = Array.from(sponsorDropdownItems)\r\n            .filter(cb => cb.checked && cb.id !== 'selectAll')\r\n            .map(cb => cb.parentElement.textContent.trim());\r\n          sponsorDropdownButton.textContent = selectedOptions.length ? selectedOptions.join(\", \") : \"Select Sponsors\";\r\n        }\r\n      };\r\n      // Form validation logic on submit\r\n      form.addEventListener('submit', function (e) {\r\n        e.preventDefault();\r\n\r\n        // Reset previous validation errors\r\n        form.querySelectorAll('.is-invalid').forEach(input => input.classList.remove('is-invalid'));\r\n\r\n        let valid = true;\r\n\r\n        if (!(nameField as HTMLInputElement).value.trim()) {\r\n          nameField.classList.add('is-invalid');\r\n          valid = false;\r\n        }\r\n\r\n        if (!(promptField as HTMLInputElement).value.trim()) {\r\n          promptField.classList.add('is-invalid');\r\n          valid = false;\r\n        }\r\n\r\n        if (valid) {\r\n          // Prepare object to pass to createTextGenTag\r\n          const selectedSponsors = Array.from(sponsorDropdownItems)\r\n            .filter(cb => cb.checked && cb.id !== 'selectAll')\r\n            .map(cb => {\r\n              const client = clientList.find(client => client.ID == cb.value);\r\n              return client; // Collect the entire client object\r\n            });\r\n\r\n          const isAvailableForAll = availableForAllCheckbox.checked;\r\n          const isSaveGlobally = saveGloballyCheckbox.checked;\r\n          const aigroup = dataList.Group.find(element => element.DisplayName === 'AIGroup');\r\n          const formData = {\r\n            DisplayName: nameField.value.trim(),\r\n            Prompt: promptField.value.trim(),\r\n            Description: descriptionField.value.trim(),\r\n            GroupKeyClient: selectedSponsors, // Array of selected sponsor objects\r\n            AllClient: isAvailableForAll ? 1 : 0,\r\n            SaveGlobally: isSaveGlobally,\r\n            UserDefined: '1',\r\n            ComponentKeyDataTypeID: '1',\r\n            ComponentKeyDataAccessID: '3',\r\n            AIFlag: 1,\r\n            DocumentTypeID: dataList.DocumentTypeID,\r\n            ReportHeadID: dataList.ID,\r\n            SourceTypeID: '',\r\n            ReportHeadGroupID: aigroup.ID,\r\n            ReportHeadSourceID: ''\r\n          };\r\n\r\n          createTextGenTag(formData);\r\n        }\r\n      });\r\n\r\n\r\n      const checkAndDisableSponsors = () => {\r\n        sponsorDropdownItems.forEach(checkbox => {\r\n          if (!checkbox.disabled) {\r\n            checkbox.checked = true;\r\n            checkbox.disabled = true;\r\n          }\r\n        });\r\n        updateDropdownLabel();\r\n      };\r\n\r\n      // Function to enable sponsors without unchecking them\r\n      const enableSponsors = () => {\r\n        sponsorDropdownItems.forEach(checkbox => {\r\n          const isSelectedClient = selectedClient.some(selected => selected.ID === parseInt(checkbox.value));\r\n          if (!isSelectedClient) {\r\n            checkbox.disabled = false;\r\n          }\r\n        });\r\n        updateDropdownLabel();\r\n      };\r\n\r\n      // Event listener for \"Save Globally\" checkbox\r\n\r\n\r\n      // Event listener for \"Available to All Sponsors\" checkbox\r\n\r\n      saveGloballyCheckbox.addEventListener('change', function () {\r\n        if (this.checked) {\r\n          availableForAllCheckbox.disabled = false;\r\n          sponsorDropdownButton.disabled = false;\r\n        } else {\r\n          enableSponsors();\r\n          availableForAllCheckbox.checked = false;\r\n          availableForAllCheckbox.disabled = true;\r\n          sponsorDropdownButton.disabled = true;\r\n          sponsorDropdownItems.forEach(checkbox => {\r\n            if (!checkbox.disabled) {\r\n              checkbox.checked = false;\r\n              checkbox.disabled = false;\r\n            }\r\n          });\r\n          updateDropdownLabel();\r\n        }\r\n      });\r\n\r\n      // Event listener for \"Available to All Sponsors\" checkbox\r\n      availableForAllCheckbox.addEventListener('change', function () {\r\n        if (this.checked) {\r\n          checkAndDisableSponsors();\r\n        } else {\r\n          enableSponsors();\r\n        }\r\n      });\r\n\r\n      // Add event listener to prevent dropdown close on item selection\r\n      document.querySelectorAll('.dropdown-item').forEach(item => {\r\n        item.addEventListener('click', function (event) {\r\n          event.stopPropagation(); // Prevent dropdown from closing\r\n          const checkbox = this.querySelector('.form-check-input');\r\n          if (checkbox) {\r\n            if (!checkbox.disabled) {\r\n              checkbox.checked = !checkbox.checked;\r\n            }\r\n\r\n            if (checkbox.id === 'selectAll') {\r\n              const isChecked = checkbox.checked;\r\n              sponsorDropdownItems.forEach(cb => {\r\n                if (!cb.disabled) cb.checked = isChecked;\r\n              });\r\n            }\r\n            updateDropdownLabel();\r\n          }\r\n        });\r\n      });\r\n\r\n      // Initial label update\r\n      updateDropdownLabel();\r\n\r\n\r\n      // Clear validation errors when user types\r\n      [nameField, promptField].forEach(field => {\r\n        field.addEventListener('input', function () {\r\n          if (this.classList.contains('is-invalid') && this.value.trim()) {\r\n            this.classList.remove('is-invalid');\r\n          }\r\n          if (nameField) {\r\n            const errorDiv = document.getElementById('submition-error');\r\n            errorDiv.style.display = 'none';\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      console.error('Required elements are missing or not rendered yet.');\r\n    }\r\n  }\r\n}\r\n\r\n\r\nasync function createTextGenTag(payload) {\r\n  try {\r\n    const iconelement = document.getElementById(`text-gen-save`);\r\n    const aiTagBtn = document.getElementById('aitag');\r\n    const mentionBtn = document.getElementById('mention');\r\n    const formatDropdownBtn = document.getElementById('formatDropdown');\r\n    const cancelBtnGenAi = document.getElementById('cancel-btn-gen-ai');\r\n\r\n    aiTagBtn.disabled = true;\r\n    cancelBtnGenAi.disabled = true;\r\n    mentionBtn.disabled = true;\r\n    formatDropdownBtn.disabled = true;\r\n    iconelement.innerHTML = `<i class=\"fa fa-spinner fa-spin text-white me-2\"></i>Save`;\r\n    iconelement.disabled = true;\r\n\r\n    const response = await fetch(`${baseUrl}/api/report/group-key/add`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${jwt}`\r\n      },\r\n      body: JSON.stringify(payload)\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok.');\r\n    }\r\n\r\n    const data = await response.json();\r\n    if (data['Data'] && data['Status']) {\r\n      fetchDocument('AIpanel');\r\n    } else {\r\n      aiTagBtn.disabled = false;\r\n      cancelBtnGenAi.disabled = false;\r\n      mentionBtn.disabled = false;\r\n      formatDropdownBtn.disabled = false;\r\n      iconelement.disabled = false;\r\n      iconelement.innerHTML = `<i class=\"fa fa-check-circle me-2\"></i>Save`;\r\n      showAddTagError(data['Data'])\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('Error creating text generation tag:', error);\r\n  }\r\n}\r\n\r\n\r\nfunction mentionDropdownFn(textareaId, DropdownId, action) {\r\n  const filterMentions = (query) => {\r\n    // Assuming availableKeys is an array of objects with DisplayName and EditorValue properties\r\n    const filtered = availableKeys.filter(item => item.AIFlag === 0).filter(item =>\r\n      item.DisplayName.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n    return filtered;\r\n  };\r\n  let highlightedIndex = -1;\r\n\r\n  const promptField = document.getElementById(`${textareaId}`);\r\n  const mentionDropdown = document.getElementById(`${DropdownId}`);\r\n  if (promptField) {\r\n\r\n    // Handle input events on prompt field for mentions\r\n    promptField.addEventListener('input', (e) => {\r\n      const cursorPosition = promptField.selectionStart;\r\n      const textBeforeCursor = promptField.value.slice(0, cursorPosition);\r\n      const lastHashtag = textBeforeCursor.lastIndexOf('#');\r\n\r\n      if (lastHashtag !== -1) {\r\n        const query = textBeforeCursor.slice(lastHashtag + 1).trim();\r\n        if (query.length > 0) {\r\n          const mentions = filterMentions(query);\r\n\r\n          if (mentions.length > 0) {\r\n            mentionDropdown.innerHTML = mentions.map(item => {\r\n              let editorValue = '';\r\n              if (action === 'add') {\r\n                editorValue = `#${item.DisplayName}#`;\r\n              } else {\r\n                editorValue = item.EditorValue || `#${item.DisplayName}#`;\r\n              }\r\n\r\n              return `<li class=\"dropdown-item\" data-editor-value=\"${editorValue}\">${item.DisplayName}</li>`;\r\n            }).join('');\r\n\r\n            // Get the position of the textarea and place the dropdown above it\r\n            const textareaRect = promptField.getBoundingClientRect();\r\n            mentionDropdown.style.left = `${textareaRect.left}px`;\r\n            mentionDropdown.style.bottom = `75px`; // Position above the textarea\r\n            mentionDropdown.style.display = 'block';\r\n          } else {\r\n            mentionDropdown.style.display = 'none';\r\n          }\r\n        } else {\r\n          mentionDropdown.style.display = 'none';\r\n        }\r\n      } else {\r\n        mentionDropdown.style.display = 'none';\r\n      }\r\n\r\n    });\r\n\r\n    // Handle keyboard navigation in the dropdown\r\n    promptField.addEventListener('keydown', (e) => {\r\n      const items = document.querySelectorAll(`#${DropdownId} .dropdown-item`);\r\n      const totalItems = items.length;\r\n\r\n      if (e.key === 'ArrowDown') {\r\n        // Prevent default behavior to stop cursor from moving\r\n        e.preventDefault();\r\n\r\n        // Move the highlight down and wrap around to the top if at the end\r\n        if (highlightedIndex < totalItems - 1) {\r\n          highlightedIndex++;\r\n        } else {\r\n          highlightedIndex = 0; // Wrap to the first item\r\n        }\r\n        updateHighlightedItem(`${DropdownId}`);\r\n      } else if (e.key === 'ArrowUp') {\r\n        // Prevent default behavior to stop cursor from moving\r\n        e.preventDefault();\r\n\r\n        // Move the highlight up and wrap around to the bottom if at the top\r\n        if (highlightedIndex > 0) {\r\n          highlightedIndex--;\r\n        } else {\r\n          highlightedIndex = totalItems - 1; // Wrap to the last item\r\n        }\r\n        updateHighlightedItem(`${DropdownId}`);\r\n      } else if (e.key === 'Enter' && highlightedIndex !== -1) {\r\n        // Select the highlighted item\r\n        const selectedItem = items[highlightedIndex];\r\n        if (selectedItem) {\r\n          selectMention(selectedItem.getAttribute('data-editor-value'));\r\n          mentionDropdown.style.display = 'none';  // Hide the dropdown after selection\r\n          e.preventDefault();  // Prevent form submission on Enter key\r\n        }\r\n      }\r\n    });\r\n\r\n    // Function to highlight the selected item\r\n    function updateHighlightedItem(id) {\r\n      const items = document.querySelectorAll(`#${id} .dropdown-item`);\r\n      const dropdown = document.getElementById(`${id}`);\r\n      const totalItems = items.length;\r\n\r\n      // Remove the 'active' class from all items\r\n      items.forEach(item => item.classList.remove('active'));\r\n\r\n      // Add the 'active' class to the currently highlighted item\r\n      if (highlightedIndex >= 0 && highlightedIndex < totalItems) {\r\n        const highlightedItem = items[highlightedIndex];\r\n        highlightedItem.classList.add('active');\r\n\r\n        // Ensure the highlighted item is visible within the dropdown\r\n        highlightedItem.scrollIntoView({\r\n          behavior: 'smooth',    // Smooth scroll\r\n          block: 'nearest'      // Scroll only if necessary\r\n        });\r\n      }\r\n    }\r\n\r\n\r\n\r\n    // Handle selecting an item from the dropdown via mouse click\r\n    mentionDropdown.addEventListener('click', (e) => {\r\n      if (e.target && e.target.matches('li')) {\r\n        const editorValue = e.target.getAttribute('data-editor-value');\r\n        selectMention(editorValue);\r\n        mentionDropdown.style.display = 'none';  // Hide the dropdown after selection\r\n      }\r\n    });\r\n\r\n    // Function to insert the selected mention into the prompt field\r\n    const selectMention = (editorValue) => {\r\n      const textarea = document.getElementById(`${textareaId}`);\r\n      const currentValue = textarea.value;\r\n      const cursorPosition = textarea.selectionStart;\r\n\r\n      const textBefore = currentValue.slice(0, cursorPosition);\r\n      const textAfter = currentValue.slice(cursorPosition);\r\n\r\n      const lastHashPosition = textBefore.lastIndexOf('#');\r\n      const updatedTextBefore = textBefore.slice(0, lastHashPosition); // Removing '#' symbol\r\n\r\n      textarea.value = `${updatedTextBefore}${editorValue}${textAfter}`;\r\n      const newCursorPosition = updatedTextBefore.length + editorValue.length;\r\n      textarea.setSelectionRange(newCursorPosition, newCursorPosition);\r\n    };\r\n\r\n    // Hide the dropdown if clicked outside\r\n    document.addEventListener('click', (e) => {\r\n      if (!mentionDropdown.contains(e.target) && e.target !== promptField) {\r\n        mentionDropdown.style.display = 'none';\r\n      }\r\n    });\r\n  }\r\n}\r\nexport async function replaceMention(word: any, type: any) {\r\n  return Word.run(async (context) => {\r\n    try {\r\n      const selection = context.document.getSelection();\r\n      await context.sync();\r\n\r\n      if (!selection) {\r\n        throw new Error('Selection is invalid or not found.');\r\n      }\r\n\r\n      if (type === 'TABLE') {\r\n        const parser = new DOMParser();\r\n        const doc = parser.parseFromString(word.EditorValue, 'text/html');\r\n        const tableElement = doc.querySelector('table');\r\n\r\n        if (!tableElement) {\r\n          selection.insertParagraph(`#${word.DisplayName}#`, Word.InsertLocation.before);\r\n          throw new Error('No table found in the provided HTML.');\r\n        }\r\n\r\n        const rows = Array.from(tableElement.querySelectorAll('tr'));\r\n\r\n        if (rows.length === 0) {\r\n          throw new Error('The table does not contain any rows.');\r\n        }\r\n\r\n        const maxCols = Math.max(...rows.map(row => {\r\n          return Array.from(row.querySelectorAll('td, th')).reduce((sum, cell) => {\r\n            return sum + (parseInt(cell.getAttribute('colspan') || '1', 10));\r\n          }, 0);\r\n        }));\r\n\r\n        const paragraph = selection.insertParagraph(\"\", Word.InsertLocation.before);\r\n        await context.sync();\r\n\r\n        if (!paragraph) {\r\n          throw new Error('Failed to insert the paragraph.');\r\n        }\r\n\r\n        const table = paragraph.insertTable(rows.length, maxCols, Word.InsertLocation.after);\r\n        await context.sync();\r\n\r\n        if (!table) {\r\n          throw new Error('Failed to insert the table.');\r\n        }\r\n\r\n        const rowspanTracker: number[] = new Array(maxCols).fill(0);\r\n\r\n        rows.forEach((row, rowIndex) => {\r\n          const cells = Array.from(row.querySelectorAll('td, th'));\r\n          let cellIndex = 0;\r\n\r\n          cells.forEach((cell) => {\r\n            while (rowspanTracker[cellIndex] > 0) {\r\n              rowspanTracker[cellIndex]--;\r\n              cellIndex++;\r\n            }\r\n\r\n            const cellText = Array.from(cell.childNodes)\r\n              .map(node => {\r\n                if (node.nodeType === Node.TEXT_NODE) {\r\n                  return node.textContent?.trim() || '';\r\n                } else if (node.nodeType === Node.ELEMENT_NODE) {\r\n                  return (node as HTMLElement).innerText.trim();\r\n                }\r\n                return '';\r\n              })\r\n              .filter(text => text.length > 0)\r\n              .join(' ');\r\n\r\n            const colspan = parseInt(cell.getAttribute('colspan') || '1', 10);\r\n            const rowspan = parseInt(cell.getAttribute('rowspan') || '1', 10);\r\n\r\n            // Ensure cellIndex is within bounds\r\n            if (cellIndex >= maxCols) {\r\n              // Adjust cellIndex to fit within table dimensions\r\n              cellIndex = maxCols - 1;\r\n            }\r\n\r\n            // Set cell value\r\n            try {\r\n              table.getCell(rowIndex, cellIndex).value = cellText;\r\n\r\n              // Clear cells that span columns\r\n              for (let i = 1; i < colspan; i++) {\r\n                if (cellIndex + i < maxCols) {\r\n                  table.getCell(rowIndex, cellIndex + i).value = \"\";\r\n                }\r\n              }\r\n\r\n              // Update rowspanTracker\r\n              if (rowspan > 1) {\r\n                for (let i = 0; i < colspan; i++) {\r\n                  if (cellIndex + i < maxCols) {\r\n                    rowspanTracker[cellIndex + i] = rowspan - 1;\r\n                  }\r\n                }\r\n              }\r\n\r\n              // Advance cellIndex by colspan\r\n              cellIndex += colspan;\r\n              if (cellIndex >= maxCols) {\r\n                // Adjust cellIndex if it exceeds the table width\r\n                cellIndex = maxCols - 1;\r\n              }\r\n            } catch (cellError) {\r\n              console.error('Error setting cell value:', cellError);\r\n            }\r\n          });\r\n        });\r\n      } else {\r\n        if (word.EditorValue === '' || word.IsApplied) {\r\n          selection.insertParagraph(`#${word.DisplayName}#`, Word.InsertLocation.before);\r\n        } else {\r\n          let content = removeQuotes(word.EditorValue);\r\n          let lines = content.split(/\\r?\\n/); // Handle both \\r\\n and \\n\r\n\r\n          lines.forEach(line => {\r\n            selection.insertParagraph(line, Word.InsertLocation.before);\r\n          });\r\n        }\r\n      }\r\n\r\n      await context.sync();\r\n    } catch (error) {\r\n      console.error('Detailed error:', error);\r\n    }\r\n  });\r\n}\r\n\r\n\r\nfunction removeQuotes(value: string): string {\r\n  return value\r\n    ? value\r\n      .replace(/^\"|\"$/g, '')\r\n      .replace(/\\\\n/g, '')\r\n      .replace(/\\*\\*/g, '')\r\n      .replace(/\\\\r/g, '')\r\n    : '';\r\n}\r\n\r\nfunction showAddTagError(message) {\r\n  const errorDiv = document.getElementById('submition-error');\r\n  errorDiv.style.display = 'block';\r\n  errorDiv.textContent = message;\r\n}\r\n\r\nfunction transformDocumentName(value: string): string {\r\n  if (!value || value.trim() === '') {\r\n    return value; // Return the input value unchanged\r\n  }\r\n\r\n  const parts = value.split('_');\r\n  if (parts.length <= 1) {\r\n    return value; // Return the input value unchanged if no underscores are present\r\n  }\r\n\r\n  return parts.slice(1).join('_').replace(/%20/g, ' ').replace(/%25/g, '%');\r\n}\r\n\r\n\r\n\r\nfunction createMultiSelectDropdown(i, tag, radioButtonsHTML, textareaValue) {\r\n  const cardContainer = document.getElementById('card-container');\r\n\r\n  // Get the current scroll position\r\n  const scrollPosition = cardContainer.scrollTop;\r\n\r\n  const multiSelectHTML = `\r\n  <div class='p-3 bg-light'>\r\n    <div class=\"mb-3\">\r\n      <label for=\"source-select-${i}\" class=\"form-label\"><span class=\"text-danger\">*</span> Select Sources</label>\r\n      <div class=\"dropdown w-100\">\r\n        <button \r\n          class=\"btn btn-light border w-100 text-start d-flex justify-content-between align-items-start dropdown-toggle dropdown-toggle-sources\" \r\n          type=\"button\" \r\n          id=\"sourceDropdown-${i}\" \r\n          data-bs-toggle=\"dropdown\" \r\n          aria-expanded=\"false\">\r\n          <span id=\"sourceDropdownLabel-${i}\" class='sourceDropdownLabel'></span>\r\n          <span class=\"dropdown-toggle-icon dropdown-toggle-icon-s\"></span>\r\n        </button>\r\n        <ul class=\"dropdown-menu w-100 p-2\" aria-labelledby=\"sourceDropdown-${i}\" style=\"box-shadow: 0 4px 8px rgba(0,0,0,0.1); z-index: 10000;\">\r\n          <li class=\"dropdown-item p-2\" style=\"cursor: pointer;\" data-checkbox-id=\"selectAll-${i}\">\r\n            <div class=\"form-check\">\r\n              <input class=\"form-check-input\" type=\"checkbox\" value=\"selectAll\" id=\"selectAll-${i}\">\r\n              <label class=\"form-check-label\" for=\"selectAll-${i}\">Select All</label>\r\n            </div>\r\n          </li>\r\n          ${sourceList\r\n      .map(\r\n        (source, index) => `\r\n              <li class=\"dropdown-item p-2\" style=\"cursor: pointer;\" data-checkbox-id=\"source-${i}-${index}\">\r\n                <div class=\"form-check\">\r\n                  <input class=\"form-check-input source-checkbox\" type=\"checkbox\" value=\"${source.SourceName}\" id=\"source-${i}-${index}\">\r\n                  <label class=\"form-check-label text-prewrap\" for=\"source-${i}-${index}\">${source.SourceName}</label>\r\n                </div>\r\n              </li>\r\n            `\r\n      )\r\n      .join('')}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <div class=\"d-flex justify-content-end mt-2\">\r\n      <button id=\"cancel-src-btn-${i}\" class=\"btn btn-danger bg-danger-clr px-3 me-2\"><i class=\"fa fa-reply me-2\"></i>Cancel</button>\r\n      <button id=\"ok-src-btn-${i}\" class=\"btn btn-success bg-success-clr px-3\"><i class=\"fa fa-check-circle me-2\"></i>Save</button>\r\n    </div>\r\n  </div>\r\n  `;\r\n\r\n  // Get the accordion body element\r\n  const accordionBody = document.getElementById(`accordion-body-${i}`);\r\n\r\n  // Set height to ensure the dropdown button appears with some space\r\n  accordionBody.style.minHeight = \"20vh\";  // You can adjust this based on your needs\r\n\r\n  // Clear existing content and insert the dropdown\r\n  accordionBody.innerHTML = multiSelectHTML;\r\n\r\n  // Temporary array to hold the selected sources\r\n  let selectedSources = [];\r\n\r\n  // Get \"Select All\" checkbox and individual source checkboxes\r\n  const selectAllCheckbox = document.getElementById(`selectAll-${i}`);\r\n  const individualCheckboxes = document.querySelectorAll(`#accordion-body-${i} .source-checkbox`);\r\n  const sourceDropdownLabel = document.getElementById(`sourceDropdownLabel-${i}`);\r\n\r\n  // Function to update the dropdown label based on selected checkboxes\r\n  function updateLabel() {\r\n    const selectedSourceNames = selectedSources;\r\n    if (selectedSourceNames.length > 0) {\r\n      sourceDropdownLabel.innerText = selectedSourceNames.join(', ');  // Display selected sources as comma-separated\r\n    } else {\r\n      sourceDropdownLabel.innerText = ' ';  // Default text when no sources are selected\r\n    }\r\n  }\r\n\r\n  // Handle \"Select All\" functionality\r\n  selectAllCheckbox.addEventListener(\"change\", function () {\r\n    const checkboxes = document.querySelectorAll(`#accordion-body-${i} .source-checkbox`);\r\n    checkboxes.forEach((checkbox) => {\r\n      checkbox.checked = this.checked;  // If \"Select All\" is checked, all checkboxes are checked, and vice versa\r\n      // Update the temporary array based on the state of the checkboxes\r\n      if (checkbox.checked) {\r\n        if (!selectedSources.includes(checkbox.value)) {\r\n          selectedSources.push(checkbox.value);  // Add source to the array if checked\r\n        }\r\n      } else {\r\n        selectedSources = selectedSources.filter((source) => source !== checkbox.value);  // Remove unchecked sources\r\n      }\r\n    });\r\n\r\n    updateLabel();  // Update the label when \"Select All\" changes\r\n  });\r\n\r\n  // Handle individual checkbox state change\r\n  individualCheckboxes.forEach((checkbox) => {\r\n    checkbox.addEventListener(\"change\", function () {\r\n      if (checkbox.checked) {\r\n        if (!selectedSources.includes(checkbox.value)) {\r\n          selectedSources.push(checkbox.value);  // Add source to the array if checked\r\n        }\r\n      } else {\r\n        selectedSources = selectedSources.filter((source) => source !== checkbox.value);  // Remove unchecked sources\r\n      }\r\n\r\n      // Check if all individual checkboxes are checked\r\n      const allChecked = Array.from(individualCheckboxes).every((checkbox) => checkbox.checked);\r\n      selectAllCheckbox.checked = allChecked;  // Update \"Select All\" checkbox based on individual selections\r\n\r\n      updateLabel();  // Update the label when an individual checkbox is changed\r\n    });\r\n\r\n    // Add click event listener to the whole list item (not just the checkbox)\r\n    const listItem = checkbox.closest(\"li\");\r\n    listItem.addEventListener(\"click\", function (event) {\r\n      checkbox.checked = !checkbox.checked;  // Toggle checkbox state\r\n\r\n      if (checkbox.checked) {\r\n        if (!selectedSources.includes(checkbox.value)) {\r\n          selectedSources.push(checkbox.value);  // Add source to the array if checked\r\n        }\r\n      } else {\r\n        selectedSources = selectedSources.filter((source) => source !== checkbox.value);  // Remove unchecked sources\r\n      }\r\n\r\n      const allChecked = Array.from(individualCheckboxes).every((checkbox) => checkbox.checked);\r\n      selectAllCheckbox.checked = allChecked;  // Update \"Select All\" checkbox\r\n\r\n      updateLabel();  // Update the label when a list item is clicked\r\n\r\n      event.stopPropagation();  // Prevent dropdown from closing when clicking on list item\r\n    });\r\n  });\r\n\r\n  // Prevent the dropdown from closing when clicking on the \"Select All\" checkbox label\r\n  const selectAllItem = document.querySelector(`#accordion-body-${i} .dropdown-item[data-checkbox-id=\"selectAll-${i}\"]`);\r\n  selectAllItem.addEventListener(\"click\", function (event) {\r\n    selectAllCheckbox.checked = !selectAllCheckbox.checked;  // Toggle \"Select All\" checkbox\r\n\r\n    // Update the state of all source checkboxes based on \"Select All\"\r\n    const checkboxes = document.querySelectorAll(`#accordion-body-${i} .source-checkbox`);\r\n    checkboxes.forEach((checkbox) => {\r\n      checkbox.checked = selectAllCheckbox.checked;  // If \"Select All\" is checked, all checkboxes are checked\r\n    });\r\n\r\n    // Update the temporary array based on \"Select All\"\r\n    selectedSources = selectAllCheckbox.checked\r\n      ? Array.from(checkboxes).map((checkbox) => checkbox.value)  // Add all sources to the array if \"Select All\" is checked\r\n      : [];\r\n\r\n    updateLabel();  // Update the label when \"Select All\" item is clicked\r\n\r\n    event.stopPropagation();  // Prevent dropdown from closing when clicking on the \"Select All\" item\r\n  });\r\n\r\n  // Initialize checkboxes based on tag.Sources\r\n  if (tag.Sources && tag.Sources.length > 0) {\r\n    individualCheckboxes.forEach((checkbox) => {\r\n      if (tag.Sources.includes(checkbox.value)) {\r\n        checkbox.checked = true;  // Check the checkbox if its value is in tag.Sources\r\n        selectedSources.push(checkbox.value);  // Add the source to the temporary array\r\n      }\r\n    });\r\n\r\n    // Also check \"Select All\" if all checkboxes are selected\r\n    const allChecked = Array.from(individualCheckboxes).every((checkbox) => checkbox.checked);\r\n    selectAllCheckbox.checked = allChecked;\r\n    updateLabel();  // Update the label when \"Select All\" changes\r\n\r\n  }\r\n\r\n  // Handle \"OK\" button click\r\n  document.getElementById(`ok-src-btn-${i}`).addEventListener(\"click\", function () {\r\n    tag.Sources = [...selectedSources];  // Add selected sources to tag.Sources when \"OK\" is clicked\r\n    tag.SourceValue = sourceList\r\n      .filter(source => selectedSources.includes(source.SourceName))  // Find the sources with matching SourceNames\r\n      .map(source => source.SourceValue);\r\n    appendAccordionBody(i, tag, radioButtonsHTML, textareaValue, scrollPosition);\r\n  });\r\n\r\n  document.getElementById(`cancel-src-btn-${i}`).addEventListener(\"click\", function () {\r\n    appendAccordionBody(i, tag, radioButtonsHTML, textareaValue, scrollPosition);\r\n  });\r\n}\r\n\r\n\r\n\r\nfunction appendAccordionBody(i, tag, radioButtonsHTML, textareaValue, scrollPosition) {\r\n\r\n  const tooltipButton = tag.Sources && tag.Sources.length > 0\r\n    ? `  <span class=\"tooltiptext\">${tag.Sources}</span>`\r\n    : '';\r\n\r\n\r\n  const accordionBody = document.getElementById(`accordion-body-${i}`);\r\n\r\n  // Set height to ensure the dropdown button appears with some space\r\n  accordionBody.style.minHeight = \"20vh\";  // You can adjust this based on your needs\r\n\r\n  // Clear existing content and insert the dropdown\r\n  accordionBody.innerHTML =\r\n    `\r\n    <div class=\"chatbox\" id=\"selected-response-parent-${i}\">\r\n   \r\n            ${radioButtonsHTML}\r\n    </div>\r\n    <div class=\"form-check form-switch chatbox m-0\">\r\n        <label class=\"form-check-label pb-3\" for=\"doNotApply-${i}\">\r\n           <span class=\"fs-12\">Do not apply</span>\r\n        </label>\r\n            <input class=\"form-check-input\"\r\n                   type=\"checkbox\"\r\n                   id=\"doNotApply-${i}\"\r\n                   ${tag.IsApplied ? 'checked' : ''}>\r\n      </div>\r\n      <div class=\"d-flex align-items-end justify-content-end chatbox p-2\">\r\n           <textarea class=\"form-control\"\r\n                      rows=\"5\"\r\n                      id=\"chatbox-${i}\"\r\n                      placeholder=\"Type here\">${textareaValue}</textarea>\r\n              <div id=\"mention-dropdown-${i}\" class=\"dropdown-menu\"></div>\r\n              <div class=\"d-flex flex-column align-self-end me-3\">\r\n                <button class=\"btn btn-secondary text-light ms-2 mb-2 ngb-tooltip\" id=\"insert-tag-${i}\">\r\n                <span class=\"tooltiptext\">Insert</span>\r\n                <i class=\"fa fa-plus text-light c-pointer\" ></i>\r\n                </button>\r\n\r\n                <button\r\n                    class=\"btn btn-secondary ms-2 mb-2 text-white ngb-tooltip\"\r\n                    id=\"changeSource-${i}\">\r\n                    ${tooltipButton}\r\n                 <i class=\"fa fa-file-lines text-white\"></i>\r\n                </button>\r\n                <button type=\"submit\"\r\n                    class=\"btn btn-primary bg-primary-clr ms-2 text-white\"\r\n                    id=\"sendPrompt-${i}\">\r\n                  <i class=\"fa fa-paper-plane text-white\"></i>\r\n               </button>\r\n             </div>\r\n          </div>`;\r\n\r\n  const cardContainer = document.getElementById('card-container');\r\n\r\n  cardContainer.scrollTop = scrollPosition;\r\n  mentionDropdownFn(`chatbox-${i}`, `mention-dropdown-${i}`, 'edit');\r\n  document.getElementById(`doNotApply-${i}`)?.addEventListener('change', () => onDoNotApplyChange(event, i, tag));\r\n\r\n  document.getElementById(`sendPrompt-${i}`)?.addEventListener('click', () => {\r\n    const textareaValue = (document.getElementById(`chatbox-${i}`) as HTMLTextAreaElement).value;\r\n\r\n    sendPrompt(tag, textareaValue, i)\r\n  });\r\n\r\n\r\n  document.getElementById(`insert-tag-${i}`)?.addEventListener('click', () => {\r\n    insertTagPrompt(i)\r\n  })\r\n\r\n  document.getElementById(`changeSource-${i}`)?.addEventListener('click', () => {\r\n    const textareaValue = (document.getElementById(`chatbox-${i}`) as HTMLTextAreaElement).value;\r\n\r\n    // const accordionbody=document.getElementById(`accordion-body-${i}`).innerHTML=''\r\n    createMultiSelectDropdown(i, tag, radioButtonsHTML, textareaValue)\r\n  })\r\n\r\n}\r\n","const dataUrl='https://plsdevapp.azurewebsites.net'\r\nconst storeUrl='https://linkwordplugin-aphgcwcgbfdqeccs.eastus-01.azurewebsites.net'\r\nconst versionLink='1.0.4'\r\nexport {dataUrl,storeUrl,versionLink};"],"names":["___HTML_LOADER_IMPORT_0___","module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","b","baseURI","self","href","sourceList","filteredGlossaryTerm","jwt","baseUrl","storedUrl","documentID","organizationName","aiTagList","initialised","availableKeys","glossaryName","isGlossaryActive","GroupName","layTerms","dataList","isTagUpdating","capturedFormatting","emptyFormat","isNoFormatTextAvailable","clientId","userId","clientList","currentYear","Date","getFullYear","async","login","sessionToken","sessionStorage","getItem","console","log","loadLoginPage","getElementById","innerHTML","addEventListener","handleLogin","event","preventDefault","organization","value","username","password","toLowerCase","trim","toLocaleLowerCase","response","fetch","method","headers","body","JSON","stringify","ClientName","Username","Password","ok","showLoginError","data","json","Status","ResponseStatus","Data","Token","setItem","ID","error","message","errorDiv","style","display","textContent","fetchDocument","action","setActiveButton","displayMentions","loadGlossary","fetchGlossary","displayAiTagList","formatOptionsDisplay","removeMatchingContentControls","htmlBody","displayCapturedFormatting","removeFormattedText","removeOptionsConfirmation","logout","SourceTypeList","filter","item","SourceValue","AIFlag","map","SourceName","transformDocumentName","ClientID","aiGroup","Group","find","element","DisplayName","Name","GroupKey","GroupKeyAll","ComponentKeyDataType","fetchClients","buttonId","forEach","id","button","classList","add","remove","keys","disabled","clearCapturedFormatting","Bold","Underline","Size","captureFormatting","emptyFormatCheckbox","checked","formatList","entries","Word","run","font","context","getSelection","load","sync","bold","Italic","italic","underline","size","highlightColor","name","color","paragraphs","paragraph","items","text","textRanges","split","range","insertText","InsertLocation","generateRadioButtons","tag","index","FilteredReportHeadAIHistoryList","ReportHeadAIHistoryList","historyList","Response","removeQuotes","unshift","fetchAIHistory","html","chat","j","Prompt","Selected","join","setTimeout","copyText","onRadioChange","accordionContent","headerId","collapseId","radioButtonsHTML","textColorClass","IsApplied","tooltipButton","Sources","onDoNotApplyChange","target","sourceListBtn","isChecked","tagname","dnaBtn","match","sendPrompt","prompt","iconelement","payload","ReportHeadID","DocumentID","NCTID","DocumentType","TextSetting","DocumentTemplate","ReportTemplate","ReportHeadGroupKeyID","ThreadID","AssistantID","Container","PromptType","VectorID","parse","innerContainer","tempTextArea","createElement","appendChild","select","execCommand","removeChild","clear","Cardcontainer","applyAITagFn","addGenAITags","accordionItem","mentionDropdownFn","textareaValue","insertTagPrompt","createMultiSelectDropdown","querySelectorAll","collapseElement","nextElementSibling","toggle","icon","closest","querySelector","selection","EditorValue","insertParagraph","before","line","searchResults","search","matchCase","matchWholeWord","err","tagIndex","chatIndex","matchingKey","div","selectElement","UserValue","applyglossary","bodyText","GlossaryTemplate","sort","ClinicalTerm","processedTerms","Set","filteredTerms","term","biggerTerm","includes","foundRanges","Map","searchPromises","contentControls","has","set","control","delete","contentControl","insertContentControl","title","fontProps","push","family","appearance","ContentControlAppearance","boundingBox","Office","addHandlerAsync","EventType","DocumentSelectionChanged","handleSelectionChange","loader","selectedWords","words","displayElement","groupedTerms","word","LayTerm","clinicalTerm","mainBox","className","heading","layTerm","subBox","replaceClinicalTerm","displayHighlightedText","checkGlossary","some","getRange","reduce","props","highlight","parseFloat","searchBox","suggestionList","updateSuggestions","searchTerm","mention","listItem","onclick","type","tableElement","DOMParser","parseFromString","rows","Array","from","maxCols","Math","max","row","sum","cell","parseInt","getAttribute","table","insertTable","after","rowspanTracker","fill","rowIndex","cells","cellIndex","cellText","childNodes","node","nodeType","Node","TEXT_NODE","ELEMENT_NODE","innerText","colspan","rowspan","getCell","cellError","replaceMention","selectedClient","client","isSelectedClient","selected","form","promptField","nameField","descriptionField","saveGloballyCheckbox","availableForAllCheckbox","sponsorDropdownButton","sponsorDropdownItems","updateDropdownLabel","selectedOptions","cb","parentElement","input","valid","selectedSponsors","isAvailableForAll","isSaveGlobally","aigroup","aiTagBtn","mentionBtn","formatDropdownBtn","cancelBtnGenAi","showAddTagError","createTextGenTag","Description","GroupKeyClient","AllClient","SaveGlobally","UserDefined","ComponentKeyDataTypeID","ComponentKeyDataAccessID","DocumentTypeID","SourceTypeID","ReportHeadGroupID","ReportHeadSourceID","checkAndDisableSponsors","checkbox","enableSponsors","stopPropagation","field","contains","textareaId","DropdownId","highlightedIndex","mentionDropdown","updateHighlightedItem","totalItems","highlightedItem","scrollIntoView","behavior","block","cursorPosition","selectionStart","textBeforeCursor","slice","lastHashtag","lastIndexOf","query","mentions","filterMentions","editorValue","textareaRect","getBoundingClientRect","left","bottom","selectedItem","selectMention","matches","textarea","currentValue","textBefore","textAfter","lastHashPosition","updatedTextBefore","newCursorPosition","setSelectionRange","parts","scrollPosition","scrollTop","multiSelectHTML","source","accordionBody","minHeight","selectedSources","selectAllCheckbox","individualCheckboxes","sourceDropdownLabel","updateLabel","selectedSourceNames","allChecked","every","checkboxes","appendAccordionBody","Number","onReady","info","host","HostType","properties","customProperties","property","orgName","retrieveDocumentProperties","URL"],"sourceRoot":""}