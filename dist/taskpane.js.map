{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane/./src/taskpane/index.html","webpack://office-addin-taskpane/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://office-addin-taskpane/webpack/bootstrap","webpack://office-addin-taskpane/webpack/runtime/compat get default export","webpack://office-addin-taskpane/webpack/runtime/define property getters","webpack://office-addin-taskpane/webpack/runtime/global","webpack://office-addin-taskpane/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane/webpack/runtime/publicPath","webpack://office-addin-taskpane/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane/./src/taskpane/taskpane.ts","webpack://office-addin-taskpane/./src/taskpane/data.ts"],"sourcesContent":["// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Link addin</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/11.0.0/css/fabric.min.css\\\"/> <link href=\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\\\" rel=\\\"stylesheet\\\" integrity=\\\"sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65\\\" crossorigin=\\\"anonymous\\\"> <link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\\\"> <link href=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\\\" integrity=\\\"sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4\\\" crossorigin=\\\"anonymous\\\"><\" + \"/script> <div id=\\\"header-nav\\\"> <div class=\\\"logo-header d-flex w-100 justify-content-between align-items-center bg-light\\\" id=\\\"logo-header\\\"> </div> <div class=\\\"header bg-dark mb-2\\\" id=\\\"header\\\"> </div> </div> <main id=\\\"app-body\\\" class=\\\"d-block\\\"> <div id=\\\"ai-tag-list-container\\\" class=\\\"accordion\\\"></div> </main> </body> </html>\";\n// Exports\nexport default code;","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n\n  // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n  url = String(url.__esModule ? url.default : url);\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n * See LICENSE in the project root for license information.\r\n */\r\n\r\nimport { dataUrl, storeUrl } from \"./data\";\r\nlet jwt = '';\r\nlet baseUrl = dataUrl\r\nlet storedUrl = storeUrl\r\nlet documentID = ''\r\nlet organizationName = ''\r\nlet aiTagList = [];\r\nlet initialised = true;\r\nlet availableKeys = [];\r\nlet glossaryName = ''\r\nlet isGlossaryActive: boolean = false;\r\nlet imageList = [];\r\nlet GroupName: string = '';\r\nlet layTerms = [];\r\nlet dataList: any = []\r\nlet isTagUpdating: boolean = false;\r\nlet capturedFormatting: any = {};\r\nlet emptyFormat: boolean = false;\r\nlet isNoFormatTextAvailable: boolean = false;\r\nlet clientId = '0';\r\nlet userId = 0;\r\nlet clientList = [];\r\n\r\n\r\n/* global document, Office, Word */\r\n\r\nwindow.addEventListener('hashchange', () => {\r\n  const hash = window.location.hash;\r\n  if (hash === '#/dashboard' && initialised) {\r\n    initialised = false;\r\n    displayMenu();\r\n\r\n  }\r\n});\r\n\r\n\r\nOffice.onReady((info) => {\r\n  if (info.host === Office.HostType.Word) {\r\n    document.getElementById(\"app-body\").style.display = \"flex\";\r\n    const editor = document.getElementById('editor');\r\n\r\n    window.location.hash = '#/login';\r\n    retrieveDocumentProperties()\r\n  }\r\n});\r\n\r\n\r\n// Example usage:\r\n\r\n\r\n\r\nasync function retrieveDocumentProperties() {\r\n  try {\r\n    await Word.run(async (context) => {\r\n      const properties = context.document.properties.customProperties;\r\n      properties.load(\"items\");\r\n\r\n      await context.sync();\r\n      const property = properties.items.find(prop => prop.key === 'DocumentID');\r\n      const orgName = properties.items.find(prop => prop.key === 'Organization');\r\n      if (property && orgName) {\r\n        documentID = property.value;\r\n        organizationName = orgName.value;\r\n        login()\r\n      } else {\r\n        document.getElementById('app-body').innerHTML = `\r\n        <p class=\"px-3 text-center\">Export a document from the LINK AI application to use this functionality.</p>`\r\n        console.log(`Custom property \"documentID\" not found.`);\r\n        return null;\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error retrieving custom property:\", error);\r\n  }\r\n\r\n}\r\n\r\nasync function login() {\r\n  // document.getElementById('header').innerHTML = ``\r\n  const sessionToken = sessionStorage.getItem('token');\r\n  console.log(sessionToken)\r\n  if (sessionToken) {\r\n    jwt = sessionToken;\r\n    window.location.hash = '#/dashboard';\r\n  } else {\r\n    loadLoginPage();\r\n  }\r\n}\r\n\r\nfunction loadLoginPage() {\r\n\r\n\r\n  document.getElementById('app-body').innerHTML = `\r\n    <div class=\"container mt-5\">\r\n      <form id=\"login-form\" class=\"p-4 border rounded\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"organization\" class=\"form-label fw-bold\">Organization</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"organization\" required>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"username\" class=\"form-label fw-bold\">Username</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"username\" required>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"password\" class=\"form-label fw-bold\">Password</label>\r\n          <input type=\"password\" class=\"form-control\" id=\"password\" required>\r\n        </div>\r\n        <div class=\"d-grid\">\r\n          <button type=\"submit\" class=\"btn btn-primary bg-primary-clr\">Login</button>\r\n        </div>\r\n      <div id=\"login-error\" class=\"mt-3 text-danger\" style=\"display: none;\"></div>\r\n\r\n      </form>\r\n    </div>\r\n  `;\r\n\r\n  document.getElementById('login-form').addEventListener('submit', handleLogin);\r\n}\r\n\r\nasync function handleLogin(event) {\r\n  event.preventDefault();\r\n\r\n  // Get the values from the form fields\r\n  const organization = document.getElementById('organization').value;\r\n  const username = document.getElementById('username').value;\r\n  const password = document.getElementById('password').value;\r\n  if (organization.toLowerCase().trim() === organizationName.toLocaleLowerCase().trim()) {\r\n    document.getElementById('app-body').innerHTML = `\r\n  <div id=\"button-container\">\r\n\r\n          <div class=\"loader\" id=\"loader\"></div>\r\n          </div\r\n`\r\n    try {\r\n      const response = await fetch(`${baseUrl}/api/user/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          ClientName: organization,\r\n          Username: username,\r\n          Password: password\r\n        })\r\n      });\r\n\r\n\r\n      if (!response.ok) {\r\n        showLoginError(\"An error occurred during login. Please try again.\")\r\n        throw new Error('Network response was not ok.');\r\n      }\r\n\r\n      const data = await response.json();\r\n      if (data.Status === true && data['Data']) {\r\n        if (data['Data'].ResponseStatus) {\r\n          jwt = data.Data.Token;\r\n          sessionStorage.setItem('token', jwt)\r\n          sessionStorage.setItem('userId', data.Data.ID);\r\n          window.location.hash = '#/dashboard';\r\n\r\n        } else {\r\n          showLoginError(\"An error occurred during login. Please try again.\")\r\n        }\r\n      } else {\r\n        showLoginError(\"An error occurred during login. Please try again.\")\r\n      }\r\n\r\n\r\n      // Handle successful login (e.g., navigate to the next page or show a success message)\r\n\r\n    } catch (error) {\r\n      showLoginError(\"An error occurred during login. Please try again.\")\r\n      console.error('Error during login:', error);\r\n      // Handle login error (e.g., show an error message)\r\n    }\r\n  } else {\r\n    showLoginError(\"The organization specified is not associated with this document\")\r\n  }\r\n}\r\n\r\nfunction showLoginError(message) {\r\n  loadLoginPage();  // Reload the form UI\r\n  const errorDiv = document.getElementById('login-error');\r\n  errorDiv.style.display = 'block';\r\n  errorDiv.textContent = message;\r\n}\r\n\r\nfunction displayMenu() {\r\n  userId = Number(sessionStorage.getItem('userId'))\r\n  // document.getElementById('aitag').addEventListener('click', redirectAI);\r\n  fetchDocument('Init');\r\n\r\n}\r\n\r\nasync function fetchDocument(action) {\r\n  try {\r\n    const response = await fetch(`${baseUrl}/api/report/id/${documentID}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${jwt}`\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok.');\r\n    }\r\n\r\n    const data = await response.json();\r\n    document.getElementById('app-body').innerHTML = ``\r\n    document.getElementById('logo-header').innerHTML = `\r\n        <img  id=\"main-logo\" src=\"${storedUrl}/assets/logo.png\" alt=\"\" class=\"logo\"> <i class=\"fa fa-sign-out me-5 c-pointer\" aria-hidden=\"true\" id=\"logout\"><span class=\"tooltiptext\">Logout</span></i>\r\n`\r\n    document.getElementById('header').innerHTML = `\r\n    <div class=\"d-flex justify-content-around\">\r\n        <button class=\"btn btn-dark\" id=\"mention\">Insert</button>\r\n        <button class=\"btn btn-dark\" id=\"aitag\">Refine</button>\r\n\r\n        <!-- Dropdown for Formatting -->\r\n        <div class=\"dropdown\">\r\n            <button class=\"btn btn-dark dropdown-toggle\" type=\"button\" id=\"formatDropdown\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                Actions\r\n            </button>\r\n            <ul class=\"dropdown-menu\" aria-labelledby=\"formatDropdown\" style=\"z-index: 100000;\">\r\n                <li><button class=\"dropdown-item\" id=\"selectFormat\">Define Formatting</button></li>\r\n                <li><button class=\"dropdown-item\" id=\"glossary\" disabled>Glossary</button></li>\r\n                <li><button class=\"dropdown-item\" id=\"removeFormatting\" disabled>Remove Formatted Text</button></li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n`\r\n\r\n    document.getElementById('mention').addEventListener('click', () => {\r\n      setActiveButton('mention');\r\n      displayMentions();\r\n    });\r\n\r\n    document.getElementById('glossary').addEventListener('click', () => {\r\n      setActiveButton('formatDropdown');\r\n      fetchGlossary()\r\n    });\r\n\r\n    document.getElementById('aitag').addEventListener('click', () => {\r\n      setActiveButton('aitag');\r\n      displayAiTagList();\r\n    });\r\n    document.getElementById('selectFormat').addEventListener('click', () => {\r\n      setActiveButton('formatDropdown');\r\n      formatOptionsDisplay();\r\n    });\r\n    document.getElementById('removeFormatting').addEventListener('click', () => {\r\n      setActiveButton('formatDropdown');\r\n      removeOptionsConfirmation();\r\n    });\r\n\r\n    document.getElementById('logout').addEventListener('click', logout);\r\n\r\n    dataList = data['Data'];\r\n    clientId = dataList.ClientID;\r\n    const aiGroup = data['Data'].Group.find(element => element.DisplayName === 'AIGroup');\r\n    GroupName = aiGroup ? aiGroup.Name : '';\r\n    aiTagList = aiGroup ? aiGroup.GroupKey : [];\r\n\r\n    availableKeys = data['Data'].GroupKeyAll.filter(element => element.ComponentKeyDataType === 'TABLE' || element.ComponentKeyDataType === 'TEXT');\r\n    fetchClients();\r\n    if (action === 'AIpanel') {\r\n      displayAiTagList();\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('Error fetching glossary data:', error);\r\n  }\r\n}\r\n\r\nfunction setActiveButton(buttonId) {\r\n  const buttons = ['mention', 'aitag', 'selectFormat', 'removeFormatting', 'formatDropdown'];\r\n  buttons.forEach(id => {\r\n    const button = document.getElementById(id);\r\n    if (button) {\r\n      if (id === buttonId) {\r\n        button.classList.add('active');\r\n      } else {\r\n        button.classList.remove('active');\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nasync function fetchClients() {\r\n  try {\r\n    const response = await fetch(`${baseUrl}/api/client/all/${userId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${jwt}`\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok.');\r\n    }\r\n\r\n\r\n\r\n    const data = await response.json();\r\n    clientList = data['Data'];\r\n  } catch (error) {\r\n  }\r\n}\r\n\r\n\r\n\r\nasync function formatOptionsDisplay() {\r\n  if (!isTagUpdating) { // Check if isTagUpdating is false\r\n    if (isGlossaryActive) {\r\n      await clearGlossary();\r\n    }\r\n    const htmlBody = `\r\n      <div class=\"container mt-3\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n               <!-- Buttons for Capture and Empty Format -->\r\n            <div class=\"d-flex justify-content-end\">\r\n              <button id=\"capture-format-btn\" class=\"btn btn-primary bg-primary-clr\"><i class=\"fa fa-border-style me-1\"></i>  Capture Format</button>\r\n            </div>\r\n            <!-- <h5 class=\"card-title\">Formatting Options</h5> -->\r\n          </div>\r\n          <div class=\"card-body\">\r\n           <div>\r\n                <input type=\"checkbox\" id=\"empty-format-checkbox\" class=\"form-check-input mb-2\">\r\n                <label for=\"empty-format-checkbox\" class=\"form-check-label empty-format-checkbox-label\">Skip ignoring and removing format-based text</label>\r\n              </div>\r\n            <!-- Section to display captured formatting -->\r\n            <div id=\"format-details\">\r\n              <h5 class=\"my-3\">Selected Formatting:</h5>\r\n              <ul id=\"format-list\" class=\"list-unstyled\"></ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n\r\n    document.getElementById('app-body').innerHTML = htmlBody;\r\n    if (Object.keys(capturedFormatting).length === 0) {\r\n      const formatDetails = document.getElementById(\"format-details\");\r\n      formatDetails.style.display = 'none';\r\n      // The object is not empty\r\n    }\r\n\r\n    const glossaryBtn = document.getElementById('glossary') as HTMLButtonElement;\r\n    glossaryBtn.disabled = true;\r\n    if (emptyFormat) {\r\n      clearCapturedFormatting();\r\n    }\r\n    else {\r\n      if (capturedFormatting.Bold === null || capturedFormatting.Bold === undefined ||\r\n        capturedFormatting.Underline === 'Mixed' || capturedFormatting.Underline === undefined ||\r\n        capturedFormatting.Size === null || capturedFormatting.Size === undefined ||\r\n        capturedFormatting[\"Font Name\"] === null || capturedFormatting[\"Font Name\"] === undefined ||\r\n        capturedFormatting[\"Background Color\"] === '' || capturedFormatting[\"Background Color\"] === undefined ||\r\n        capturedFormatting[\"Text Color\"] === '' || capturedFormatting[\"Text Color\"] === undefined) {\r\n        const formatList = document.getElementById(\"format-list\");\r\n        formatList.innerHTML = \"<p>Multiple style values found. Try again</p>\";\r\n        const removeFormatBtn = document.getElementById('removeFormatting') as HTMLButtonElement;\r\n        removeFormatBtn.disabled = true;\r\n      } else {\r\n        const removeFormatBtn = document.getElementById('removeFormatting') as HTMLButtonElement;\r\n        removeFormatBtn.disabled = false;\r\n        displayCapturedFormatting();\r\n      }\r\n    }\r\n    // Event listeners for the buttons\r\n\r\n    document.getElementById(\"capture-format-btn\").addEventListener(\"click\", captureFormatting);\r\n\r\n    const emptyFormatCheckbox = document.getElementById(\"empty-format-checkbox\") as HTMLInputElement;\r\n    if (isNoFormatTextAvailable) {\r\n      emptyFormatCheckbox.checked = true;\r\n      clearCapturedFormatting();\r\n    }\r\n\r\n    emptyFormatCheckbox.addEventListener(\"change\", () => {\r\n      if (emptyFormatCheckbox.checked) {\r\n        isNoFormatTextAvailable = true;\r\n        clearCapturedFormatting();\r\n      } else {\r\n        const CaptureBtn = document.getElementById('capture-format-btn') as HTMLButtonElement;\r\n        CaptureBtn.disabled = false;\r\n        isNoFormatTextAvailable = false;\r\n        emptyFormat = false;\r\n        const glossaryBtn = document.getElementById('glossary') as HTMLButtonElement;\r\n        glossaryBtn.disabled = true;\r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction displayCapturedFormatting() {\r\n  emptyFormat = false;\r\n  const formatList = document.getElementById(\"format-list\");\r\n  formatList.innerHTML = \"\"; // Clear the list before adding new items\r\n\r\n  for (const [key, value] of Object.entries(capturedFormatting)) {\r\n    if ((key === \"Text Color\" || key === \"Background Color\") && value) {\r\n      formatList.innerHTML += `\r\n        <li><strong>${key}:</strong>${value}\r\n          <span style=\"display:inline-block;width:15px;height:15px;background-color:${value};border:1px solid black;\"></span>\r\n        </li>\r\n      `;\r\n    } else {\r\n      formatList.innerHTML += `<li><strong>${key}:</strong> ${value}</li>`;\r\n    }\r\n  }\r\n}\r\n\r\nfunction clearCapturedFormatting() {\r\n  capturedFormatting = {}; // Clear the captured formatting object\r\n  const formatDetails = document.getElementById(\"format-details\");\r\n  formatDetails.style.display = 'none';\r\n  // formatList.innerHTML = `<li>No formatting selected.</li>`;\r\n  emptyFormat = true;\r\n  const glossaryBtn = document.getElementById('glossary') as HTMLButtonElement;\r\n  glossaryBtn.disabled = false;\r\n  const CaptureBtn = document.getElementById('capture-format-btn') as HTMLButtonElement;\r\n  CaptureBtn.disabled = true;\r\n\r\n  const removeFormatBtn = document.getElementById('removeFormatting') as HTMLButtonElement;\r\n  removeFormatBtn.disabled = true;\r\n\r\n  console.log(\"Captured formatting cleared.\");\r\n}\r\n\r\nasync function captureFormatting() {\r\n  try {\r\n    await Word.run(async (context) => {\r\n      const selection = context.document.getSelection();\r\n      const font = selection.font;\r\n      font.load([\"bold\", \"italic\", \"underline\", \"size\", \"highlightColor\", \"name\", 'color']);\r\n\r\n      await context.sync();\r\n\r\n      capturedFormatting = {\r\n        Bold: font.bold,\r\n        Italic: font.italic,\r\n        Underline: font.underline,\r\n        Size: font.size,\r\n        \"Background Color\": font.highlightColor,\r\n        \"Font Name\": font.name,\r\n        'Text Color': font.color\r\n      };\r\n\r\n\r\n\r\n      const formatDetails = document.getElementById(\"format-details\");\r\n      formatDetails.style.display = 'block';\r\n\r\n      if (capturedFormatting.Bold === null ||\r\n        capturedFormatting.Underline === 'Mixed' ||\r\n        capturedFormatting.Size === null ||\r\n        capturedFormatting[\"Font Name\"] === null ||\r\n        capturedFormatting[\"Background Color\"] === '' ||\r\n        capturedFormatting[\"Text Color\"] === ''\r\n\r\n      ) {\r\n        const formatList = document.getElementById(\"format-list\");\r\n        formatList.innerHTML = \"<p>Multiple style values found. Try again</p>\";\r\n        const removeFormatBtn = document.getElementById('removeFormatting') as HTMLButtonElement;\r\n        removeFormatBtn.disabled = true;\r\n      } else {\r\n        const removeFormatBtn = document.getElementById('removeFormatting') as HTMLButtonElement;\r\n        removeFormatBtn.disabled = false;\r\n        displayCapturedFormatting();\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error capturing formatting:\", error);\r\n  }\r\n}\r\n\r\n\r\n\r\nasync function removeOptionsConfirmation() {\r\n  if (!isTagUpdating) {\r\n    if (isGlossaryActive) {\r\n      await clearGlossary();\r\n    } // Check if isTagUpdating is false\r\n    const htmlBody = `\r\n      <div class=\"container mt-3\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            <h5 class=\"card-title\">Are you sure you want to remove formatted text ?</h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n          <div id=\"format-details\">\r\n              <h5>Selected Formatting:</h5>\r\n              <ul id=\"format-list\" class=\"list-unstyled mb-3\"></ul>\r\n              <small class=\"text-secondary font-italic\" id=\"warning-rem-fmt\"></small>\r\n             \r\n            </div>\r\n               <!-- Buttons for Capture and Empty Format -->\r\n            <div class=\"d-flex justify-content-end mt-2\">\r\n              <button id=\"change-ft-btn\" class=\"btn btn-danger bg-danger-clr px-3 me-2\"><i class=\"fa fa-reply me-2\"></i>Cancel</button>\r\n              <button id=\"clear-ft-btn\" class=\"btn btn-success bg-success-clr px-3\"><i class=\"fa fa-check-circle me-2\"></i>Yes</button>\r\n\r\n            </div>\r\n\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n\r\n\r\n    document.getElementById('app-body').innerHTML = htmlBody;\r\n    displayCapturedFormatting();\r\n\r\n    if (capturedFormatting['Background Color'] === null &&\r\n      capturedFormatting['Text Color'] === '#000000') {\r\n      const warningEle = document.getElementById('warning-rem-fmt').innerHTML = 'Warning : The captured formatting is broad. This might result in unintended text removal throughout the document. Proceed?'\r\n    }\r\n\r\n    // Event listeners for the buttons\r\n    document.getElementById(\"clear-ft-btn\").addEventListener(\"click\", removeFormattedText);\r\n    document.getElementById(\"change-ft-btn\").addEventListener(\"click\", formatOptionsDisplay);\r\n\r\n  }\r\n}\r\n\r\nasync function removeFormattedText() {\r\n  try {\r\n    await Word.run(async (context) => {\r\n\r\n      const iconelement = document.getElementById(`clear-ft-btn`);\r\n      iconelement.innerHTML = `<i class=\"fa fa-spinner fa-spin text-white me-2\"></i>Yes`;\r\n      const clrBtn = document.getElementById('clear-ft-btn') as HTMLButtonElement;\r\n      clrBtn.disabled = true;\r\n\r\n      const changeBtn = document.getElementById('change-ft-btn') as HTMLButtonElement;\r\n      changeBtn.disabled = true;\r\n      const paragraphs = context.document.body.paragraphs;\r\n      paragraphs.load(\"items\"); // Load paragraphs from the body\r\n\r\n      await context.sync();\r\n\r\n      // Iterate through each paragraph in the document body\r\n      for (const paragraph of paragraphs.items) {\r\n        // Check if the paragraph contains text\r\n        if (paragraph.text.trim() !== \"\") {\r\n          const textRanges = paragraph.split([\" \"]); // Split paragraph into individual words/segments\r\n          textRanges.load(\"items, font\");\r\n\r\n          await context.sync();\r\n\r\n          for (const range of textRanges.items) {\r\n            const font = range.font;\r\n            font.load([\"bold\", \"italic\", \"underline\", \"size\", \"highlightColor\", \"name\", \"color\"]);\r\n\r\n            await context.sync();\r\n\r\n            // Check if the text range matches the captured formatting\r\n            if (\r\n              font.highlightColor === capturedFormatting['Background Color'] &&\r\n              font.color === capturedFormatting['Text Color'] &&\r\n              font.bold === capturedFormatting['Bold'] &&\r\n              font.italic === capturedFormatting['Italic'] &&\r\n              font.size === capturedFormatting['Size'] &&\r\n              font.underline === capturedFormatting['Underline'] &&\r\n              font.name === capturedFormatting['Font Name']\r\n            ) {\r\n              // Clear the range whether it's a full word or part of a word\r\n              font.highlightColor = \"#FFFFFF\"; // Set new background color\r\n              font.color = \"#000000\"; // Set new text color\r\n              font.bold = false; // Reset bold if needed\r\n              font.italic = false; // Reset italic if needed\r\n              font.underline = \"None\";\r\n              paragraph.insertText(\" \", Word.InsertLocation.replace);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      await context.sync();\r\n      capturedFormatting = {}; // Clear the captured formatting object\r\n      const formatDetails = document.getElementById(\"format-details\");\r\n      formatDetails.style.display = 'none';\r\n      // formatList.innerHTML = `<li>No formatting selected.</li>`;\r\n      emptyFormat = true;\r\n      isNoFormatTextAvailable = true;\r\n      const glossaryBtn = document.getElementById('glossary') as HTMLButtonElement;\r\n      glossaryBtn.disabled = false;\r\n      formatOptionsDisplay()\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error removing formatted text:\", error);\r\n  }\r\n}\r\n\r\n\r\nasync function fetchAIHistory(tag) {\r\n  try {\r\n    const response = await fetch(`${baseUrl}/api/report/ai-history/${tag.ID}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': `Bearer ${jwt}`\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok.');\r\n    }\r\n\r\n    const data = await response.json();\r\n    tag.ReportHeadAIHistoryList = data['Data'] || [];\r\n    tag.FilteredReportHeadAIHistoryList = [];\r\n    tag.ReportHeadAIHistoryList.forEach((historyList, i) => {\r\n      historyList.Response = removeQuotes(historyList.Response);\r\n      tag.FilteredReportHeadAIHistoryList.unshift(historyList);\r\n\r\n    });\r\n    return tag.FilteredReportHeadAIHistoryList;\r\n\r\n  } catch (error) {\r\n    console.error('Error fetching AI history:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\n\r\nasync function generateRadioButtons(tag: any, index: number): Promise<string> {\r\n  if (!tag.FilteredReportHeadAIHistoryList || tag.FilteredReportHeadAIHistoryList.length === 0) {\r\n    await fetchAIHistory(tag);\r\n  }\r\n\r\n  if (tag.FilteredReportHeadAIHistoryList.length > 0) {\r\n    // Generate the HTML\r\n    const html = tag.FilteredReportHeadAIHistoryList.map((chat: any, j: number) =>\r\n      `<div class=\"row chatbox m-0 p-0\">\r\n        <div class=\"col-md-12 mt-2 p-2\">\r\n          <span class=\"ms-3\">\r\n            <i class=\"fa fa-copy text-secondary c-pointer\" title=\"Copy Response\" id=\"copyPrompt-${index}-${j}\"></i>\r\n          </span>\r\n          <span class=\"float-end w-75 me-3\">\r\n            <div class=\"form-control h-34 d-flex align-items-center dynamic-height user\">\r\n              ${chat.Prompt}\r\n            </div>\r\n          </span>\r\n        </div>\r\n        <div class=\"col-md-12 mt-2 p-2 d-flex align-items-center\">\r\n          <span class=\"radio-select\">\r\n            <input class=\"form-check-input c-pointer\" type=\"radio\" name=\"flexRadioDefault-${index}\"\r\n              id=\"flexRadioDefault1-${index}-${j}\" ${chat.Selected === 1 ? 'checked' : ''}>\r\n          </span>\r\n          <span class=\"ms-2 w-75\">\r\n            <div class=\"form-control h-34 d-flex align-items-center dynamic-height ai-reply ${chat.Selected === 1 ? 'ai-selected-reply' : 'bg-light'}\" id='selected-response-${index}${j}'>\r\n              ${chat.Response}\r\n            </div>\r\n          </span>\r\n          <span class=\"ms-2\">\r\n            <i class=\"fa fa-copy text-secondary c-pointer\" title=\"Copy Response\" id=\"copyResponse-${index}-${j}\"></i>\r\n          </span>\r\n        </div>\r\n\r\n\r\n      </div>`\r\n    ).join('');\r\n\r\n    // Attach event listeners after the HTML is inserted\r\n    setTimeout(() => {\r\n      tag.FilteredReportHeadAIHistoryList.forEach((chat: any, j: number) => {\r\n        document.getElementById(`copyPrompt-${index}-${j}`)?.addEventListener('click', () => copyText(chat.Prompt));\r\n        document.getElementById(`copyResponse-${index}-${j}`)?.addEventListener('click', () => copyText(chat.Response));\r\n        document.getElementById(`flexRadioDefault1-${index}-${j}`)?.addEventListener('change', () => onRadioChange(tag, index, j));\r\n\r\n      });\r\n    }, 0);\r\n\r\n    return html;\r\n  } else {\r\n    return '<div>No AI history available.</div>';\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nfunction accordionContent(headerId, collapseId, tag, radioButtonsHTML, i) {\r\n  const textColorClass = tag.IsApplied ? 'text-secondary' : '';\r\n  const body = `\r\n    <div class=\"accordion-item\">\r\n      <h2 class=\"accordion-header\" id=\"${headerId}\">\r\n        <button class=\"accordion-button collapsed ${textColorClass}\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#${collapseId}\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"${collapseId}\">\r\n          <span id=\"tagname-${i}\">${tag.DisplayName}</span>\r\n        </button>\r\n      </h2>\r\n      <div id=\"${collapseId}\"\r\n           class=\"accordion-collapse collapse\"\r\n           aria-labelledby=\"${headerId}\"\r\n           data-bs-parent=\"#accordionExample\">\r\n        <div class=\"accordion-body p-0\">\r\n          <div class=\"chatbox\" id=\"selected-response-parent-${i}\">\r\n            ${radioButtonsHTML}\r\n          </div>\r\n          <div class=\"form-check form-switch chatbox m-0\">\r\n            <label class=\"form-check-label pb-3\" for=\"doNotApply-${i}\">\r\n              <span class=\"fs-12\">Do not apply</span>\r\n            </label>\r\n            <input class=\"form-check-input\"\r\n                   type=\"checkbox\"\r\n                   id=\"doNotApply-${i}\"\r\n                   ${tag.IsApplied ? 'checked' : ''}>\r\n          </div>\r\n          <div class=\"d-flex align-items-end justify-content-end chatbox p-2\">\r\n            <textarea class=\"form-control\"\r\n                      rows=\"3\"\r\n                      id=\"chatbox-${i}\"\r\n                      placeholder=\"Type here\"></textarea>\r\n                <div id=\"mention-dropdown-${i}\" class=\"dropdown-menu\"></div>\r\n            <button type=\"submit\"\r\n                    class=\"btn btn-primary bg-primary-clr ms-2 text-white\"\r\n                    id=\"sendPrompt-${i}\">\r\n              <i class=\"fa fa-paper-plane text-white\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>`;\r\n  return body;\r\n}\r\n\r\nasync function onDoNotApplyChange(event, index, tag: any) {\r\n  tag.IsApplied = event.target.checked;\r\n  const isChecked = event.target.checked;\r\n  const tagname = document.getElementById(`tagname-${index}`);\r\n  const dnaBtn = document.getElementById(`doNotApply-${index}`) as HTMLInputElement;\r\n\r\n  try {\r\n    dnaBtn.disabled = true\r\n    const response = await fetch(`${baseUrl}/api/report/head/groupkey`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${jwt}`\r\n      },\r\n      body: JSON.stringify(tag)\r\n    });\r\n\r\n    if (!response.ok) {\r\n      dnaBtn.disabled = false\r\n      throw new Error('Network response was not ok.');\r\n    }\r\n\r\n    const data = await response.json();\r\n    if (data['Data'] && data['Status'] === true) {\r\n      dnaBtn.disabled = false\r\n    }\r\n\r\n  } catch (error) {\r\n    dnaBtn.disabled = false\r\n    console.error('Error updating do not apply:', error);\r\n  }\r\n\r\n  if (tagname) {\r\n    const match = availableKeys.find(item => tag.DisplayName === item.DisplayName);\r\n    if (isChecked) {\r\n      if (match) match.IsApplied = true;\r\n      tagname.classList.add('text-secondary');\r\n    } else {\r\n      if (match) match.IsApplied = false;\r\n      tagname.classList.remove('text-secondary');\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nasync function sendPrompt(tag, prompt, index) {\r\n  if (prompt !== '' && !isTagUpdating) {\r\n    isTagUpdating = true;\r\n\r\n    const iconelement = document.getElementById(`sendPrompt-${index}`);\r\n    iconelement.innerHTML = `<i class=\"fa fa-spinner fa-spin text-white\"></i>`;\r\n\r\n    const payload = {\r\n      ReportHeadID: tag.FilteredReportHeadAIHistoryList[0].ReportHeadID,\r\n      DocumentID: dataList.NCTID,\r\n      DocumentType: dataList.DocumentType,\r\n      TextSetting: dataList.TextSetting,\r\n      DocumentTemplate: dataList.ReportTemplate,\r\n      ReportHeadGroupKeyID: tag.FilteredReportHeadAIHistoryList[0].ReportHeadGroupKeyID,\r\n      ThreadID: tag.ThreadID,\r\n      AssistantID: dataList.AssistantID,\r\n      Container: dataList.Container,\r\n      GroupName: GroupName,\r\n      Prompt: prompt,\r\n      PromptType: 1,\r\n      Response: '',\r\n      VectorID: dataList.VectorID,\r\n      Selected: 0,\r\n      ID: 0\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(`${baseUrl}/api/report/ai-history/add`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${jwt}`\r\n        },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok.');\r\n      }\r\n\r\n      const data = await response.json();\r\n      if (data['Data'] && data['Data'] !== 'false') {\r\n        tag.ReportHeadAIHistoryList = JSON.parse(JSON.stringify(data['Data']));\r\n        tag.FilteredReportHeadAIHistoryList = [];\r\n\r\n        tag.ReportHeadAIHistoryList.forEach((historyList) => {\r\n          historyList.Response = removeQuotes(historyList.Response);\r\n          tag.FilteredReportHeadAIHistoryList.unshift(historyList);\r\n        });\r\n\r\n        // Update only the inner content of the accordion body\r\n        const innerContainer = document.getElementById(`selected-response-parent-${index}`);\r\n        if (innerContainer) {\r\n          const radioButtonsHTML = await generateRadioButtons(tag, index);\r\n          innerContainer.innerHTML = radioButtonsHTML;\r\n        }\r\n\r\n        // Reapply event listeners for the new buttons and radio options\r\n        tag.FilteredReportHeadAIHistoryList.forEach((chat, j) => {\r\n          document.getElementById(`copyPrompt-${index}-${j}`)?.addEventListener('click', () => copyText(chat.Prompt));\r\n          document.getElementById(`copyResponse-${index}-${j}`)?.addEventListener('click', () => copyText(chat.Response));\r\n          document.getElementById(`flexRadioDefault1-${index}-${j}`)?.addEventListener('change', () => onRadioChange(tag, index, j));\r\n        });\r\n\r\n        iconelement.innerHTML = `<i class=\"fa fa-paper-plane text-white\"></i>`;\r\n        document.getElementById(`chatbox-${index}`).value = '';\r\n\r\n        isTagUpdating = false;\r\n      } else {\r\n        iconelement.innerHTML = `<i class=\"fa fa-paper-plane text-white\"></i>`;\r\n        isTagUpdating = false;\r\n      }\r\n    } catch (error) {\r\n      iconelement.innerHTML = `<i class=\"fa fa-paper-plane text-white\"></i>`;\r\n      isTagUpdating = false;\r\n      console.error('Error sending AI prompt:', error);\r\n    }\r\n  } else {\r\n    console.error('No empty prompt allowed');\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n// Your existing copyText function\r\nfunction copyText(text: string) {\r\n  // Copy text to clipboard logic\r\n  const tempTextArea = document.createElement('textarea');\r\n  tempTextArea.value = text;\r\n  document.body.appendChild(tempTextArea);\r\n  tempTextArea.select();\r\n  document.execCommand('copy');\r\n  document.body.removeChild(tempTextArea);\r\n\r\n}\r\n\r\n\r\nasync function logout() {\r\n  if (isGlossaryActive) {\r\n    await clearGlossary();\r\n  }\r\n  sessionStorage.clear();\r\n  window.location.hash = '#/new';\r\n  initialised = true;\r\n  document.getElementById('logo-header').innerHTML = ``;\r\n  document.getElementById('header').innerHTML = ``\r\n  login();\r\n}\r\n\r\n\r\nasync function displayAiTagList() {\r\n  if (isGlossaryActive) {\r\n    await clearGlossary()\r\n  }\r\n  const container = document.getElementById('app-body');\r\n  container.innerHTML = `\r\n  <div class=\"d-flex justify-content-between px-2\">\r\n      <button class=\"btn btn-primary btn-sm bg-primary-clr c-pointer text-white  mb-3 mt-2 px-3 py-2\" id=\"addgenaitag\">\r\n        <i class=\"fa fa-plus text-light px-1\"></i>\r\n        Add\r\n    </button>\r\n\r\n     <button class=\"btn btn-primary btn-sm bg-primary-clr c-pointer text-white mb-3 mt-2 px-3 py-2\" id=\"applyAITag\">\r\n        <i class=\"fa fa-robot text-light px-1\"></i>\r\n        Apply\r\n    </button>\r\n    </div>\r\n\r\n    <div class=\"card-container\"  id=\"card-container\">\r\n    </div>\r\n  `; // Clear any previous content\r\n  const Cardcontainer = document.getElementById('card-container');\r\n  document.getElementById('applyAITag').addEventListener('click', applyAITagFn);\r\n\r\n  document.getElementById('addgenaitag').addEventListener('click', addGenAITags);\r\n\r\n  for (let i = 0; i < aiTagList.length; i++) {\r\n    const tag = aiTagList[i];\r\n    const accordionItem = document.createElement('div');\r\n    accordionItem.classList.add('accordion');\r\n    accordionItem.id = `accordion-item-${i}`; // Replace 'yourUniqueId' with your desired ID\r\n\r\n    const headerId = `flush-headingOne-${i}`;\r\n    const collapseId = `flush-collapseOne-${i}`;\r\n\r\n    const radioButtonsHTML = await generateRadioButtons(tag, i);\r\n\r\n    accordionItem.innerHTML = accordionContent(headerId, collapseId, tag, radioButtonsHTML, i);\r\n\r\n    Cardcontainer.appendChild(accordionItem);\r\n    mentionDropdownFn(`chatbox-${i}`, `mention-dropdown-${i}`, 'edit');\r\n    document.getElementById(`doNotApply-${i}`)?.addEventListener('change', () => onDoNotApplyChange(event, i, tag));\r\n\r\n    document.getElementById(`sendPrompt-${i}`)?.addEventListener('click', () => {\r\n      const textareaValue = (document.getElementById(`chatbox-${i}`) as HTMLTextAreaElement).value;\r\n\r\n      sendPrompt(tag, textareaValue, i)\r\n    });\r\n\r\n  }\r\n\r\n  // Add event listeners after rendering\r\n  addAccordionListeners();\r\n  addCopyListeners();\r\n\r\n}\r\n\r\nfunction addAccordionListeners() {\r\n  const accordionButtons = document.querySelectorAll('.accordion-button');\r\n\r\n  accordionButtons.forEach(button => {\r\n    button.addEventListener('click', function () {\r\n      const collapseElement = this.nextElementSibling;\r\n\r\n      // Check if the element exists before accessing its classList\r\n      if (collapseElement && collapseElement.classList) {\r\n        collapseElement.classList.toggle('show');\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction addCopyListeners() {\r\n  const copyIcons = document.querySelectorAll('.fa-copy');\r\n  copyIcons.forEach(icon => {\r\n    icon.addEventListener('click', function () {\r\n      const textToCopy = this.closest('.p-2').querySelector('.form-control').textContent;\r\n    });\r\n  });\r\n}\r\n\r\nasync function applyAITagFn() {\r\n  return Word.run(async (context) => {\r\n    try {\r\n      const body = context.document.body;\r\n      context.load(body, 'text');\r\n      await context.sync();\r\n\r\n      // Iterate over the aiTagList to search and replace\r\n      for (let i = 0; i < aiTagList.length; i++) {\r\n        const tag = aiTagList[i];\r\n        // Clean up the EditorValue by removing quotes\r\n        tag.EditorValue = removeQuotes(tag.EditorValue);\r\n\r\n        // Search for all instances of the tag.DisplayName enclosed with `#`\r\n        const searchResults = body.search(`#${tag.DisplayName}#`, {\r\n          matchCase: false,\r\n          matchWholeWord: false,\r\n        });\r\n\r\n        // Load the search results to ensure they are available for further operations\r\n        context.load(searchResults, 'items');\r\n\r\n        await context.sync(); // Synchronize to fetch the search results\r\n\r\n        // Log the number of search results for debugging\r\n        console.log(`Found ${searchResults.items.length} instances of #${tag.DisplayName}#`);\r\n\r\n        // Replace each found instance with tag.EditorValue\r\n        searchResults.items.forEach((item: any) => {\r\n          // Ensure the EditorValue is not empty before replacing\r\n          if (tag.EditorValue !== \"\" && !tag.IsApplied) {\r\n            item.insertText(tag.EditorValue, Word.InsertLocation.replace);\r\n          }\r\n        });\r\n\r\n        // Additional sync after each replacement\r\n        await context.sync();\r\n      }\r\n\r\n      // Final sync to apply all changes\r\n      await context.sync();\r\n    } catch (err) {\r\n      console.error(\"Error during tag application:\", err);\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\nasync function onRadioChange(tag, tagIndex, chatIndex) {\r\n  if (!isTagUpdating) {\r\n    isTagUpdating = true;\r\n    const iconelement = document.getElementById(`sendPrompt-${tagIndex}`)\r\n    iconelement.innerHTML = `<i class=\"fa fa-spinner fa-spin text-white\"></i>`\r\n    const chat = tag.FilteredReportHeadAIHistoryList[chatIndex];\r\n    let payload = JSON.parse(JSON.stringify(chat));\r\n    payload.Container = dataList.Container;\r\n    payload.Selected = 1;\r\n    const matchingKey = availableKeys.find(prop => prop.DisplayName === tag.DisplayName);\r\n    if (matchingKey) {\r\n      matchingKey.EditorValue = payload.Response;\r\n    }\r\n    try {\r\n      const response = await fetch(`${baseUrl}/api/report/ai-history/update`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${jwt}`\r\n        },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok.');\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data['Data']) {\r\n        tag.ReportHeadAIHistoryList = JSON.parse(JSON.stringify(data['Data']));\r\n        tag.FilteredReportHeadAIHistoryList = [];\r\n\r\n        tag.ReportHeadAIHistoryList.forEach((historyList) => {\r\n          historyList.Response = removeQuotes(historyList.Response);\r\n          tag.FilteredReportHeadAIHistoryList.unshift(historyList);\r\n        });\r\n\r\n        // Use querySelectorAll to remove 'ai-selected-reply' from all elements\r\n        const selectedParent = document.getElementById(`selected-response-parent-${tagIndex}`)\r\n        const allSelectedDivs = selectedParent.querySelectorAll('.ai-selected-reply');\r\n        allSelectedDivs.forEach(div => {\r\n          div.classList.remove('ai-selected-reply');\r\n          div.classList.add('bg-light');\r\n        });\r\n\r\n        const selectElement = document.getElementById(`selected-response-${tagIndex}${chatIndex}`);\r\n        if (selectElement) {\r\n          selectElement.classList.remove('bg-light');\r\n          selectElement.classList.add('ai-selected-reply');\r\n        }\r\n\r\n\r\n        tag.UserValue = chat.Response;\r\n        tag.EditorValue = chat.Response;\r\n        tag.text = chat.Response;\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error updating AI data:', error);\r\n    } finally {\r\n      const iconelement = document.getElementById(`sendPrompt-${tagIndex}`)\r\n      iconelement.innerHTML = `<i class=\"fa fa-paper-plane text-white\"></i>`\r\n      isTagUpdating = false;\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction selectResponse(tagIndex, chatIndex) {\r\n  // Handle the response selection logic here\r\n  console.log(`Response selected for tagIndex ${tagIndex}, chatIndex ${chatIndex}`);\r\n}\r\n\r\n\r\nasync function fetchGlossary() {\r\n  if (!isTagUpdating) {\r\n\r\n    document.getElementById('app-body').innerHTML = `\r\n  <div id=\"button-container\">\r\n\r\n          <div class=\"loader\" id=\"loader\"></div>\r\n\r\n        <div id=\"highlighted-text\"></div>`\r\n\r\n    loadGlossary()\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction loadGlossary() {\r\n  document.getElementById('app-body').innerHTML = `\r\n        <div id=\"button-container\">\r\n          <button class=\"btn btn-secondary me-2 mark-glossary btn-sm\" id=\"applyglossary\">Apply Glossary</button>\r\n        </div>\r\n  `\r\n  document.getElementById('applyglossary').addEventListener('click', applyglossary);\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport async function applyglossary() {\r\n  document.getElementById('app-body').innerHTML = `\r\n  <div id=\"button-container\">\r\n\r\n          <div class=\"loader\" id=\"loader\"></div>\r\n\r\n        <div id=\"highlighted-text\"></div>`\r\n\r\n  try {\r\n    await Word.run(async (context) => {\r\n\r\n\r\n      const body = context.document.body;\r\n      body.load(\"text\");\r\n      await context.sync(); // Sync to get the text content\r\n\r\n      const bodyText = {\r\n        \"Content\": body.text.replace(/[\\n\\r]/g, ' ')\r\n      };\r\n      try {\r\n        const response = await fetch(`${baseUrl}/api/glossary-template/client-id/${dataList?.ClientID}`, {\r\n          method: 'POST', // or 'POST', depending on your API\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n\r\n            'Authorization': `Bearer ${jwt}`\r\n          },\r\n          body: JSON.stringify(bodyText)\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok.');\r\n        }\r\n\r\n\r\n        const data = await response.json();\r\n        layTerms = data.Data\r\n        if (data.Data.length > 0) {\r\n          glossaryName = data.Data[0].GlossaryTemplate\r\n          loadGlossary()\r\n        } else {\r\n          document.getElementById('app-body').innerHTML = `\r\n       <p class=\"text-center\">Data not available<p/>\r\n  `\r\n        }\r\n\r\n        // alert('Glossary data loaded successfully.');\r\n      } catch (error) {\r\n        console.error('Error fetching glossary data:', error);\r\n        // Optionally show an error message to the user\r\n        // alert('Error fetching glossary data.');\r\n      }\r\n\r\n      const searchPromises = layTerms.map(term => {\r\n        const searchResults = body.search(term.ClinicalTerm, { matchCase: true, matchWholeWord: true });\r\n        searchResults.load(\"items\");\r\n\r\n        return searchResults;\r\n      });\r\n      await context.sync();\r\n\r\n\r\n\r\n      for (const searchResults of searchPromises) {\r\n\r\n        for (const range of searchResults.items) {\r\n          const font = range.font;\r\n          font.load([\"bold\", \"italic\", \"underline\", \"size\", \"highlightColor\", \"name\", 'color']);\r\n\r\n          await context.sync();\r\n\r\n          if (\r\n            font.highlightColor !== capturedFormatting['Background Color'] ||\r\n            font.color !== capturedFormatting['Text Color'] ||\r\n            font.bold !== capturedFormatting['Bold'] ||\r\n            font.italic !== capturedFormatting['Italic'] ||\r\n            font.size !== capturedFormatting['Size'] ||\r\n            font.underline !== capturedFormatting['Underline'] ||\r\n            font.name !== capturedFormatting['Font Name']\r\n          ) {\r\n            font.highlightColor = \"yellow\";\r\n          }\r\n\r\n\r\n        }\r\n\r\n\r\n      }\r\n      // document.getElementById('glossarycheck').style.display='block';\r\n      isGlossaryActive = true;\r\n      document.getElementById('app-body').innerHTML = `\r\n      <div id=\"button-container\">\r\n        <button class=\"btn btn-secondary me-2 clear-glossary btn-sm\" id=\"clearGlossary\">Clear Glossary</button>\r\n      </div>\r\n\r\n      <div id=\"highlighted-text\"></div>\r\n      <div class=\"d-flex justify-content-center box-loader\">\r\n       <div class=\"loader\" id=\"loader\"></div></div>\r\n      \r\n`\r\n\r\n      const displayElement = document.getElementById('loader');\r\n      displayElement.style.display = 'none';\r\n\r\n\r\n\r\n\r\n\r\n      // document.getElementById('loader').style.display='none';\r\n      // document.getElementById('Clear').style.display='block';\r\n\r\n      // Set the flag when glossary is marked\r\n\r\n      await context.sync();\r\n      document.getElementById('clearGlossary').addEventListener('click', clearGlossary);\r\n      Office.context.document.addHandlerAsync(\r\n        Office.EventType.DocumentSelectionChanged,\r\n        handleSelectionChange\r\n      );\r\n\r\n\r\n    });\r\n\r\n    // Optional: Notify user of completion\r\n    console.log('Glossary applied successfully');\r\n  } catch (error) {\r\n    console.error('Error applying glossary:', error);\r\n    // Optional: Notify user of error\r\n    console.log('Error applying glossary. Please try again.');\r\n  }\r\n}\r\n\r\n\r\nasync function handleSelectionChange() {\r\n  await checkGlossary();\r\n}\r\n\r\nexport async function checkGlossary() {\r\n  try {\r\n    await Word.run(async (context) => {\r\n      const selection = context.document.getSelection();\r\n\r\n      selection.load(\"text, font.highlightColor\");\r\n\r\n      await context.sync();\r\n\r\n\r\n\r\n      if (selection.text) {\r\n        const loader = document.getElementById('loader');\r\n        if (loader) {\r\n          loader.style.display = 'block';\r\n        }\r\n        const searchPromises = layTerms.map(term => {\r\n          const searchResults = selection.search(term.ClinicalTerm, { matchCase: false, matchWholeWord: true });\r\n          searchResults.load(\"items\");\r\n          return searchResults;\r\n        });\r\n\r\n        await context.sync();\r\n        const selectedWords = []\r\n        for (const searchResults of searchPromises) {\r\n\r\n          for (const range of searchResults.items) {\r\n            const font = range.font;\r\n            font.load([\"bold\", \"italic\", \"underline\", \"size\", \"highlightColor\", \"name\", \"color\"]);\r\n\r\n            await context.sync();\r\n            if (\r\n              font.highlightColor !== capturedFormatting['Background Color'] ||\r\n              font.color !== capturedFormatting['Text Color'] ||\r\n              font.bold !== capturedFormatting['Bold'] ||\r\n              font.italic !== capturedFormatting['Italic'] ||\r\n              font.size !== capturedFormatting['Size'] ||\r\n              font.underline !== capturedFormatting['Underline'] ||\r\n              font.name !== capturedFormatting['Font Name']\r\n            ) {\r\n              selectedWords.push(range.text);\r\n            }\r\n\r\n          }\r\n        }\r\n        // searchPromises.forEach(searchResults => {\r\n        //   searchResults.items.forEach(item => {\r\n        //   });\r\n        // });\r\n        displayHighlightedText(selectedWords)\r\n\r\n        await context.sync();\r\n\r\n\r\n\r\n\r\n        // const highlightColor = selection.font.highlightColor;\r\n\r\n        // if (highlightColor === \"red\") {\r\n        //   displayHighlightedText(selection.text);\r\n        // } else {\r\n        //   console.log('Selected text is not highlighted.');\r\n        // }\r\n      } else {\r\n        console.log('No text is selected.');\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('Error displaying glossary:', error);\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction displayHighlightedText(words: string[]) {\r\n\r\n  const displayElement = document.getElementById('highlighted-text');\r\n\r\n  if (displayElement) {\r\n    displayElement.innerHTML = ''; // Clear previous content\r\n    const loader = document.getElementById('loader');\r\n    loader.style.display = 'block';\r\n    // Group lay terms by their clinical term\r\n    const groupedTerms: { [clinicalTerm: string]: string[] } = {};\r\n\r\n    words.forEach(word => {\r\n      layTerms.forEach(term => {\r\n        if (term.ClinicalTerm === word) {\r\n          if (!groupedTerms[term.ClinicalTerm]) {\r\n            groupedTerms[term.ClinicalTerm] = [];\r\n          }\r\n          if (!groupedTerms[term.ClinicalTerm].includes(term.LayTerm)) {\r\n            groupedTerms[term.ClinicalTerm].push(term.LayTerm);\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    // Create a box for each clinical term\r\n    Object.keys(groupedTerms).forEach(clinicalTerm => {\r\n      // Create the main box for the clinical term\r\n      const mainBox = document.createElement('div');\r\n      mainBox.className = 'box'; // Add box class for styling\r\n\r\n      // Create a heading for the clinical term\r\n      const heading = document.createElement('h3');\r\n      heading.textContent = `${clinicalTerm} (${glossaryName})`;\r\n      mainBox.appendChild(heading);\r\n\r\n      // Create sub-boxes for each lay term\r\n      groupedTerms[clinicalTerm].forEach(layTerm => {\r\n        const subBox = document.createElement('div');\r\n        subBox.className = 'sub-box'; // Add class for sub-box styling\r\n        subBox.textContent = layTerm;\r\n\r\n        // Add click event listener to replace ClinicalTerm with LayTerm\r\n        subBox.addEventListener('click', async () => {\r\n          await replaceClinicalTerm(clinicalTerm, layTerm);\r\n\r\n          // Remove the main box containing the clicked sub-box\r\n          mainBox.remove();\r\n        });\r\n\r\n        mainBox.appendChild(subBox);\r\n      });\r\n\r\n      displayElement.appendChild(mainBox);\r\n    });\r\n    loader.style.display = 'none';\r\n\r\n  }\r\n}\r\n\r\n\r\nasync function replaceClinicalTerm(clinicalTerm: string, layTerm: string) {\r\n  const displayElement = document.getElementById('loader');\r\n  displayElement.style.display = 'block';\r\n  try {\r\n\r\n    await Word.run(async (context) => {\r\n      // Get the current selection\r\n\r\n      const selection = context.document.getSelection();\r\n\r\n      // Load the selection's text\r\n      selection.load('text');\r\n      await context.sync();\r\n\r\n      // Check if the selected text contains the clinicalTerm\r\n      if (selection.text.includes(clinicalTerm)) {\r\n        // Search for the clinicalTerm in the document\r\n        const searchResults = selection.search(clinicalTerm, { matchCase: false, matchWholeWord: true });\r\n        searchResults.load('items');\r\n\r\n        await context.sync();\r\n\r\n        // Replace each occurrence of the clinicalTerm with the layTerm\r\n        searchResults.items.forEach(item => {\r\n          item.insertText(layTerm, 'replace');\r\n\r\n          // Remove the highlight color (set to white or no highlight)\r\n          item.font.highlightColor = 'white';\r\n        });\r\n        await context.sync();\r\n        displayElement.style.display = 'none';\r\n\r\n        console.log(`Replaced '${clinicalTerm}' with '${layTerm}' and removed highlight in the document.`);\r\n      } else {\r\n        displayElement.style.display = 'none';\r\n\r\n        console.log(`Selected text does not contain '${clinicalTerm}'.`);\r\n      }\r\n    });\r\n  } catch (error) {\r\n    displayElement.style.display = 'none';\r\n\r\n    console.error('Error replacing term:', error);\r\n  }\r\n}\r\n\r\n\r\nasync function clearGlossary() {\r\n  try {\r\n    await Word.run(async (context) => {\r\n      document.getElementById('app-body').innerHTML = `\r\n      <div id=\"button-container\">\r\n    \r\n              <div class=\"loader\" id=\"loader\"></div>\r\n    \r\n            <div id=\"highlighted-text\"></div>`\r\n      const body = context.document.body;\r\n\r\n      const searchPromises = layTerms.map(term => {\r\n        const searchResults = body.search(term.ClinicalTerm, { matchCase: false, matchWholeWord: true });\r\n        searchResults.load(\"items\");\r\n        return searchResults;\r\n      });\r\n\r\n      await context.sync();\r\n      for (const searchResults of searchPromises) {\r\n\r\n        for (const range of searchResults.items) {\r\n          const font = range.font;\r\n          font.load([\"bold\", \"italic\", \"underline\", \"size\", \"highlightColor\", \"name\", \"color\"]);\r\n\r\n          await context.sync();\r\n          if (\r\n            font.highlightColor !== capturedFormatting['Background Color'] ||\r\n            font.color !== capturedFormatting['Text Color'] ||\r\n            font.bold !== capturedFormatting['Bold'] ||\r\n            font.italic !== capturedFormatting['Italic'] ||\r\n            font.size !== capturedFormatting['Size'] ||\r\n            font.underline !== capturedFormatting['Underline'] ||\r\n            font.name !== capturedFormatting['Font Name']\r\n          ) {\r\n            font.highlightColor = \"#FFFFFF\";\r\n          }\r\n\r\n        }\r\n\r\n\r\n      }\r\n\r\n      // searchPromises.forEach(searchResults => {\r\n      //   searchResults.items.forEach(item => {\r\n      //     item.font.highlightColor = 'white'; // Reset highlight color\r\n      //   });\r\n      // });\r\n      document.getElementById('app-body').innerHTML = `\r\n      <div id=\"button-container\">\r\n        <button class=\"btn btn-secondary me-2 mark-glossary btn-sm\" id=\"applyglossary\">Apply Glossary</button>\r\n      </div>\r\n`\r\n      await context.sync();\r\n      isGlossaryActive = false\r\n      document.getElementById('applyglossary').addEventListener('click', applyglossary);\r\n\r\n\r\n    });\r\n\r\n\r\n    console.log('Glossary cleared successfully');\r\n  } catch (error) {\r\n    console.error('Error clearing glossary:', error);\r\n  }\r\n}\r\n\r\n\r\n\r\nasync function displayMentions() {\r\n  if (!isTagUpdating) {\r\n    if (isGlossaryActive) {\r\n      await clearGlossary();\r\n    }\r\n\r\n    const htmlBody = `\r\n      <div class=\"container mt-3\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            <h5 class=\"card-title\">Search Tags</h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"form-group\">\r\n              <input type=\"text\" id=\"search-box\" class=\"form-control\" placeholder=\"Search Tags...\" autocomplete=\"off\" />\r\n            </div>\r\n            <ul id=\"suggestion-list\" class=\"list-group mt-2\"></ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    document.getElementById('app-body').innerHTML = htmlBody;\r\n\r\n    const searchBox = document.getElementById('search-box');\r\n    const suggestionList = document.getElementById('suggestion-list');\r\n\r\n    // Function to filter and display suggestions\r\n    function updateSuggestions() {\r\n      const searchTerm = searchBox.value.toLowerCase();\r\n      if (searchTerm === '') {\r\n        suggestionList.innerHTML = ``;\r\n        return;\r\n      }\r\n      suggestionList.innerHTML = '';\r\n\r\n      // Filter mention list based on search term\r\n      const filteredMentions = availableKeys.filter(mention =>\r\n        mention.DisplayName.toLowerCase().includes(searchTerm)\r\n      );\r\n\r\n      // Render filtered suggestions\r\n      filteredMentions.forEach(mention => {\r\n        const listItem = document.createElement('li');\r\n        listItem.className = 'list-group-item list-group-item-action';\r\n        listItem.textContent = mention.DisplayName;\r\n        listItem.onclick = () => {\r\n          // Replace # with the selected value (adjust as needed)\r\n          replaceMention(mention, mention.ComponentKeyDataType);\r\n          suggestionList.innerHTML = ''; // Clear suggestions after selection\r\n        };\r\n        suggestionList.appendChild(listItem);\r\n      });\r\n    }\r\n\r\n    // Add input event listener to the search box\r\n    searchBox.addEventListener('input', updateSuggestions);\r\n  }\r\n}\r\n\r\nasync function addGenAITags() {\r\n  if (!isTagUpdating) {\r\n    if (isGlossaryActive) {\r\n      await clearGlossary();\r\n    }\r\n\r\n    let selectedClient = clientList.filter((item) => item.ID === clientId);\r\n\r\n    let sponsorOptions = clientList.map(client => {\r\n      const isSelectedClient = selectedClient.some(selected => selected.ID === client.ID);\r\n      return ` \r\n        <li class=\"dropdown-item p-2\" style=\"cursor: pointer;\">\r\n          <div class=\"form-check\">\r\n            <input class=\"form-check-input\" type=\"checkbox\" value=\"${client.ID}\" id=\"sponsor${client.ID}\" ${isSelectedClient ? 'checked disabled' : ''}>\r\n            <label class=\"form-check-label\" for=\"sponsor${client.ID}\">${client.Name}</label>\r\n          </div>\r\n        </li>\r\n      `;\r\n    }).join('');\r\n\r\n    const htmlBody = `\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-body p-3\">\r\n            <form id=\"genai-form\" autocomplete=\"off\" novalidate>\r\n              <!-- Name Field -->\r\n              <div class=\"mb-3\">\r\n                <label for=\"name\" class=\"form-label\"><span class=\"text-danger\">*</span> Name</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"name\" required>\r\n                <div class=\"invalid-feedback\">Name is required.</div>\r\n              </div>\r\n\r\n              <!-- Description Field -->\r\n              <div class=\"mb-3\">\r\n                <label for=\"description\" class=\"form-label\">Description</label>\r\n                <textarea class=\"form-control\" id=\"description\" rows=\"6\"></textarea>\r\n              </div>\r\n\r\n              <!-- Prompt Field -->\r\n              <div class=\"mb-3\">\r\n                <label for=\"prompt\" class=\"form-label\"><span class=\"text-danger\">*</span> Prompt \r\n                  <small class=\"text-secondary\">(Note: Use # tag for content suggestions)</small>\r\n                </label>\r\n                <textarea class=\"form-control\" id=\"prompt\" rows=\"6\"  required></textarea>\r\n                <div class=\"invalid-feedback\">Prompt is required.</div>\r\n                <div id=\"mention-dropdown\" class=\"dropdown-menu\"></div>\r\n              </div>\r\n\r\n              <!-- Save Globally Checkbox -->\r\n              <div class=\"form-check mb-3\">\r\n                <input type=\"checkbox\" class=\"form-check-input\" id=\"saveGlobally\">\r\n                <label class=\"form-check-label\" for=\"saveGlobally\">Save Globally</label>\r\n              </div>\r\n\r\n              <!-- Available to All Sponsors Checkbox -->\r\n              <div class=\"form-check mb-3\">\r\n                <input type=\"checkbox\" class=\"form-check-input\" id=\"isAvailableForAll\" disabled>\r\n                <label class=\"form-check-label\" for=\"isAvailableForAll\">Available to All Sponsors</label>\r\n              </div>\r\n\r\n              <!-- Sponsor Dropdown -->\r\n              <div class=\"mb-3\">\r\n                <label for=\"sponsor\" class=\"form-label\"><span class=\"text-danger\">*</span> Sponsor</label>\r\n                <div class=\"dropdown w-100\">\r\n                  <button \r\n                    class=\"btn btn-white border w-100 text-start d-flex justify-content-between align-items-center dropdown-toggle\" \r\n                    type=\"button\" \r\n                    id=\"sponsorDropdown\" \r\n                    data-bs-toggle=\"dropdown\" \r\n                    aria-expanded=\"false\" \r\n                    disabled>\r\n                    <span id=\"sponsorDropdownLabel\">Select Sponsors</span>\r\n                    <span class=\"dropdown-toggle-icon\"></span>\r\n                  </button>\r\n                  <ul class=\"dropdown-menu w-100 p-2\" aria-labelledby=\"sponsorDropdown\" style=\"box-shadow: 0 4px 8px rgba(0,0,0,0.1);\">\r\n                    <li class=\"dropdown-item p-2\" style=\"cursor: pointer;\">\r\n                      <div class=\"form-check\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" value=\"selectAll\" id=\"selectAll\">\r\n                        <label class=\"form-check-label\" for=\"selectAll\">Select All</label>\r\n                      </div>\r\n                    </li>\r\n                    ${sponsorOptions}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n          <div id=\"submition-error\" class=\"mt-3 text-danger\" style=\"display: none;\"></div>\r\n\r\n              <!-- Action Buttons -->\r\n              <div class=\"text-end mt-3\">\r\n                <button id=\"cancel-btn-gen-ai\" class=\"btn btn-danger bg-danger-clr px-3 me-2\"><i class=\"fa fa-reply me-2\"></i>Cancel</button>\r\n                <button type=\"submit\" class=\"btn btn-success bg-success-clr\" id=\"text-gen-save\"><i class=\"fa fa-check-circle me-2\"></i>Save</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>`;\r\n\r\n    // Add modal HTML to the DOM\r\n    document.getElementById('app-body').innerHTML = htmlBody;\r\n    //prompt starting\r\n    mentionDropdownFn('prompt', 'mention-dropdown', 'add');\r\n    //prompt end\r\n    const form = document.getElementById('genai-form');\r\n    const promptField = document.getElementById('prompt');\r\n\r\n    const nameField = document.getElementById('name');\r\n    const descriptionField = document.getElementById('description');\r\n    const saveGloballyCheckbox = document.getElementById('saveGlobally');\r\n    const availableForAllCheckbox = document.getElementById('isAvailableForAll');\r\n    const sponsorDropdownButton = document.getElementById('sponsorDropdown');\r\n    const sponsorDropdownItems = document.querySelectorAll('.dropdown-item .form-check-input');\r\n\r\n    document.getElementById('cancel-btn-gen-ai').addEventListener('click', displayAiTagList);\r\n\r\n    // Check if elements exist\r\n    if (form && nameField && promptField && sponsorDropdownItems.length > 0) {\r\n      const updateDropdownLabel = () => {\r\n        if (availableForAllCheckbox.checked) {\r\n          sponsorDropdownButton.textContent = clientList.map(client => client.Name).join(\", \");\r\n        } else {\r\n          const selectedOptions = Array.from(sponsorDropdownItems)\r\n            .filter(cb => cb.checked && cb.id !== 'selectAll')\r\n            .map(cb => cb.parentElement.textContent.trim());\r\n          sponsorDropdownButton.textContent = selectedOptions.length ? selectedOptions.join(\", \") : \"Select Sponsors\";\r\n        }\r\n      };\r\n      // Form validation logic on submit\r\n      form.addEventListener('submit', function (e) {\r\n        e.preventDefault();\r\n\r\n        // Reset previous validation errors\r\n        form.querySelectorAll('.is-invalid').forEach(input => input.classList.remove('is-invalid'));\r\n\r\n        let valid = true;\r\n\r\n        if (!(nameField as HTMLInputElement).value.trim()) {\r\n          nameField.classList.add('is-invalid');\r\n          valid = false;\r\n        }\r\n\r\n        if (!(promptField as HTMLInputElement).value.trim()) {\r\n          promptField.classList.add('is-invalid');\r\n          valid = false;\r\n        }\r\n\r\n        if (valid) {\r\n          // Prepare object to pass to createTextGenTag\r\n          const selectedSponsors = Array.from(sponsorDropdownItems)\r\n            .filter(cb => cb.checked && cb.id !== 'selectAll')\r\n            .map(cb => {\r\n              const client = clientList.find(client => client.ID == cb.value);\r\n              return client; // Collect the entire client object\r\n            });\r\n\r\n          const isAvailableForAll = availableForAllCheckbox.checked;\r\n          const isSaveGlobally = saveGloballyCheckbox.checked;\r\n\r\n          const formData = {\r\n            DisplayName: nameField.value.trim(),\r\n            Prompt: promptField.value.trim(),\r\n            Description: descriptionField.value.trim(),\r\n            GroupKeyClient: selectedSponsors, // Array of selected sponsor objects\r\n            AllClient: isAvailableForAll ? 1 : 0,\r\n            SaveGlobally: isSaveGlobally,\r\n            UserDefined: '1',\r\n            ComponentKeyDataTypeID: '1',\r\n            ComponentKeyDataAccessID: '3',\r\n            AIFlag: 1,\r\n            DocumentTypeID: dataList.DocumentTypeID,\r\n            ReportHeadID: dataList.ID,\r\n            SourceTypeID: aiTagList[0].SourceTypeID,\r\n            ReportHeadGroupID: aiTagList[0].ReportHeadGroupID,\r\n            ReportHeadSourceID: aiTagList[0].ReportHeadSourceID\r\n          };\r\n\r\n          createTextGenTag(formData);\r\n        }\r\n      });\r\n\r\n\r\n      const checkAndDisableSponsors = () => {\r\n        sponsorDropdownItems.forEach(checkbox => {\r\n          if (!checkbox.disabled) {\r\n            checkbox.checked = true;\r\n            checkbox.disabled = true;\r\n          }\r\n        });\r\n        updateDropdownLabel();\r\n      };\r\n\r\n      // Function to enable sponsors without unchecking them\r\n      const enableSponsors = () => {\r\n        sponsorDropdownItems.forEach(checkbox => {\r\n          const isSelectedClient = selectedClient.some(selected => selected.ID === parseInt(checkbox.value));\r\n          if (!isSelectedClient) {\r\n            checkbox.disabled = false;\r\n          }\r\n        });\r\n        updateDropdownLabel();\r\n      };\r\n\r\n      // Event listener for \"Save Globally\" checkbox\r\n\r\n\r\n      // Event listener for \"Available to All Sponsors\" checkbox\r\n\r\n      saveGloballyCheckbox.addEventListener('change', function () {\r\n        if (this.checked) {\r\n          availableForAllCheckbox.disabled = false;\r\n          sponsorDropdownButton.disabled = false;\r\n        } else {\r\n          enableSponsors();\r\n          availableForAllCheckbox.checked = false;\r\n          availableForAllCheckbox.disabled = true;\r\n          sponsorDropdownButton.disabled = true;\r\n          sponsorDropdownItems.forEach(checkbox => {\r\n            if (!checkbox.disabled) {\r\n              checkbox.checked = false;\r\n              checkbox.disabled = false;\r\n            }\r\n          });\r\n          updateDropdownLabel();\r\n        }\r\n      });\r\n\r\n      // Event listener for \"Available to All Sponsors\" checkbox\r\n      availableForAllCheckbox.addEventListener('change', function () {\r\n        if (this.checked) {\r\n          checkAndDisableSponsors();\r\n        } else {\r\n          enableSponsors();\r\n        }\r\n      });\r\n\r\n      // Add event listener to prevent dropdown close on item selection\r\n      document.querySelectorAll('.dropdown-item').forEach(item => {\r\n        item.addEventListener('click', function (event) {\r\n          event.stopPropagation(); // Prevent dropdown from closing\r\n          const checkbox = this.querySelector('.form-check-input');\r\n          if (checkbox) {\r\n            if (!checkbox.disabled) {\r\n              checkbox.checked = !checkbox.checked;\r\n            }\r\n\r\n            if (checkbox.id === 'selectAll') {\r\n              const isChecked = checkbox.checked;\r\n              sponsorDropdownItems.forEach(cb => {\r\n                if (!cb.disabled) cb.checked = isChecked;\r\n              });\r\n            }\r\n            updateDropdownLabel();\r\n          }\r\n        });\r\n      });\r\n\r\n      // Initial label update\r\n      updateDropdownLabel();\r\n\r\n\r\n      // Clear validation errors when user types\r\n      [nameField, promptField].forEach(field => {\r\n        field.addEventListener('input', function () {\r\n          if (this.classList.contains('is-invalid') && this.value.trim()) {\r\n            this.classList.remove('is-invalid');\r\n          }\r\n          if(nameField){\r\n            const errorDiv = document.getElementById('submition-error');\r\n            errorDiv.style.display = 'none';\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      console.error('Required elements are missing or not rendered yet.');\r\n    }\r\n  }\r\n}\r\n\r\n\r\nasync function createTextGenTag(payload) {\r\n  try {\r\n    const iconelement = document.getElementById(`text-gen-save`);\r\n    const aiTagBtn = document.getElementById('aitag');\r\n    const mentionBtn = document.getElementById('mention');\r\n    const formatDropdownBtn = document.getElementById('formatDropdown');\r\n    const cancelBtnGenAi = document.getElementById('cancel-btn-gen-ai');\r\n\r\n    aiTagBtn.disabled = true;\r\n    cancelBtnGenAi.disabled = true;\r\n    mentionBtn.disabled = true;\r\n    formatDropdownBtn.disabled = true;\r\n    iconelement.innerHTML = `<i class=\"fa fa-spinner fa-spin text-white me-2\"></i>Save`;\r\n\r\n    const response = await fetch(`${baseUrl}/api/report/group-key/add`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${jwt}`\r\n      },\r\n      body: JSON.stringify(payload)\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok.');\r\n    }\r\n\r\n    const data = await response.json();\r\n    if (data['Data'] && data['Status']) {\r\n      fetchDocument('AIpanel');\r\n    }else{\r\n      aiTagBtn.disabled = false;\r\n      cancelBtnGenAi.disabled = false;\r\n      mentionBtn.disabled = false;\r\n      formatDropdownBtn.disabled = false;\r\n      iconelement.innerHTML = `<i class=\"fa fa-check-circle me-2\"></i>Save`;\r\n      showAddTagError(data['Data'])\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('Error creating text generation tag:', error);\r\n  }\r\n}\r\n\r\n\r\nfunction mentionDropdownFn(textareaId, DropdownId, action) {\r\n  const filterMentions = (query) => {\r\n    // Assuming availableKeys is an array of objects with DisplayName and EditorValue properties\r\n    const filtered = availableKeys.filter(item =>\r\n      item.DisplayName.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n    return filtered;\r\n  };\r\n  let highlightedIndex = -1;\r\n\r\n  const promptField = document.getElementById(`${textareaId}`);\r\n  const mentionDropdown = document.getElementById(`${DropdownId}`);\r\n  if (promptField) {\r\n\r\n    // Handle input events on prompt field for mentions\r\n    promptField.addEventListener('input', (e) => {\r\n      const cursorPosition = promptField.selectionStart;\r\n      const textBeforeCursor = promptField.value.slice(0, cursorPosition);\r\n      const lastHashtag = textBeforeCursor.lastIndexOf('#');\r\n\r\n      if (lastHashtag !== -1) {\r\n        const query = textBeforeCursor.slice(lastHashtag + 1).trim();\r\n        if (query.length > 0) {\r\n          const mentions = filterMentions(query);\r\n\r\n          if (mentions.length > 0) {\r\n            mentionDropdown.innerHTML = mentions.map(item => {\r\n              let editorValue = '';\r\n              if (action === 'add') {\r\n                editorValue = `#${item.DisplayName}`;\r\n              } else {\r\n                editorValue = item.EditorValue || `#${item.DisplayName}`;\r\n              }\r\n\r\n              return `<li class=\"dropdown-item\" data-editor-value=\"${editorValue}\">${item.DisplayName}</li>`;\r\n            }).join('');\r\n\r\n            // Get the position of the textarea and place the dropdown above it\r\n            const textareaRect = promptField.getBoundingClientRect();\r\n            mentionDropdown.style.left = `${textareaRect.left}px`;\r\n            mentionDropdown.style.bottom = `75px`; // Position above the textarea\r\n            mentionDropdown.style.display = 'block';\r\n          } else {\r\n            mentionDropdown.style.display = 'none';\r\n          }\r\n        } else {\r\n          mentionDropdown.style.display = 'none';\r\n        }\r\n      } else {\r\n        mentionDropdown.style.display = 'none';\r\n      }\r\n\r\n    });\r\n\r\n    // Handle keyboard navigation in the dropdown\r\n    promptField.addEventListener('keydown', (e) => {\r\n      const items = document.querySelectorAll(`#${DropdownId} .dropdown-item`);\r\n      const totalItems = items.length;\r\n\r\n      if (e.key === 'ArrowDown') {\r\n        // Prevent default behavior to stop cursor from moving\r\n        e.preventDefault();\r\n\r\n        // Move the highlight down and wrap around to the top if at the end\r\n        if (highlightedIndex < totalItems - 1) {\r\n          highlightedIndex++;\r\n        } else {\r\n          highlightedIndex = 0; // Wrap to the first item\r\n        }\r\n        updateHighlightedItem(`${DropdownId}`);\r\n      } else if (e.key === 'ArrowUp') {\r\n        // Prevent default behavior to stop cursor from moving\r\n        e.preventDefault();\r\n\r\n        // Move the highlight up and wrap around to the bottom if at the top\r\n        if (highlightedIndex > 0) {\r\n          highlightedIndex--;\r\n        } else {\r\n          highlightedIndex = totalItems - 1; // Wrap to the last item\r\n        }\r\n        updateHighlightedItem(`${DropdownId}`);\r\n      } else if (e.key === 'Enter' && highlightedIndex !== -1) {\r\n        // Select the highlighted item\r\n        const selectedItem = items[highlightedIndex];\r\n        if (selectedItem) {\r\n          selectMention(selectedItem.getAttribute('data-editor-value'));\r\n          mentionDropdown.style.display = 'none';  // Hide the dropdown after selection\r\n          e.preventDefault();  // Prevent form submission on Enter key\r\n        }\r\n      }\r\n    });\r\n\r\n    // Function to highlight the selected item\r\n    function updateHighlightedItem(id) {\r\n      const items = document.querySelectorAll(`#${id} .dropdown-item`);\r\n      const dropdown = document.getElementById(`${id}`);\r\n      const totalItems = items.length;\r\n\r\n      // Remove the 'active' class from all items\r\n      items.forEach(item => item.classList.remove('active'));\r\n\r\n      // Add the 'active' class to the currently highlighted item\r\n      if (highlightedIndex >= 0 && highlightedIndex < totalItems) {\r\n        const highlightedItem = items[highlightedIndex];\r\n        highlightedItem.classList.add('active');\r\n\r\n        // Ensure the highlighted item is visible within the dropdown\r\n        highlightedItem.scrollIntoView({\r\n          behavior: 'smooth',    // Smooth scroll\r\n          block: 'nearest'      // Scroll only if necessary\r\n        });\r\n      }\r\n    }\r\n\r\n\r\n\r\n    // Handle selecting an item from the dropdown via mouse click\r\n    mentionDropdown.addEventListener('click', (e) => {\r\n      if (e.target && e.target.matches('li')) {\r\n        const editorValue = e.target.getAttribute('data-editor-value');\r\n        selectMention(editorValue);\r\n        mentionDropdown.style.display = 'none';  // Hide the dropdown after selection\r\n      }\r\n    });\r\n\r\n    // Function to insert the selected mention into the prompt field\r\n    const selectMention = (editorValue) => {\r\n      const textarea = document.getElementById(`${textareaId}`);\r\n      const currentValue = textarea.value;\r\n      const cursorPosition = textarea.selectionStart;\r\n\r\n      const textBefore = currentValue.slice(0, cursorPosition);\r\n      const textAfter = currentValue.slice(cursorPosition);\r\n\r\n      const lastHashPosition = textBefore.lastIndexOf('#');\r\n      const updatedTextBefore = textBefore.slice(0, lastHashPosition); // Removing '#' symbol\r\n\r\n      textarea.value = `${updatedTextBefore}${editorValue}${textAfter}`;\r\n      const newCursorPosition = updatedTextBefore.length + editorValue.length;\r\n      textarea.setSelectionRange(newCursorPosition, newCursorPosition);\r\n    };\r\n\r\n    // Hide the dropdown if clicked outside\r\n    document.addEventListener('click', (e) => {\r\n      if (!mentionDropdown.contains(e.target) && e.target !== promptField) {\r\n        mentionDropdown.style.display = 'none';\r\n      }\r\n    });\r\n  }\r\n}\r\nexport async function replaceMention(word: any, type: any) {\r\n  return Word.run(async (context) => {\r\n    try {\r\n      const selection = context.document.getSelection();\r\n      await context.sync();\r\n\r\n      if (!selection) {\r\n        throw new Error('Selection is invalid or not found.');\r\n      }\r\n\r\n      if (type === 'TABLE') {\r\n        const parser = new DOMParser();\r\n        const doc = parser.parseFromString(word.EditorValue, 'text/html');\r\n        const tableElement = doc.querySelector('table');\r\n\r\n        if (!tableElement) {\r\n          selection.insertParagraph(`#${word.DisplayName}#`, Word.InsertLocation.before);\r\n          throw new Error('No table found in the provided HTML.');\r\n        }\r\n\r\n        const rows = Array.from(tableElement.querySelectorAll('tr'));\r\n\r\n        if (rows.length === 0) {\r\n          throw new Error('The table does not contain any rows.');\r\n        }\r\n\r\n        const maxCols = Math.max(...rows.map(row => {\r\n          return Array.from(row.querySelectorAll('td, th')).reduce((sum, cell) => {\r\n            return sum + (parseInt(cell.getAttribute('colspan') || '1', 10));\r\n          }, 0);\r\n        }));\r\n\r\n        const paragraph = selection.insertParagraph(\"\", Word.InsertLocation.before);\r\n        await context.sync();\r\n\r\n        if (!paragraph) {\r\n          throw new Error('Failed to insert the paragraph.');\r\n        }\r\n\r\n        const table = paragraph.insertTable(rows.length, maxCols, Word.InsertLocation.after);\r\n        await context.sync();\r\n\r\n        if (!table) {\r\n          throw new Error('Failed to insert the table.');\r\n        }\r\n\r\n        const rowspanTracker: number[] = new Array(maxCols).fill(0);\r\n\r\n        rows.forEach((row, rowIndex) => {\r\n          const cells = Array.from(row.querySelectorAll('td, th'));\r\n          let cellIndex = 0;\r\n\r\n          cells.forEach((cell) => {\r\n            while (rowspanTracker[cellIndex] > 0) {\r\n              rowspanTracker[cellIndex]--;\r\n              cellIndex++;\r\n            }\r\n\r\n            const cellText = Array.from(cell.childNodes)\r\n              .map(node => {\r\n                if (node.nodeType === Node.TEXT_NODE) {\r\n                  return node.textContent?.trim() || '';\r\n                } else if (node.nodeType === Node.ELEMENT_NODE) {\r\n                  return (node as HTMLElement).innerText.trim();\r\n                }\r\n                return '';\r\n              })\r\n              .filter(text => text.length > 0)\r\n              .join(' ');\r\n\r\n            const colspan = parseInt(cell.getAttribute('colspan') || '1', 10);\r\n            const rowspan = parseInt(cell.getAttribute('rowspan') || '1', 10);\r\n\r\n            // Ensure cellIndex is within bounds\r\n            if (cellIndex >= maxCols) {\r\n              // Adjust cellIndex to fit within table dimensions\r\n              cellIndex = maxCols - 1;\r\n            }\r\n\r\n            // Set cell value\r\n            try {\r\n              table.getCell(rowIndex, cellIndex).value = cellText;\r\n\r\n              // Clear cells that span columns\r\n              for (let i = 1; i < colspan; i++) {\r\n                if (cellIndex + i < maxCols) {\r\n                  table.getCell(rowIndex, cellIndex + i).value = \"\";\r\n                }\r\n              }\r\n\r\n              // Update rowspanTracker\r\n              if (rowspan > 1) {\r\n                for (let i = 0; i < colspan; i++) {\r\n                  if (cellIndex + i < maxCols) {\r\n                    rowspanTracker[cellIndex + i] = rowspan - 1;\r\n                  }\r\n                }\r\n              }\r\n\r\n              // Advance cellIndex by colspan\r\n              cellIndex += colspan;\r\n              if (cellIndex >= maxCols) {\r\n                // Adjust cellIndex if it exceeds the table width\r\n                cellIndex = maxCols - 1;\r\n              }\r\n            } catch (cellError) {\r\n              console.error('Error setting cell value:', cellError);\r\n            }\r\n          });\r\n        });\r\n      } else {\r\n        if (word.EditorValue === '' || word.IsApplied) {\r\n          selection.insertParagraph(`#${word.DisplayName}#`, Word.InsertLocation.before);\r\n        } else {\r\n          let content = removeQuotes(word.EditorValue);\r\n          let lines = content.split(/\\r?\\n/); // Handle both \\r\\n and \\n\r\n\r\n          lines.forEach(line => {\r\n            selection.insertParagraph(line, Word.InsertLocation.before);\r\n          });\r\n        }\r\n      }\r\n\r\n      await context.sync();\r\n    } catch (error) {\r\n      console.error('Detailed error:', error);\r\n    }\r\n  });\r\n}\r\n\r\n\r\nfunction removeQuotes(value: string): string {\r\n  return value\r\n    ? value\r\n      .replace(/^\"|\"$/g, '')\r\n      .replace(/\\\\n/g, '')\r\n      .replace(/\\*\\*/g, '')\r\n      .replace(/\\\\r/g, '')\r\n    : '';\r\n}\r\n\r\nfunction showAddTagError(message) {\r\n  const errorDiv = document.getElementById('submition-error');\r\n  errorDiv.style.display = 'block';\r\n  errorDiv.textContent = message;\r\n}\r\n","const dataUrl='https://plsdevapp.azurewebsites.net'\r\nconst storeUrl='https://linkwordplugin-aphgcwcgbfdqeccs.eastus-01.azurewebsites.net'\r\nexport {dataUrl,storeUrl};"],"names":["___HTML_LOADER_IMPORT_0___","module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","b","baseURI","self","href","jwt","baseUrl","storedUrl","documentID","organizationName","aiTagList","initialised","availableKeys","glossaryName","isGlossaryActive","GroupName","layTerms","dataList","isTagUpdating","capturedFormatting","emptyFormat","isNoFormatTextAvailable","clientId","userId","clientList","async","login","sessionToken","sessionStorage","getItem","console","log","loadLoginPage","getElementById","innerHTML","addEventListener","handleLogin","event","preventDefault","organization","value","username","password","toLowerCase","trim","toLocaleLowerCase","response","fetch","method","headers","body","JSON","stringify","ClientName","Username","Password","ok","showLoginError","data","json","Status","ResponseStatus","Data","Token","setItem","ID","error","message","errorDiv","style","display","textContent","fetchDocument","action","setActiveButton","clearGlossary","htmlBody","searchBox","suggestionList","updateSuggestions","searchTerm","filter","mention","DisplayName","includes","forEach","listItem","createElement","className","onclick","word","type","Word","run","selection","context","getSelection","sync","tableElement","DOMParser","parseFromString","EditorValue","querySelector","insertParagraph","InsertLocation","before","rows","Array","from","querySelectorAll","maxCols","Math","max","map","row","reduce","sum","cell","parseInt","getAttribute","paragraph","table","insertTable","after","rowspanTracker","fill","rowIndex","cells","cellIndex","cellText","childNodes","node","nodeType","Node","TEXT_NODE","ELEMENT_NODE","innerText","text","join","colspan","rowspan","getCell","cellError","IsApplied","removeQuotes","split","line","replaceMention","ComponentKeyDataType","appendChild","displayMentions","loadGlossary","fetchGlossary","displayAiTagList","formatOptionsDisplay","displayCapturedFormatting","removeFormattedText","removeOptionsConfirmation","logout","ClientID","aiGroup","Group","find","element","Name","GroupKey","GroupKeyAll","fetchClients","buttonId","id","button","classList","add","remove","keys","disabled","clearCapturedFormatting","Bold","Underline","Size","captureFormatting","emptyFormatCheckbox","checked","formatList","entries","font","load","bold","Italic","italic","underline","size","highlightColor","name","color","paragraphs","items","textRanges","range","insertText","generateRadioButtons","tag","index","FilteredReportHeadAIHistoryList","ReportHeadAIHistoryList","historyList","Response","unshift","fetchAIHistory","html","chat","j","Prompt","Selected","setTimeout","copyText","onRadioChange","accordionContent","headerId","collapseId","radioButtonsHTML","onDoNotApplyChange","target","isChecked","tagname","dnaBtn","match","item","sendPrompt","prompt","iconelement","payload","ReportHeadID","DocumentID","NCTID","DocumentType","TextSetting","DocumentTemplate","ReportTemplate","ReportHeadGroupKeyID","ThreadID","AssistantID","Container","PromptType","VectorID","parse","innerContainer","tempTextArea","select","execCommand","removeChild","clear","Cardcontainer","applyAITagFn","addGenAITags","accordionItem","mentionDropdownFn","textareaValue","collapseElement","nextElementSibling","toggle","icon","closest","searchResults","search","matchCase","matchWholeWord","err","tagIndex","chatIndex","matchingKey","div","selectElement","UserValue","applyglossary","bodyText","GlossaryTemplate","searchPromises","term","ClinicalTerm","Office","addHandlerAsync","EventType","DocumentSelectionChanged","handleSelectionChange","loader","selectedWords","push","words","displayElement","groupedTerms","LayTerm","clinicalTerm","mainBox","heading","layTerm","subBox","replaceClinicalTerm","displayHighlightedText","checkGlossary","selectedClient","client","isSelectedClient","some","selected","form","promptField","nameField","descriptionField","saveGloballyCheckbox","availableForAllCheckbox","sponsorDropdownButton","sponsorDropdownItems","updateDropdownLabel","selectedOptions","cb","parentElement","input","valid","selectedSponsors","isAvailableForAll","isSaveGlobally","aiTagBtn","mentionBtn","formatDropdownBtn","cancelBtnGenAi","showAddTagError","createTextGenTag","Description","GroupKeyClient","AllClient","SaveGlobally","UserDefined","ComponentKeyDataTypeID","ComponentKeyDataAccessID","AIFlag","DocumentTypeID","SourceTypeID","ReportHeadGroupID","ReportHeadSourceID","checkAndDisableSponsors","checkbox","enableSponsors","stopPropagation","field","contains","textareaId","DropdownId","highlightedIndex","mentionDropdown","updateHighlightedItem","totalItems","highlightedItem","scrollIntoView","behavior","block","cursorPosition","selectionStart","textBeforeCursor","slice","lastHashtag","lastIndexOf","query","mentions","filterMentions","editorValue","textareaRect","getBoundingClientRect","left","bottom","selectedItem","selectMention","matches","textarea","currentValue","textBefore","textAfter","lastHashPosition","updatedTextBefore","newCursorPosition","setSelectionRange","Number","onReady","info","host","HostType","properties","customProperties","property","orgName","retrieveDocumentProperties","URL"],"sourceRoot":""}