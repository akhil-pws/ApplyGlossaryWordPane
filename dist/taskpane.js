!function(){"use strict";var e,t,n,o={14385:function(e){e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),t.hash&&(e+=t.hash),t.maybeNeedQuotes&&/[\t\n\f\r "'=<>`]/.test(e)?'"'.concat(e,'"'):e):e}},58394:function(e,t,n){e.exports=n.p+"5eb4ba81821ef0cce960.css"}},a={};function i(e){var t=a[e];if(void 0!==t)return t.exports;var n=a[e]={exports:{}};return o[e](n,n.exports,i),n.exports}i.m=o,i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,{a:t}),t},i.d=function(e,t){for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},function(){var e;i.g.importScripts&&(e=i.g.location+"");var t=i.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");if(n.length)for(var o=n.length-1;o>-1&&(!e||!/^http(s?):/.test(e));)e=n[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),i.p=e}(),i.b=document.baseURI||self.location.href,function(){let e,t="",n="https://plsdevapp.azurewebsites.net",o="https://linkwordplugin-aphgcwcgbfdqeccs.eastus-01.azurewebsites.net",a="",i="",s=[],r=!0,l=[],c="",d=!1,m="",p=[],u=[],y=!1,f={},g=!1,h=!1,b="0",v=0,E=[],w=(new Date).getFullYear();async function x(){const e=sessionStorage.getItem("token");console.log(e),e?(t=e,window.location.hash="#/dashboard"):I()}function I(){document.getElementById("app-body").innerHTML='\n    <div class="container mt-5">\n      <form id="login-form" class="p-4 border rounded">\n        <div class="mb-3">\n          <label for="organization" class="form-label fw-bold">Organization</label>\n          <input type="text" class="form-control" id="organization" required>\n        </div>\n        <div class="mb-3">\n          <label for="username" class="form-label fw-bold">Username</label>\n          <input type="text" class="form-control" id="username" required>\n        </div>\n        <div class="mb-3">\n          <label for="password" class="form-label fw-bold">Password</label>\n          <input type="password" class="form-control" id="password" required>\n        </div>\n        <div class="d-grid">\n          <button type="submit" class="btn btn-primary bg-primary-clr">Login</button>\n        </div>\n      <div id="login-error" class="mt-3 text-danger" style="display: none;"></div>\n\n      </form>\n    </div>\n  ',document.getElementById("login-form").addEventListener("submit",k)}async function k(e){e.preventDefault();const o=document.getElementById("organization").value,a=document.getElementById("username").value,s=document.getElementById("password").value;if(o.toLowerCase().trim()===i.toLocaleLowerCase().trim()){document.getElementById("app-body").innerHTML='\n  <div id="button-container">\n\n          <div class="loader" id="loader"></div>\n          </div\n';try{const e=await fetch(`${n}/api/user/login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({ClientName:o,Username:a,Password:s})});if(!e.ok)throw $("An error occurred during login. Please try again."),new Error("Network response was not ok.");const i=await e.json();!0===i.Status&&i.Data&&i.Data.ResponseStatus?(t=i.Data.Token,sessionStorage.setItem("token",t),sessionStorage.setItem("userId",i.Data.ID),window.location.hash="#/dashboard"):$("An error occurred during login. Please try again.")}catch(e){$("An error occurred during login. Please try again."),console.error("Error during login:",e)}}else $("The organization specified is not associated with this document")}function $(e){I();const t=document.getElementById("login-error");t.style.display="block",t.textContent=e}async function L(i){try{const r=await fetch(`${n}/api/report/id/${a}`,{method:"GET",headers:{Authorization:`Bearer ${t}`}});if(!r.ok)throw new Error("Network response was not ok.");const c=await r.json();document.getElementById("app-body").innerHTML="",document.getElementById("logo-header").innerHTML=`\n        <img  id="main-logo" src="${o}/assets/logo.png" alt="" class="logo"> <i class="fa fa-sign-out me-5 c-pointer ngb-tooltip" aria-hidden="true" id="logout"><span class="tooltiptext">Logout</span></i>\n`,document.getElementById("header").innerHTML='\n    <div class="d-flex justify-content-around">\n        <button class="btn btn-dark" id="mention">Insert</button>\n        <button class="btn btn-dark" id="aitag">Refine</button>\n\n        \x3c!-- Dropdown for Formatting --\x3e\n        <div class="dropdown">\n            <button class="btn btn-dark dropdown-toggle" type="button" id="formatDropdown" data-bs-toggle="dropdown" aria-expanded="false">\n                Actions\n            </button>\n            <ul class="dropdown-menu" aria-labelledby="formatDropdown" style="z-index: 100000;">\n                <li><button class="dropdown-item" id="selectFormat">Define Formatting</button></li>\n                <li><button class="dropdown-item" id="glossary" disabled>Glossary</button></li>\n                <li><button class="dropdown-item" id="removeFormatting" disabled>Remove Formatted Text</button></li>\n            </ul>\n        </div>\n    </div>\n',document.getElementById("mention").addEventListener("click",(()=>{B("mention"),async function(){if(!y){d&&await U();const e='\n      <div class="container mt-3">\n        <div class="card">\n          <div class="card-header">\n            <h5 class="card-title">Search Tags</h5>\n          </div>\n          <div class="card-body">\n            <div class="form-group">\n              <input type="text" id="search-box" class="form-control" placeholder="Search Tags..." autocomplete="off" />\n            </div>\n            <ul id="suggestion-list" class="list-group mt-2"></ul>\n          </div>\n        </div>\n      </div>\n    ';document.getElementById("app-body").innerHTML=e;const t=document.getElementById("search-box"),n=document.getElementById("suggestion-list");function o(){const e=t.value.toLowerCase();""!==e?(n.innerHTML="",l.filter((t=>t.DisplayName.toLowerCase().includes(e))).forEach((e=>{const t=document.createElement("li");t.className="list-group-item list-group-item-action",t.textContent=e.DisplayName,t.onclick=()=>{!async function(e,t){Word.run((async n=>{try{const o=n.document.getSelection();if(await n.sync(),!o)throw new Error("Selection is invalid or not found.");if("TABLE"===t){const t=(new DOMParser).parseFromString(e.EditorValue,"text/html").querySelector("table");if(!t)throw o.insertParagraph(`#${e.DisplayName}#`,Word.InsertLocation.before),new Error("No table found in the provided HTML.");const a=Array.from(t.querySelectorAll("tr"));if(0===a.length)throw new Error("The table does not contain any rows.");const i=Math.max(...a.map((e=>Array.from(e.querySelectorAll("td, th")).reduce(((e,t)=>e+parseInt(t.getAttribute("colspan")||"1",10)),0)))),s=o.insertParagraph("",Word.InsertLocation.before);if(await n.sync(),!s)throw new Error("Failed to insert the paragraph.");const r=s.insertTable(a.length,i,Word.InsertLocation.after);if(await n.sync(),!r)throw new Error("Failed to insert the table.");const l=new Array(i).fill(0);a.forEach(((e,t)=>{const n=Array.from(e.querySelectorAll("td, th"));let o=0;n.forEach((e=>{for(;l[o]>0;)l[o]--,o++;const n=Array.from(e.childNodes).map((e=>e.nodeType===Node.TEXT_NODE?e.textContent?.trim()||"":e.nodeType===Node.ELEMENT_NODE?e.innerText.trim():"")).filter((e=>e.length>0)).join(" "),a=parseInt(e.getAttribute("colspan")||"1",10),s=parseInt(e.getAttribute("rowspan")||"1",10);o>=i&&(o=i-1);try{r.getCell(t,o).value=n;for(let e=1;e<a;e++)o+e<i&&(r.getCell(t,o+e).value="");if(s>1)for(let e=0;e<a;e++)o+e<i&&(l[o+e]=s-1);o+=a,o>=i&&(o=i-1)}catch(e){console.error("Error setting cell value:",e)}}))}))}else""===e.EditorValue||e.IsApplied?o.insertParagraph(`#${e.DisplayName}#`,Word.InsertLocation.before):_(e.EditorValue).split(/\r?\n/).forEach((e=>{o.insertParagraph(e,Word.InsertLocation.before)}));await n.sync()}catch(e){console.error("Detailed error:",e)}}))}(e,e.ComponentKeyDataType),n.innerHTML=""},n.appendChild(t)}))):n.innerHTML=""}t.addEventListener("input",o)}}()})),document.getElementById("glossary").addEventListener("click",(()=>{B("formatDropdown"),async function(){y||(document.getElementById("app-body").innerHTML='\n  <div id="button-container">\n\n          <div class="loader" id="loader"></div>\n\n        <div id="highlighted-text"></div>',G())}()})),document.getElementById("aitag").addEventListener("click",(()=>{B("aitag"),j()})),document.getElementById("selectFormat").addEventListener("click",(()=>{B("formatDropdown"),A()})),document.getElementById("removeFormatting").addEventListener("click",(()=>{B("formatDropdown"),async function(){if(!y){d&&await U();const e='\n      <div class="container mt-3">\n        <div class="card">\n          <div class="card-header">\n            <h5 class="card-title">Are you sure you want to remove formatted text ?</h5>\n          </div>\n          <div class="card-body">\n          <div id="format-details">\n              <h5>Selected Formatting:</h5>\n              <ul id="format-list" class="list-unstyled mb-3"></ul>\n              <small class="text-secondary font-italic" id="warning-rem-fmt"></small>\n             \n            </div>\n               \x3c!-- Buttons for Capture and Empty Format --\x3e\n            <div class="d-flex justify-content-end mt-2">\n              <button id="change-ft-btn" class="btn btn-danger bg-danger-clr px-3 me-2"><i class="fa fa-reply me-2"></i>Cancel</button>\n              <button id="clear-ft-btn" class="btn btn-success bg-success-clr px-3"><i class="fa fa-check-circle me-2"></i>Yes</button>\n\n            </div>\n\n            \n          </div>\n        </div>\n      </div>\n    ';document.getElementById("app-body").innerHTML=e,T(),null===f["Background Color"]&&"#000000"===f["Text Color"]&&(document.getElementById("warning-rem-fmt").innerHTML="Warning : The captured formatting is broad. This might result in unintended text removal throughout the document. Proceed?"),document.getElementById("clear-ft-btn").addEventListener("click",C),document.getElementById("change-ft-btn").addEventListener("click",A)}}()})),document.getElementById("logout").addEventListener("click",P),u=c.Data,e=u.SourceTypeList.filter((e=>""!==e.SourceValue&&/\.\w+$/.test(e.SourceValue))).map((e=>({...e,SourceName:Y(e.SourceValue)}))),b=u.ClientID;const p=c.Data.Group.find((e=>"AIGroup"===e.DisplayName));m=p?p.Name:"",s=p?p.GroupKey:[],l=c.Data.GroupKeyAll.filter((e=>"TABLE"===e.ComponentKeyDataType||"TEXT"===e.ComponentKeyDataType)),async function(){try{const e=await fetch(`${n}/api/client/all/${v}`,{method:"GET",headers:{Authorization:`Bearer ${t}`}});if(!e.ok)throw new Error("Network response was not ok.");const o=await e.json();E=o.Data}catch(e){}}(),"AIpanel"===i&&j()}catch(e){console.error("Error fetching glossary data:",e)}}function B(e){["mention","aitag","selectFormat","removeFormatting","formatDropdown"].forEach((t=>{const n=document.getElementById(t);n&&(t===e?n.classList.add("active"):n.classList.remove("active"))}))}async function A(){if(!y){d&&await U();const e='\n      <div class="container mt-3">\n        <div class="card">\n          <div class="card-header">\n               \x3c!-- Buttons for Capture and Empty Format --\x3e\n            <div class="d-flex justify-content-end">\n              <button id="capture-format-btn" class="btn btn-primary bg-primary-clr"><i class="fa fa-border-style me-1"></i>  Capture Format</button>\n            </div>\n            \x3c!-- <h5 class="card-title">Formatting Options</h5> --\x3e\n          </div>\n          <div class="card-body">\n          <div class="formating-checkbox">\n               <input type="checkbox" id="empty-format-checkbox" class="form-check-input">\n              <label for="empty-format-checkbox" class="form-check-label empty-format-checkbox-label" style="flex: 1;">\n                   Skip ignoring and removing format-based text\n              </label>\n            </div>\n\n            \x3c!-- Section to display captured formatting --\x3e\n            <div id="format-details">\n              <h5 class="my-3">Selected Formatting:</h5>\n              <ul id="format-list" class="list-unstyled"></ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    ';document.getElementById("app-body").innerHTML=e,0===Object.keys(f).length&&(document.getElementById("format-details").style.display="none"),document.getElementById("glossary").disabled=!0,g?D():null===f.Bold||void 0===f.Bold||"Mixed"===f.Underline||void 0===f.Underline||null===f.Size||void 0===f.Size||null===f["Font Name"]||void 0===f["Font Name"]||""===f["Background Color"]||void 0===f["Background Color"]||""===f["Text Color"]||void 0===f["Text Color"]?(document.getElementById("format-list").innerHTML="<p>Multiple style values found. Try again</p>",document.getElementById("removeFormatting").disabled=!0):(document.getElementById("removeFormatting").disabled=!1,T()),document.getElementById("capture-format-btn").addEventListener("click",S);const t=document.getElementById("empty-format-checkbox");h&&(t.checked=!0,D()),t.addEventListener("change",(()=>{t.checked?(h=!0,D()):(document.getElementById("capture-format-btn").disabled=!1,h=!1,g=!1,document.getElementById("glossary").disabled=!0)}))}}function T(){g=!1;const e=document.getElementById("format-list");e.innerHTML="";for(const[t,n]of Object.entries(f))e.innerHTML+="Text Color"!==t&&"Background Color"!==t||!n?`<li><strong>${t}:</strong> ${n}</li>`:`\n        <li><strong>${t}:</strong>${n}\n          <span style="display:inline-block;width:15px;height:15px;background-color:${n};border:1px solid black;"></span>\n        </li>\n      `}function D(){f={},document.getElementById("format-details").style.display="none",g=!0,document.getElementById("glossary").disabled=!1,document.getElementById("capture-format-btn").disabled=!0,document.getElementById("removeFormatting").disabled=!0,console.log("Captured formatting cleared.")}async function S(){try{await Word.run((async e=>{const t=e.document.getSelection().font;t.load(["bold","italic","underline","size","highlightColor","name","color"]),await e.sync(),f={Bold:t.bold,Italic:t.italic,Underline:t.underline,Size:t.size,"Background Color":t.highlightColor,"Font Name":t.name,"Text Color":t.color},document.getElementById("format-details").style.display="block",null===f.Bold||"Mixed"===f.Underline||null===f.Size||null===f["Font Name"]||""===f["Background Color"]||""===f["Text Color"]?(document.getElementById("format-list").innerHTML="<p>Multiple style values found. Try again</p>",document.getElementById("removeFormatting").disabled=!0):(document.getElementById("removeFormatting").disabled=!1,T())}))}catch(e){console.error("Error capturing formatting:",e)}}async function C(){try{await Word.run((async e=>{document.getElementById("clear-ft-btn").innerHTML='<i class="fa fa-spinner fa-spin text-white me-2"></i>Yes',document.getElementById("clear-ft-btn").disabled=!0,document.getElementById("change-ft-btn").disabled=!0;const t=e.document.body.paragraphs;t.load("items"),await e.sync();for(const n of t.items)if(""!==n.text.trim()){const t=n.split([" "]);t.load("items, font"),await e.sync();for(const o of t.items){const t=o.font;t.load(["bold","italic","underline","size","highlightColor","name","color"]),await e.sync(),t.highlightColor===f["Background Color"]&&t.color===f["Text Color"]&&t.bold===f.Bold&&t.italic===f.Italic&&t.size===f.Size&&t.underline===f.Underline&&t.name===f["Font Name"]&&(t.highlightColor="#FFFFFF",t.color="#000000",t.bold=!1,t.italic=!1,t.underline="None",n.insertText(" ",Word.InsertLocation.replace))}}await e.sync(),f={},document.getElementById("format-details").style.display="none",g=!0,h=!0,document.getElementById("glossary").disabled=!1,A()}))}catch(e){console.error("Error removing formatted text:",e)}}async function H(e,o){if(e.FilteredReportHeadAIHistoryList&&0!==e.FilteredReportHeadAIHistoryList.length||await async function(e){try{const o=await fetch(`${n}/api/report/ai-history/${e.ID}`,{method:"GET",headers:{Authorization:`Bearer ${t}`}});if(!o.ok)throw new Error("Network response was not ok.");const a=await o.json();return e.ReportHeadAIHistoryList=a.Data||[],e.FilteredReportHeadAIHistoryList=[],e.ReportHeadAIHistoryList.forEach(((t,n)=>{t.Response=_(t.Response),e.FilteredReportHeadAIHistoryList.unshift(t)})),e.FilteredReportHeadAIHistoryList}catch(e){return console.error("Error fetching AI history:",e),[]}}(e),e.FilteredReportHeadAIHistoryList.length>0){const t=e.FilteredReportHeadAIHistoryList.map(((e,t)=>`<div class="row chatbox m-0 p-0">\n        <div class="col-md-12 mt-2 p-2">\n          <span class="ms-3">\n            <i class="fa fa-copy text-secondary c-pointer" title="Copy Response" id="copyPrompt-${o}-${t}"></i>\n          </span>\n          <span class="float-end w-75 me-3">\n            <div class="form-control h-34 d-flex align-items-center dynamic-height user">\n              ${e.Prompt}\n            </div>\n          </span>\n        </div>\n        <div class="col-md-12 mt-2 p-2 d-flex align-items-center">\n          <span class="radio-select">\n            <input class="form-check-input c-pointer" type="radio" name="flexRadioDefault-${o}"\n              id="flexRadioDefault1-${o}-${t}" ${1===e.Selected?"checked":""}>\n          </span>\n          <span class="ms-2 w-75">\n            <div class="form-control h-34 d-flex align-items-center dynamic-height ai-reply ${1===e.Selected?"ai-selected-reply":"bg-light"}" id='selected-response-${o}${t}'>\n              ${e.Response}\n            </div>\n          </span>\n          <span class="ms-2">\n            <i class="fa fa-copy text-secondary c-pointer" title="Copy Response" id="copyResponse-${o}-${t}"></i>\n          </span>\n        </div>\n\n\n      </div>`)).join("");return setTimeout((()=>{e.FilteredReportHeadAIHistoryList.forEach(((t,n)=>{document.getElementById(`copyPrompt-${o}-${n}`)?.addEventListener("click",(()=>M(t.Prompt))),document.getElementById(`copyResponse-${o}-${n}`)?.addEventListener("click",(()=>M(t.Response))),document.getElementById(`flexRadioDefault1-${o}-${n}`)?.addEventListener("change",(()=>W(e,o,n)))}))}),0),t}return"<div>No AI history available.</div>"}function N(e,t,n,o,a){const i=n.IsApplied?"text-secondary":"",s=n.Sources?`  <span class="tooltiptext">${n.Sources}</span>`:"";return`\n    <div class="accordion-item">\n      <h2 class="accordion-header" id="${e}">\n     <button class="accordion-button collapsed ${i} d-flex justify-content-between align-items-center"\n        type="button"\n        data-bs-toggle="collapse"\n        data-bs-target="#${t}"\n        aria-expanded="false"\n        aria-controls="${t}">\n    <span id="tagname-${a}">${n.DisplayName}</span>\n</button>\n\n      </h2>\n      <div id="${t}"\n           class="accordion-collapse collapse"\n           aria-labelledby="${e}"\n           data-bs-parent="#accordionExample">\n        <div class="accordion-body p-0" id="accordion-body-${a}">\n          <div class="chatbox" id="selected-response-parent-${a}">\n            ${o}\n          </div>\n          <div class="form-check form-switch chatbox m-0">\n            <label class="form-check-label pb-3" for="doNotApply-${a}">\n              <span class="fs-12">Do not apply</span>\n            </label>\n            <input class="form-check-input"\n                   type="checkbox"\n                   id="doNotApply-${a}"\n                   ${n.IsApplied?"checked":""}>\n          </div>\n          <div class="d-flex align-items-end justify-content-end chatbox p-2">\n            <textarea class="form-control"\n                      rows="5"\n                      id="chatbox-${a}"\n                      placeholder="Type here"></textarea>\n                <div id="mention-dropdown-${a}" class="dropdown-menu"></div>\n            <div class="d-flex flex-column align-self-end me-3">\n            <button class="btn btn-secondary text-light ms-2 mb-2 ngb-tooltip" id="insert-tag-${a}">\n            <span class="tooltiptext">Insert</span>\n                <i class="fa fa-plus text-light c-pointer" ></i>\n                </button>\n            <button\n                    class="btn btn-secondary ms-2 mb-2 text-white ngb-tooltip"\n                    id="changeSource-${a}">\n                    ${s}\n              <i class="fa fa-file-lines text-white"></i>\n            </button>\n            <button type="submit"\n                    class="btn btn-primary bg-primary-clr ms-2 text-white"\n                    id="sendPrompt-${a}">\n              <i class="fa fa-paper-plane text-white"></i>\n            </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>`}async function F(e,o,a){a.IsApplied=e.target.checked;let i=document.getElementById(`changeSource-${o}`);i.disabled=!0;const s=e.target.checked,r=document.getElementById(`tagname-${o}`),c=document.getElementById(`doNotApply-${o}`);try{c.disabled=!0;const e=await fetch(`${n}/api/report/head/groupkey`,{method:"PUT",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify(a)});if(!e.ok)throw c.disabled=!1,new Error("Network response was not ok.");const o=await e.json();o.Data&&o.Status,i.disabled=!1,c.disabled=!1}catch(e){c.disabled=!1,i.disabled=!1,console.error("Error updating do not apply:",e)}if(r){const e=l.find((e=>a.DisplayName===e.DisplayName));s?(e&&(e.IsApplied=!0),r.classList.add("text-secondary")):(e&&(e.IsApplied=!1),r.classList.remove("text-secondary"))}}async function R(e,o,a){if(""===o||y)console.error("No empty prompt allowed");else{let i=document.getElementById(`changeSource-${a}`);i.disabled=!0,y=!0;const s=document.getElementById(`sendPrompt-${a}`);s.innerHTML='<i class="fa fa-spinner fa-spin text-white"></i>';const r={ReportHeadID:e.FilteredReportHeadAIHistoryList[0].ReportHeadID,DocumentID:u.NCTID,DocumentType:u.DocumentType,TextSetting:u.TextSetting,DocumentTemplate:u.ReportTemplate,ReportHeadGroupKeyID:e.FilteredReportHeadAIHistoryList[0].ReportHeadGroupKeyID,ThreadID:e.ThreadID,AssistantID:u.AssistantID,Container:u.Container,GroupName:m,Prompt:o,PromptType:1,Response:"",VectorID:u.VectorID,Selected:0,ID:0,SourceValue:e.SourceValue?e.SourceValue:[]};try{const o=await fetch(`${n}/api/report/ai-history/add`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify(r)});if(!o.ok)throw new Error("Network response was not ok.");const l=await o.json();if(l.Data&&"false"!==l.Data){e.ReportHeadAIHistoryList=JSON.parse(JSON.stringify(l.Data)),e.FilteredReportHeadAIHistoryList=[],e.ReportHeadAIHistoryList.forEach((t=>{t.Response=_(t.Response),e.FilteredReportHeadAIHistoryList.unshift(t)}));const t=document.getElementById(`selected-response-parent-${a}`);if(t){const n=await H(e,a);t.innerHTML=n}e.FilteredReportHeadAIHistoryList.forEach(((t,n)=>{document.getElementById(`copyPrompt-${a}-${n}`)?.addEventListener("click",(()=>M(t.Prompt))),document.getElementById(`copyResponse-${a}-${n}`)?.addEventListener("click",(()=>M(t.Response))),document.getElementById(`flexRadioDefault1-${a}-${n}`)?.addEventListener("change",(()=>W(e,a,n)))})),s.innerHTML='<i class="fa fa-paper-plane text-white"></i>',document.getElementById(`chatbox-${a}`).value="",y=!1,i.disabled=!1}else s.innerHTML='<i class="fa fa-paper-plane text-white"></i>',y=!1,i.disabled=!1}catch(e){s.innerHTML='<i class="fa fa-paper-plane text-white"></i>',y=!1,i.disabled=!1,console.error("Error sending AI prompt:",e)}}}function M(e){const t=document.createElement("textarea");t.value=e,document.body.appendChild(t),t.select(),document.execCommand("copy"),document.body.removeChild(t)}async function P(){d&&await U(),sessionStorage.clear(),window.location.hash="#/new",r=!0,document.getElementById("logo-header").innerHTML="",document.getElementById("header").innerHTML="",x()}async function j(){d&&await U(),document.getElementById("app-body").innerHTML='\n  <div class="d-flex justify-content-between px-2">\n      <button class="btn btn-primary btn-sm bg-primary-clr c-pointer text-white  mb-3 mt-2 px-3 py-2" id="addgenaitag">\n        <i class="fa fa-plus text-light px-1"></i>\n        Add\n    </button>\n\n     <button class="btn btn-primary btn-sm bg-primary-clr c-pointer text-white mb-3 mt-2 px-3 py-2" id="applyAITag">\n        <i class="fa fa-robot text-light px-1"></i>\n        Apply\n    </button>\n    </div>\n\n    <div class="card-container"  id="card-container">\n    </div>\n  ';const e=document.getElementById("card-container");document.getElementById("applyAITag").addEventListener("click",O),document.getElementById("addgenaitag").addEventListener("click",J);for(let t=0;t<s.length;t++){const n=s[t],o=document.createElement("div");o.classList.add("accordion"),o.id=`accordion-item-${t}`;const a=`flush-headingOne-${t}`,i=`flush-collapseOne-${t}`,r=await H(n,t);o.innerHTML=N(a,i,n,r,t),e.appendChild(o),K(`chatbox-${t}`,`mention-dropdown-${t}`,"edit"),document.getElementById(`doNotApply-${t}`)?.addEventListener("change",(()=>F(event,t,n))),document.getElementById(`sendPrompt-${t}`)?.addEventListener("click",(()=>{const e=document.getElementById(`chatbox-${t}`).value;R(n,e,t)})),document.getElementById(`insert-tag-${t}`)?.addEventListener("click",(()=>{z(t)})),document.getElementById(`changeSource-${t}`)?.addEventListener("click",(()=>{X(t,n,r)}))}document.querySelectorAll(".accordion-button").forEach((e=>{e.addEventListener("click",(function(){const e=this.nextElementSibling;e&&e.classList&&e.classList.toggle("show")}))})),document.querySelectorAll(".fa-copy").forEach((e=>{e.addEventListener("click",(function(){this.closest(".p-2").querySelector(".form-control").textContent}))}))}async function z(e){return Word.run((async t=>{try{const n=t.document.getSelection();if(await t.sync(),!n)throw new Error("Selection is invalid or not found.");""===s[e].EditorValue?n.insertParagraph(`#${s[e].DisplayName}#`,Word.InsertLocation.before):_(s[e].EditorValue).split(/\r?\n/).forEach((e=>{n.insertParagraph(e,Word.InsertLocation.before)})),await t.sync()}catch(e){console.error("Detailed error:",e)}}))}async function O(){return Word.run((async e=>{try{const t=e.document.body;e.load(t,"text"),await e.sync();for(let n=0;n<s.length;n++){const o=s[n];o.EditorValue=_(o.EditorValue);const a=t.search(`#${o.DisplayName}#`,{matchCase:!1,matchWholeWord:!1});e.load(a,"items"),await e.sync(),console.log(`Found ${a.items.length} instances of #${o.DisplayName}#`),a.items.forEach((e=>{""===o.EditorValue||o.IsApplied||e.insertText(o.EditorValue,Word.InsertLocation.replace)})),await e.sync()}await e.sync()}catch(e){console.error("Error during tag application:",e)}}))}async function W(e,o,a){if(!y){y=!0,document.getElementById(`sendPrompt-${o}`).innerHTML='<i class="fa fa-spinner fa-spin text-white"></i>';const i=e.FilteredReportHeadAIHistoryList[a];let s=JSON.parse(JSON.stringify(i));s.Container=u.Container,s.Selected=1;const r=l.find((t=>t.DisplayName===e.DisplayName));r&&(r.EditorValue=s.Response);try{const r=await fetch(`${n}/api/report/ai-history/update`,{method:"PUT",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify(s)});if(!r.ok)throw new Error("Network response was not ok.");const l=await r.json();if(l.Data){e.ReportHeadAIHistoryList=JSON.parse(JSON.stringify(l.Data)),e.FilteredReportHeadAIHistoryList=[],e.ReportHeadAIHistoryList.forEach((t=>{t.Response=_(t.Response),e.FilteredReportHeadAIHistoryList.unshift(t)}));document.getElementById(`selected-response-parent-${o}`).querySelectorAll(".ai-selected-reply").forEach((e=>{e.classList.remove("ai-selected-reply"),e.classList.add("bg-light")}));const t=document.getElementById(`selected-response-${o}${a}`);t&&(t.classList.remove("bg-light"),t.classList.add("ai-selected-reply")),e.UserValue=i.Response,e.EditorValue=i.Response,e.text=i.Response}}catch(e){console.error("Error updating AI data:",e)}finally{document.getElementById(`sendPrompt-${o}`).innerHTML='<i class="fa fa-paper-plane text-white"></i>',y=!1}}}function G(){document.getElementById("app-body").innerHTML='\n        <div id="button-container">\n          <button class="btn btn-secondary me-2 mark-glossary btn-sm" id="applyglossary">Apply Glossary</button>\n        </div>\n  ',document.getElementById("applyglossary").addEventListener("click",q)}async function q(){document.getElementById("app-body").innerHTML='\n  <div id="button-container">\n\n          <div class="loader" id="loader"></div>\n\n        <div id="highlighted-text"></div>';try{await Word.run((async e=>{const o=e.document.body;o.load("text"),await e.sync();const a={Content:o.text.replace(/[\n\r]/g," ")};try{const e=await fetch(`${n}/api/glossary-template/client-id/${u?.ClientID}`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify(a)});if(!e.ok)throw new Error("Network response was not ok.");const o=await e.json();p=o.Data,o.Data.length>0?(c=o.Data[0].GlossaryTemplate,G()):document.getElementById("app-body").innerHTML='\n       <p class="text-center">Data not available<p/>\n  '}catch(e){console.error("Error fetching glossary data:",e)}const i=p.map((e=>{const t=o.search(e.ClinicalTerm,{matchCase:!1,matchWholeWord:!1});return t.load("items"),t}));await e.sync();for(const t of i)for(const n of t.items){const t=n.font;t.load(["bold","italic","underline","size","highlightColor","name","color"]),await e.sync(),t.highlightColor===f["Background Color"]&&t.color===f["Text Color"]&&t.bold===f.Bold&&t.italic===f.Italic&&t.size===f.Size&&t.underline===f.Underline&&t.name===f["Font Name"]||(t.highlightColor="yellow")}d=!0,document.getElementById("app-body").innerHTML='\n      <div id="button-container">\n        <button class="btn btn-secondary me-2 clear-glossary btn-sm" id="clearGlossary">Clear Glossary</button>\n      </div>\n\n      <div id="highlighted-text"></div>\n      <div class="d-flex justify-content-center box-loader">\n       <div class="loader" id="loader"></div></div>\n      \n',document.getElementById("loader").style.display="none",await e.sync(),document.getElementById("clearGlossary").addEventListener("click",U),Office.context.document.addHandlerAsync(Office.EventType.DocumentSelectionChanged,V)})),console.log("Glossary applied successfully")}catch(e){console.error("Error applying glossary:",e),console.log("Error applying glossary. Please try again.")}}async function V(){await async function(){try{await Word.run((async e=>{const t=e.document.getSelection();if(t.load("text, font.highlightColor"),await e.sync(),t.text){const n=document.getElementById("loader");n&&(n.style.display="block");const o=p.map((e=>{const n=t.search(e.ClinicalTerm,{matchCase:!1,matchWholeWord:!1});return n.load("items"),n}));await e.sync();const a=[];for(const t of o)for(const n of t.items){const t=n.font;t.load(["bold","italic","underline","size","highlightColor","name","color"]),await e.sync(),t.highlightColor===f["Background Color"]&&t.color===f["Text Color"]&&t.bold===f.Bold&&t.italic===f.Italic&&t.size===f.Size&&t.underline===f.Underline&&t.name===f["Font Name"]||a.push(n.text)}!function(e){const t=document.getElementById("highlighted-text");if(t){t.innerHTML="";const n=document.getElementById("loader");n.style.display="block";const o={};e.forEach((e=>{p.forEach((t=>{t.ClinicalTerm.toLowerCase()===e.toLowerCase()&&(o[t.ClinicalTerm]||(o[t.ClinicalTerm]=[]),o[t.ClinicalTerm].includes(t.LayTerm)||o[t.ClinicalTerm].push(t.LayTerm))}))})),Object.keys(o).forEach((e=>{const n=document.createElement("div");n.className="box";const a=document.createElement("h3");a.textContent=`${e} (${c})`,n.appendChild(a),o[e].forEach((t=>{const o=document.createElement("div");o.className="sub-box",o.textContent=t,o.addEventListener("click",(async()=>{await async function(e,t){const n=document.getElementById("loader");n.style.display="block";try{await Word.run((async o=>{const a=o.document.getSelection();if(a.load("text"),await o.sync(),a.text.toLowerCase().includes(e.toLowerCase())){const i=a.search(e,{matchCase:!1,matchWholeWord:!1});i.load("items"),await o.sync(),i.items.forEach((e=>{e.insertText(t,"replace"),e.font.highlightColor="white"})),await o.sync(),n.style.display="none",console.log(`Replaced '${e}' with '${t}' and removed highlight in the document.`)}else n.style.display="none",console.log(`Selected text does not contain '${e}'.`)}))}catch(e){n.style.display="none",console.error("Error replacing term:",e)}}(e,t),n.remove()})),n.appendChild(o)})),t.appendChild(n)})),n.style.display="none"}}(a),await e.sync()}else console.log("No text is selected.")}))}catch(e){console.error("Error displaying glossary:",e)}}()}async function U(){try{await Word.run((async e=>{document.getElementById("app-body").innerHTML='\n      <div id="button-container">\n    \n              <div class="loader" id="loader"></div>\n    \n            <div id="highlighted-text"></div>';const t=e.document.body,n=p.map((e=>{const n=t.search(e.ClinicalTerm,{matchCase:!1,matchWholeWord:!1});return n.load("items"),n}));await e.sync();for(const t of n)for(const n of t.items){const t=n.font;t.load(["bold","italic","underline","size","highlightColor","name","color"]),await e.sync(),t.highlightColor===f["Background Color"]&&t.color===f["Text Color"]&&t.bold===f.Bold&&t.italic===f.Italic&&t.size===f.Size&&t.underline===f.Underline&&t.name===f["Font Name"]||(t.highlightColor="#FFFFFF")}document.getElementById("app-body").innerHTML='\n      <div id="button-container">\n        <button class="btn btn-secondary me-2 mark-glossary btn-sm" id="applyglossary">Apply Glossary</button>\n      </div>\n',await e.sync(),d=!1,document.getElementById("applyglossary").addEventListener("click",q)})),console.log("Glossary cleared successfully")}catch(e){console.error("Error clearing glossary:",e)}}async function J(){if(!y){d&&await U();let e=E.filter((e=>e.ID===b));const o=`\n      <div class="modal-dialog">\n        <div class="modal-content">\n          <div class="modal-body p-3">\n            <form id="genai-form" autocomplete="off" novalidate>\n              \x3c!-- Name Field --\x3e\n              <div class="mb-3">\n                <label for="name" class="form-label"><span class="text-danger">*</span> Name</label>\n                <input type="text" class="form-control" id="name" required>\n                <div class="invalid-feedback">Name is required.</div>\n                <div id="submition-error" class="invalid-feedback" style="display: none;"></div>\n\n              </div>\n\n              \x3c!-- Description Field --\x3e\n              <div class="mb-3">\n                <label for="description" class="form-label">Description</label>\n                <textarea class="form-control" id="description" rows="6"></textarea>\n              </div>\n\n              \x3c!-- Prompt Field --\x3e\n              <div class="mb-3">\n                <label for="prompt" class="form-label"><span class="text-danger">*</span> Prompt \n                  <small class="text-secondary">(Note: Use # tag for content suggestions)</small>\n                </label>\n                <textarea class="form-control" id="prompt" rows="6"  required></textarea>\n                <div class="invalid-feedback">Prompt is required.</div>\n                <div id="mention-dropdown" class="dropdown-menu"></div>\n              </div>\n\n              \x3c!-- Save Globally Checkbox --\x3e\n              <div class="form-check mb-3">\n                <input type="checkbox" class="form-check-input" id="saveGlobally">\n                <label class="form-check-label" for="saveGlobally">Save Globally</label>\n              </div>\n\n              \x3c!-- Available to All Sponsors Checkbox --\x3e\n              <div class="form-check mb-3">\n                <input type="checkbox" class="form-check-input" id="isAvailableForAll" disabled>\n                <label class="form-check-label" for="isAvailableForAll">Available to All Sponsors</label>\n              </div>\n\n              \x3c!-- Sponsor Dropdown --\x3e\n              <div class="mb-3">\n                <label for="sponsor" class="form-label"><span class="text-danger">*</span> Sponsor</label>\n                <div class="dropdown w-100">\n                  <button \n                    class="btn btn-white border w-100 text-start d-flex justify-content-between align-items-center dropdown-toggle" \n                    type="button" \n                    id="sponsorDropdown" \n                    data-bs-toggle="dropdown" \n                    aria-expanded="false" \n                    disabled>\n                    <span id="sponsorDropdownLabel">Select Sponsors</span>\n                    <span class="dropdown-toggle-icon"></span>\n                  </button>\n                  <ul class="dropdown-menu w-100 p-2" aria-labelledby="sponsorDropdown" style="box-shadow: 0 4px 8px rgba(0,0,0,0.1);">\n                    <li class="dropdown-item p-2" style="cursor: pointer;">\n                      <div class="form-check">\n                        <input class="form-check-input" type="checkbox" value="selectAll" id="selectAll">\n                        <label class="form-check-label" for="selectAll">Select All</label>\n                      </div>\n                    </li>\n                    ${E.map((t=>{const n=e.some((e=>e.ID===t.ID));return` \n        <li class="dropdown-item p-2" style="cursor: pointer;">\n          <div class="form-check">\n            <input class="form-check-input" type="checkbox" value="${t.ID}" id="sponsor${t.ID}" ${n?"checked disabled":""}>\n            <label class="form-check-label text-prewrap" for="sponsor${t.ID}">${t.Name}</label>\n          </div>\n        </li>\n      `})).join("")}\n                  </ul>\n                </div>\n              </div>\n\n              \x3c!-- Action Buttons --\x3e\n              <div class="text-end mt-3">\n                <button id="cancel-btn-gen-ai" class="btn btn-danger bg-danger-clr px-3 me-2"><i class="fa fa-reply me-2"></i>Cancel</button>\n                <button type="submit" class="btn btn-success bg-success-clr" id="text-gen-save"><i class="fa fa-check-circle me-2"></i>Save</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>`;document.getElementById("app-body").innerHTML=o,K("prompt","mention-dropdown","add");const a=document.getElementById("genai-form"),i=document.getElementById("prompt"),s=document.getElementById("name"),r=document.getElementById("description"),l=document.getElementById("saveGlobally"),c=document.getElementById("isAvailableForAll"),m=document.getElementById("sponsorDropdown"),p=document.querySelectorAll(".dropdown-item .form-check-input");if(document.getElementById("cancel-btn-gen-ai").addEventListener("click",j),a&&s&&i&&p.length>0){const o=()=>{if(c.checked)m.textContent=E.map((e=>e.Name)).join(", ");else{const e=Array.from(p).filter((e=>e.checked&&"selectAll"!==e.id)).map((e=>e.parentElement.textContent.trim()));m.textContent=e.length?e.join(", "):"Select Sponsors"}};a.addEventListener("submit",(function(e){e.preventDefault(),a.querySelectorAll(".is-invalid").forEach((e=>e.classList.remove("is-invalid")));let o=!0;if(s.value.trim()||(s.classList.add("is-invalid"),o=!1),i.value.trim()||(i.classList.add("is-invalid"),o=!1),o){const e=Array.from(p).filter((e=>e.checked&&"selectAll"!==e.id)).map((e=>E.find((t=>t.ID==e.value)))),o=c.checked,a=l.checked,d=u.Group.find((e=>"AIGroup"===e.DisplayName));!async function(e){try{const o=document.getElementById("text-gen-save"),a=document.getElementById("aitag"),i=document.getElementById("mention"),s=document.getElementById("formatDropdown"),r=document.getElementById("cancel-btn-gen-ai");a.disabled=!0,r.disabled=!0,i.disabled=!0,s.disabled=!0,o.innerHTML='<i class="fa fa-spinner fa-spin text-white me-2"></i>Save',o.disabled=!0;const l=await fetch(`${n}/api/report/group-key/add`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify(e)});if(!l.ok)throw new Error("Network response was not ok.");const c=await l.json();c.Data&&c.Status?L("AIpanel"):(a.disabled=!1,r.disabled=!1,i.disabled=!1,s.disabled=!1,o.disabled=!1,o.innerHTML='<i class="fa fa-check-circle me-2"></i>Save',function(e){const t=document.getElementById("submition-error");t.style.display="block",t.textContent=e}(c.Data))}catch(e){console.error("Error creating text generation tag:",e)}}({DisplayName:s.value.trim(),Prompt:i.value.trim(),Description:r.value.trim(),GroupKeyClient:e,AllClient:o?1:0,SaveGlobally:a,UserDefined:"1",ComponentKeyDataTypeID:"1",ComponentKeyDataAccessID:"3",AIFlag:1,DocumentTypeID:u.DocumentTypeID,ReportHeadID:u.ID,SourceTypeID:"",ReportHeadGroupID:d.ID,ReportHeadSourceID:""})}}));const d=()=>{p.forEach((e=>{e.disabled||(e.checked=!0,e.disabled=!0)})),o()},y=()=>{p.forEach((t=>{e.some((e=>e.ID===parseInt(t.value)))||(t.disabled=!1)})),o()};l.addEventListener("change",(function(){this.checked?(c.disabled=!1,m.disabled=!1):(y(),c.checked=!1,c.disabled=!0,m.disabled=!0,p.forEach((e=>{e.disabled||(e.checked=!1,e.disabled=!1)})),o())})),c.addEventListener("change",(function(){this.checked?d():y()})),document.querySelectorAll(".dropdown-item").forEach((e=>{e.addEventListener("click",(function(e){e.stopPropagation();const t=this.querySelector(".form-check-input");if(t){if(t.disabled||(t.checked=!t.checked),"selectAll"===t.id){const e=t.checked;p.forEach((t=>{t.disabled||(t.checked=e)}))}o()}}))})),o(),[s,i].forEach((e=>{e.addEventListener("input",(function(){this.classList.contains("is-invalid")&&this.value.trim()&&this.classList.remove("is-invalid"),s&&(document.getElementById("submition-error").style.display="none")}))}))}else console.error("Required elements are missing or not rendered yet.")}}function K(e,t,n){let o=-1;const a=document.getElementById(`${e}`),i=document.getElementById(`${t}`);if(a){function s(e){const t=document.querySelectorAll(`#${e} .dropdown-item`),n=(document.getElementById(`${e}`),t.length);if(t.forEach((e=>e.classList.remove("active"))),o>=0&&o<n){const e=t[o];e.classList.add("active"),e.scrollIntoView({behavior:"smooth",block:"nearest"})}}a.addEventListener("input",(e=>{const t=a.selectionStart,o=a.value.slice(0,t),s=o.lastIndexOf("#");if(-1!==s){const e=o.slice(s+1).trim();if(e.length>0){const t=(e=>l.filter((e=>0===e.AIFlag)).filter((t=>t.DisplayName.toLowerCase().includes(e.toLowerCase()))))(e);if(t.length>0){i.innerHTML=t.map((e=>{let t="";return t="add"===n?`#${e.DisplayName}#`:e.EditorValue||`#${e.DisplayName}#`,`<li class="dropdown-item" data-editor-value="${t}">${e.DisplayName}</li>`})).join("");const e=a.getBoundingClientRect();i.style.left=`${e.left}px`,i.style.bottom="75px",i.style.display="block"}else i.style.display="none"}else i.style.display="none"}else i.style.display="none"})),a.addEventListener("keydown",(e=>{const n=document.querySelectorAll(`#${t} .dropdown-item`),a=n.length;if("ArrowDown"===e.key)e.preventDefault(),o<a-1?o++:o=0,s(`${t}`);else if("ArrowUp"===e.key)e.preventDefault(),o>0?o--:o=a-1,s(`${t}`);else if("Enter"===e.key&&-1!==o){const t=n[o];t&&(r(t.getAttribute("data-editor-value")),i.style.display="none",e.preventDefault())}})),i.addEventListener("click",(e=>{if(e.target&&e.target.matches("li")){const t=e.target.getAttribute("data-editor-value");r(t),i.style.display="none"}}));const r=t=>{const n=document.getElementById(`${e}`),o=n.value,a=n.selectionStart,i=o.slice(0,a),s=o.slice(a),r=i.lastIndexOf("#"),l=i.slice(0,r);n.value=`${l}${t}${s}`;const c=l.length+t.length;n.setSelectionRange(c,c)};document.addEventListener("click",(e=>{i.contains(e.target)||e.target===a||(i.style.display="none")}))}}function _(e){return e?e.replace(/^"|"$/g,"").replace(/\\n/g,"").replace(/\*\*/g,"").replace(/\\r/g,""):""}function Y(e){if(!e||""===e.trim())return e;const t=e.split("_");return t.length<=1?e:t.slice(1).join("_").replace(/%20/g," ").replace(/%25/g,"%")}function X(t,n,o){const a=`\n  <div class='p-3 bg-light'>\n    <div class="mb-3">\n      <label for="source-select-${t}" class="form-label"><span class="text-danger">*</span> Select Sources</label>\n      <div class="dropdown w-100">\n        <button \n          class="btn btn-light border w-100 text-start d-flex justify-content-between align-items-start dropdown-toggle dropdown-toggle-sources" \n          type="button" \n          id="sourceDropdown-${t}" \n          data-bs-toggle="dropdown" \n          aria-expanded="false">\n          <span id="sourceDropdownLabel-${t}" class='sourceDropdownLabel'></span>\n          <span class="dropdown-toggle-icon dropdown-toggle-icon-s"></span>\n        </button>\n        <ul class="dropdown-menu w-100 p-2" aria-labelledby="sourceDropdown-${t}" style="box-shadow: 0 4px 8px rgba(0,0,0,0.1); z-index: 10000;">\n          <li class="dropdown-item p-2" style="cursor: pointer;" data-checkbox-id="selectAll-${t}">\n            <div class="form-check">\n              <input class="form-check-input" type="checkbox" value="selectAll" id="selectAll-${t}">\n              <label class="form-check-label" for="selectAll-${t}">Select All</label>\n            </div>\n          </li>\n          ${e.map(((e,n)=>`\n              <li class="dropdown-item p-2" style="cursor: pointer;" data-checkbox-id="source-${t}-${n}">\n                <div class="form-check">\n                  <input class="form-check-input source-checkbox" type="checkbox" value="${e.SourceName}" id="source-${t}-${n}">\n                  <label class="form-check-label text-prewrap" for="source-${t}-${n}">${e.SourceName}</label>\n                </div>\n              </li>\n            `)).join("")}\n        </ul>\n      </div>\n    </div>\n    <div class="d-flex justify-content-end mt-2">\n      <button id="cancel-src-btn-${t}" class="btn btn-danger bg-danger-clr px-3 me-2"><i class="fa fa-reply me-2"></i>Cancel</button>\n      <button id="ok-src-btn-${t}" class="btn btn-success bg-success-clr px-3"><i class="fa fa-check-circle me-2"></i>Save</button>\n    </div>\n  </div>\n  `,i=document.getElementById(`accordion-body-${t}`);i.style.minHeight="20vh",i.innerHTML=a;let s=[];const r=document.getElementById(`selectAll-${t}`),l=document.querySelectorAll(`#accordion-body-${t} .source-checkbox`),c=document.getElementById(`sourceDropdownLabel-${t}`);function d(){const e=s;e.length>0?c.innerText=e.join(", "):c.innerText=" "}if(r.addEventListener("change",(function(){document.querySelectorAll(`#accordion-body-${t} .source-checkbox`).forEach((e=>{e.checked=this.checked,e.checked?s.includes(e.value)||s.push(e.value):s=s.filter((t=>t!==e.value))})),d()})),l.forEach((e=>{e.addEventListener("change",(function(){e.checked?s.includes(e.value)||s.push(e.value):s=s.filter((t=>t!==e.value));const t=Array.from(l).every((e=>e.checked));r.checked=t,d()})),e.closest("li").addEventListener("click",(function(t){e.checked=!e.checked,e.checked?s.includes(e.value)||s.push(e.value):s=s.filter((t=>t!==e.value));const n=Array.from(l).every((e=>e.checked));r.checked=n,d(),t.stopPropagation()}))})),document.querySelector(`#accordion-body-${t} .dropdown-item[data-checkbox-id="selectAll-${t}"]`).addEventListener("click",(function(e){r.checked=!r.checked;const n=document.querySelectorAll(`#accordion-body-${t} .source-checkbox`);n.forEach((e=>{e.checked=r.checked})),s=r.checked?Array.from(n).map((e=>e.value)):[],d(),e.stopPropagation()})),n.Sources&&n.Sources.length>0){l.forEach((e=>{n.Sources.includes(e.value)&&(e.checked=!0,s.push(e.value))}));const e=Array.from(l).every((e=>e.checked));r.checked=e,d()}document.getElementById(`ok-src-btn-${t}`).addEventListener("click",(function(){n.Sources=[...s],n.SourceValue=e.filter((e=>s.includes(e.SourceName))).map((e=>e.SourceValue)),Q(t,n,o)})),document.getElementById(`cancel-src-btn-${t}`).addEventListener("click",(function(){Q(t,n,o)}))}function Q(e,t,n){const o=t.Sources&&t.Sources.length>0?`  <span class="tooltiptext">${t.Sources}</span>`:"",a=document.getElementById(`accordion-body-${e}`);a.style.minHeight="20vh",a.innerHTML=`\n    <div class="chatbox" id="selected-response-parent-${e}">\n   \n            ${n}\n    </div>\n    <div class="form-check form-switch chatbox m-0">\n        <label class="form-check-label pb-3" for="doNotApply-${e}">\n           <span class="fs-12">Do not apply</span>\n        </label>\n            <input class="form-check-input"\n                   type="checkbox"\n                   id="doNotApply-${e}"\n                   ${t.IsApplied?"checked":""}>\n      </div>\n      <div class="d-flex align-items-end justify-content-end chatbox p-2">\n           <textarea class="form-control"\n                      rows="5"\n                      id="chatbox-${e}"\n                      placeholder="Type here"></textarea>\n              <div id="mention-dropdown-${e}" class="dropdown-menu"></div>\n              <div class="d-flex flex-column align-self-end me-3">\n                <button class="btn btn-secondary text-light ms-2 mb-2 ngb-tooltip" id="insert-tag-${e}">\n                <span class="tooltiptext">Insert</span>\n                <i class="fa fa-plus text-light c-pointer" ></i>\n                </button>\n\n                <button\n                    class="btn btn-secondary ms-2 mb-2 text-white ngb-tooltip"\n                    id="changeSource-${e}">\n                    ${o}\n                 <i class="fa fa-file-lines text-white"></i>\n                </button>\n                <button type="submit"\n                    class="btn btn-primary bg-primary-clr ms-2 text-white"\n                    id="sendPrompt-${e}">\n                  <i class="fa fa-paper-plane text-white"></i>\n               </button>\n             </div>\n          </div>`,K(`chatbox-${e}`,`mention-dropdown-${e}`,"edit"),document.getElementById(`doNotApply-${e}`)?.addEventListener("change",(()=>F(event,e,t))),document.getElementById(`sendPrompt-${e}`)?.addEventListener("click",(()=>{const n=document.getElementById(`chatbox-${e}`).value;R(t,n,e)})),document.getElementById(`insert-tag-${e}`)?.addEventListener("click",(()=>{z(e)})),document.getElementById(`changeSource-${e}`).addEventListener("click",(()=>{X(e,t,n)}))}window.addEventListener("hashchange",(()=>{"#/dashboard"===window.location.hash&&r&&(r=!1,v=Number(sessionStorage.getItem("userId")),L("Init"))})),Office.onReady((e=>{e.host===Office.HostType.Word&&(document.getElementById("app-body").style.display="flex",document.getElementById("footer").innerText=`© ${w} - TrialAssure LINK AI Assistant 1.0.3`,document.getElementById("editor"),window.location.hash="#/login",async function(){try{await Word.run((async e=>{const t=e.document.properties.customProperties;t.load("items"),await e.sync();const n=t.items.find((e=>"DocumentID"===e.key)),o=t.items.find((e=>"Organization"===e.key));if(!n||!o)return document.getElementById("app-body").innerHTML='\n        <p class="px-3 text-center">Export a document from the LINK AI application to use this functionality.</p>',console.log('Custom property "documentID" not found.'),null;a=n.value,i=o.value,x()}))}catch(e){console.error("Error retrieving custom property:",e)}}())}))}(),e=i(14385),t=i.n(e),n=new URL(i(58394),i.b),t()(n)}();
//# sourceMappingURL=taskpane.js.map